import{r as e,o,c,a as n,b as p,F as l,d as s,e as t}from"./app.0374563d.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const r={},i=n("p",null,"\u539F\u6587\u94FE\u63A5\uFF1Ahttps://lucumr.pocoo.org/2022/1/30/unsafe-rust/",-1),k=s("\u7FFB\u8BD1\uFF1A"),d={href:"https://github.com/trdthg",target:"_blank",rel:"noopener noreferrer"},b=s("trdthg"),m=s("\u9009\u9898\uFF1A"),_={href:"https://github.com/trdthg",target:"_blank",rel:"noopener noreferrer"},f=s("trdthg"),g=s("\u672C\u6587\u7531 "),h={href:"https://Rustt.org",target:"_blank",rel:"noopener noreferrer"},y=s("Rustt"),w=s(" \u7FFB\u8BD1\uFF0C"),v={href:"https://studyrust.org",target:"_blank",rel:"noopener noreferrer"},R=s("StudyRust"),q=s(" \u8363\u8A89\u63A8\u51FA"),x=t(`<h1 id="\u672A\u521D\u59CB\u5316\u5185\u5B58-unsafe-rust-\u592A\u96BE\u4E86" tabindex="-1"><a class="header-anchor" href="#\u672A\u521D\u59CB\u5316\u5185\u5B58-unsafe-rust-\u592A\u96BE\u4E86" aria-hidden="true">#</a> \u672A\u521D\u59CB\u5316\u5185\u5B58\uFF1Aunsafe Rust \u592A\u96BE\u4E86</h1><p>Rust \u5728\u5F88\u591A\u610F\u4E49\u4E0A\u4E0D\u4EC5\u4EC5\u662F\u4E00\u4E2A\u73B0\u4EE3\u7684\u7CFB\u7EDF\u7F16\u7A0B\u8BED\u8A00\uFF0C\u4E5F\u662F\u4E00\u4E2A\u5B9E\u7528\u7684\u8BED\u8A00\u3002\u5B83\u627F\u8BFA\u4E86\u81EA\u5DF1\u7684\u5B89\u5168\u6027\uFF0C\u5E76\u4E14\u63D0\u4F9B\u4E86\u4E00\u4E2A\u5B8C\u6574\u7684\u6846\u67B6\uFF0C\u4F7F\u5F97\u521B\u5EFA\u5B89\u5168\u7684\u62BD\u8C61\u6210\u4E3A\u53EF\u80FD\uFF0C\u540C\u65F6\u8FD0\u884C\u65F6\u5F00\u9500\u5F88\u5C0F\u751A\u81F3\u4E3A 0\u3002\u4F60\u53EF\u4EE5\u4F7F\u7528 unsafe \u6765\u660E\u786E\u7684\u8131\u79BB\u5B89\u5168\u7684 Rust\u3002</p><p>\u5982\u679C\u4F60\u4E4B\u524D\u770B\u8FC7\u8FD9\u7BC7\u6587\u7AE0\uFF0C\u4F60\u4F1A\u60CA\u8BB6\u7684\u53D1\u73B0\uFF0C\u5B83\u548C\u4E4B\u524D\u7684\u7248\u672C\u5927\u4E0D\u76F8\u540C\u3002\u8FD9\u7BC7\u6587\u7AE0\u7684\u4F5C\u8005\u662F\u88AB unsafe \u7684\u89C4\u5219\u6240\u56F0\u60D1\u7684\u53D7\u5BB3\u8005\u3002\u6211\u5728\u6587\u7AE0\u4E2D\u589E\u52A0\u4E86\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u7528\u6765\u66F4\u597D\u7684\u5C55\u793A\u5176\u4E2D\u7684\u9677\u9631\u3002\u6211\u4E4B\u524D\u5728 Twitter \u4E0A\u8BF4\u8FC7\uFF0C\u7F16\u5199 unsafe Rust \u6BD4 C / C++ \u66F4\u56F0\u96BE\uFF0C\u6240\u4EE5\u6211\u60F3\u4E3A\u6211\u7684\u89C2\u70B9\u4F5C\u51FA\u4E00\u4E9B\u89E3\u91CA\u3002</p><h2 id="\u4ECE-c-\u5230-rust" tabindex="-1"><a class="header-anchor" href="#\u4ECE-c-\u5230-rust" aria-hidden="true">#</a> \u4ECE C \u5230 Rust</h2><p>\u6211\u4EEC\u4ECE\u4E0B\u9762\u7684\u4F8B\u5B50\u5F00\u59CB\uFF1A\u6211\u4EEC\u6709\u4E00\u4E2A\u5F85\u521D\u59CB\u5316\u7684\u7ED3\u6784\u4F53\u3002\u6BD4\u8F83\u6709\u8DA3\u7684\u5B57\u6BB5\u662F <code>name</code>\u3002\u5B83\u662F\u4E00\u4E2A\u6307\u9488\uFF0C\u6307\u5411\u4E00\u4E2A\u5DF2\u7ECF\u5206\u914D\u597D\u7684\u5B57\u7B26\u4E32\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u5206\u914D\u5230\u54EA\u91CC\u5BF9\u6211\u4EEC\u5E76\u4E0D\u91CD\u8981\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5C06\u8FD9\u4E2A\u7ED3\u6784\u4F53\u81EA\u8EAB\u5206\u914D\u5728\u6808\u4E0A\u3002\u6211\u4EEC\u7684\u60F3\u6CD5\u662F\uFF0C\u5F53\u8FD9\u4E2A\u7ED3\u6784\u4F53\u88AB\u521D\u59CB\u5316\u4E4B\u540E\uFF0C\u5B83\u5C31\u53EF\u4EE5\u88AB\u5B89\u5168\u7684\u4F20\u9012\u548C\u6253\u5370\u3002</p><div class="language-cpp ext-cpp line-numbers-mode"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h&gt;</span></span>

<span class="token keyword">struct</span> <span class="token class-name">role</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">;</span>
    <span class="token keyword">bool</span> disabled<span class="token punctuation">;</span>
    <span class="token keyword">int</span> flag<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">role</span> r<span class="token punctuation">;</span>
    r<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token function">strdup</span><span class="token punctuation">(</span><span class="token string">&quot;basic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    r<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    r<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s (%d, %s)\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>name<span class="token punctuation">,</span> r<span class="token punctuation">.</span>flag<span class="token punctuation">,</span> r<span class="token punctuation">.</span>disabled <span class="token operator">?</span> <span class="token string">&quot;true&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">free</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u7528 Rust \u53BB\u5B9E\u73B0\u4E0A\u9762\u7684\u4EE3\u7801\u3002\u73B0\u5728\u6211\u4EEC\u5E76\u4E0D\u9700\u8981\u8FC7\u591A\u7684\u5173\u6CE8 Rust \u6587\u6863\uFF0C\u53EA\u9700\u8981\u4E13\u6CE8\u4E8E\u4E00\u5BF9\u4E00\u7FFB\u8BD1\u5373\u53EF\u3002\u5728\u4F60\u9605\u8BFB\u4E0B\u9762\u7684\u4EE3\u7801\u4E4B\u524D\u8FD8\u6709\u4E00\u70B9\u8981\u6CE8\u610F\uFF1A\u6211\u4EEC\u6B63\u5728\u6709\u610F\u7684\u521B\u5EFA\u4E00\u4E2A\u5BF9 Rust \u7A0B\u5E8F\u5458\u66F4\u719F\u6089\u7684\u5BF9\u8C61\uFF0C\u5E76\u4E14\u53EF\u4EE5\u88AB\u770B\u4F5C\u516C\u5171 API\u3002\u6240\u4EE5\u6211\u4EEC\u5728\u8FD9\u91CC\u76F4\u63A5\u4F7F\u7528 String\uFF0C\u800C\u4E0D\u662F C \u8BED\u8A00\u7684\u5B57\u7B26\u4E32\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span></span>mem<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Role</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    disabled<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> role <span class="token operator">=</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> role<span class="token punctuation">:</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token function">zeroed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        role<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;basic&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        role<span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        role<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        role
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} ({}, {})&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>name<span class="token punctuation">,</span> role<span class="token punctuation">.</span>flag<span class="token punctuation">,</span> role<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u770B\u5230\u8FD9\u91CC\uFF0C\u7ACB\u5373\u5C31\u6709\u4EBA\u60F3\u95EE\uFF0C\u8FD9\u91CC\u4E3A\u4EC0\u4E48\u9700\u8981 unsafe\uFF1F\u5F53\u7136\u4E86\uFF0C\u4F60\u7684\u786E\u4E0D\u9700\u8981\u3002\u4F46\u662F\u8FD9\u6BB5\u4EE3\u7801\u4F7F\u7528\u4E86\u4E00\u4E2A\u51FD\u6570\uFF1A<code>std::mem::zeroed</code>\u3002\u5982\u679C\u4F60\u5C1D\u8BD5\u5728\u6700\u8FD1\u7684 Rust \u7F16\u8BD1\u5668\u8FD0\u884C\uFF0C\u5E94\u8BE5\u4F1A\u7684\u5F97\u5230\u8FD9\u4E2A\u9519\u8BEF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>thread <span class="token lifetime-annotation symbol">&#39;main</span>&#39; panicked at <span class="token lifetime-annotation symbol">&#39;attempted</span> to zero<span class="token operator">-</span>initialize <span class="token keyword">type</span> \`<span class="token class-name">Role</span>\`<span class="token punctuation">,</span>
  which is invalid&#39;<span class="token punctuation">,</span> src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token number">30</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8001\u7248\u672C\u7684\u7F16\u8BD1\u5668\u80FD\u591F\u6B63\u5E38\u8FD0\u884C\uFF0C\u4F46\u662F\u90A3\u5176\u5B9E\u4E5F\u662F\u9519\u8BEF\u7684\u3002\u600E\u4E48\u89E3\u51B3\u5462\uFF1F\u7F16\u8BD1\u5668\u53C8\u4E00\u6B21\u544A\u8BC9\u6211\u4EEC\u89E3\u51B3\u4E4B\u6CD5\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>warning<span class="token punctuation">:</span> the <span class="token keyword">type</span> \`<span class="token class-name">Role</span>\` does not permit zero<span class="token operator">-</span>initialization
  <span class="token operator">-</span><span class="token punctuation">-&gt;</span> src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">11</span><span class="token punctuation">:</span><span class="token number">30</span>
   <span class="token operator">|</span>
<span class="token number">11</span> <span class="token operator">|</span> <span class="token keyword">let</span> <span class="token keyword">mut</span> role<span class="token punctuation">:</span> <span class="token class-name">Role</span> <span class="token operator">=</span> <span class="token namespace">mem<span class="token punctuation">::</span></span><span class="token function">zeroed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token operator">|</span>                      <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span>
   <span class="token operator">|</span>                      <span class="token operator">|</span>
   <span class="token operator">|</span>                      this code causes undefined behavior when executed
   <span class="token operator">|</span>                      help<span class="token punctuation">:</span> <span class="token keyword">use</span> \`<span class="token class-name">MaybeUninit</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span>\` instead<span class="token punctuation">,</span> and only call
   <span class="token operator">|</span>                         \`assume_init\` after initialization is done
   <span class="token operator">|</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E3A\u4EC0\u4E48 <code>Role</code> \u7C7B\u578B\u4E0D\u652F\u6301\u4F7F\u7528 0 \u521D\u59CB\u5316\u5462\uFF1F\u6211\u4EEC\u9700\u8981\u6539\u52A8\u90A3\u4E9B\u4EE3\u7801\uFF1F\u6211\u4EEC\u80FD\u4E0D\u80FD\u4E0D\u521D\u59CB\u5316\uFF1F</p><p>\u6709\u4EBA\u53EF\u80FD\u4F1A\u60F3\uFF0C\u4F7F\u7528 <code>#[repr(C)]</code> \u5F3A\u5236\u7ED3\u6784\u4F53\u4F7F\u7528 C \u8BED\u8A00\u7684\u5185\u5B58\u5E03\u5C40\uFF0C\u4F46\u662F\u8FD9\u4E0D\u80FD\u89E3\u51B3\u95EE\u9898\u3002\u6B63\u5982\u7F16\u8BD1\u5668\u7ED9\u51FA\u7684\u5EFA\u8BAE\uFF0C\u6211\u4EEC\u9700\u8981 <code>MaybeUninit</code>\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Role</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    disabled<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> role <span class="token operator">=</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> uninit <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">Role</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">zeroed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> role <span class="token operator">=</span> uninit<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;basic&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        uninit<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} ({}, {})&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>name<span class="token punctuation">,</span> role<span class="token punctuation">.</span>flag<span class="token punctuation">,</span> role<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u5C06 <code>zeroed</code> \u6362\u4E3A <code>MaybeUninit::zeroed</code> \u4E4B\u540E\uFF0C\u4E00\u5207\u90FD\u53D8\u4E86\u3002\u73B0\u5728\u6211\u4EEC\u4E0D\u80FD\u76F4\u63A5\u4F7F\u7528\u7ED3\u6784\u4F53\uFF0C\u800C\u662F\u8981\u64CD\u4F5C\u4E00\u4E2A\u88F8\u6307\u9488\u3002\u7531\u4E8E\u88F8\u6307\u9488\u6CA1\u6709\u5B9E\u73B0 <code>deref</code>\uFF0C\u5E76\u4E14 Rust \u4E2D\u6CA1\u6709 <code>-&gt;</code> \u64CD\u4F5C\u7B26\uFF0C\u6211\u4EEC\u9700\u8981\u624B\u52A8\u89E3\u5F15\u7528\uFF0C\u5E76\u7528\u8FD9\u79CD\u7B28\u62D9\u7684\u8BED\u6CD5\u5206\u914D\u6BCF\u4E00\u4E2A\u5B57\u6BB5\u3002</p><p>\u9996\u5148\uFF1A\u8FD9\u6837\u505A\u53EF\u884C\u5417\uFF1F\u7B54\u6848\u662F\u80AF\u5B9A\u7684\u3002\u4F46\u662F\u5B83\u6B63\u786E\u5417\uFF1F\u4E0D\u6B63\u786E\u3002</p><p>\u7B54\u6848\u5728\u4E8E\uFF0C\u4EFB\u4F55\u50CF\u53EF\u53D8\u5F15\u7528\uFF08&amp;mut\uFF09\u6216\u8005\u662F\u6808\u4E0A\u7684\u503C\u672C\u8EAB\u8FD9\u6837\u7684\u6784\u9020\uFF0C\u5728 unsafe \u4EE3\u7801\u4E4B\u5916\u4ECD\u7136\u9700\u8981\u4E00\u76F4\u5904\u4E8E\u6709\u6548\u7684\u72B6\u6001\u3002<code>zeroed</code> \u8FD4\u56DE\u4E00\u4E2A\u503C\u4E3A 0 \u7684\u7ED3\u6784\uFF0C\u6211\u4EEC\u4E0D\u80FD\u4FDD\u8BC1\u5B83\u53EF\u4EE5\u6709\u6548\u7684\u8868\u793A\u7ED3\u6784\u4F53\u6216\u8005\u4EFB\u4F55\u5176\u4E2D\u7684\u5B57\u6BB5\u3002\u5728\u6211\u4EEC\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u7684\u5B57\u7B26\u4E32\u5728\u6240\u6709\u5185\u5BB9\u88AB\u6E05\u96F6\u7684\u60C5\u51B5\u4E0B\u662F\u6709\u6548\u7684\uFF0C\u4F46\u662F\u8FD9\u5E76\u4E0D\u80FD\u4FDD\u8BC1\uFF0C\u800C\u4E14\u662F\u672A\u5B9A\u4E49\u884C\u4E3A\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u4E00\u70B9\u662F\uFF0C\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528\u6C38\u8FDC\u4E0D\u80FD\u6307\u5411\u4E00\u4E2A\u65E0\u6548\u7684\u5BF9\u8C61\uFF0C\u6240\u4EE5\u5728\u5BF9\u8C61\u7684\u6240\u6709\u5B57\u6BB5\u90FD\u88AB\u521D\u59CB\u5316\u4E4B\u524D\uFF0C\u4E0B\u9762\u7684\u64CD\u4F5C\u662F\u9519\u8BEF\u7684\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> role <span class="token operator">=</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token operator">*</span>uninit<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6240\u4EE5\uFF0C\u8BA9\u6211\u4EEC\u628A <code>zeroed</code> \u6539\u4E3A <code>uninit</code>\u3002\u5982\u679C\u6211\u4EEC\u518D\u6B21\u8FD0\u884C\uFF0C\u7A0B\u5E8F\u5C31\u4F1A\u5D29\u6E83\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token comment">// let mut uninit = MaybeUninit::&lt;Role&gt;::uninit();</span>
<span class="token function">free</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> invalid pointer
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E3A\u4EC0\u4E48\u4F1A\u5D29\u6E83\u5462\uFF1F\u7B54\u6848\u662F\uFF0C\u901A\u8FC7\u7ED9 name \u8D4B\u503C\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u6211\u4EEC\u4E5F drop \u4E86\u4E4B\u524D\u7684\u65E7\u5B57\u7B26\u4E32\u3002\u6211\u4EEC\u4E4B\u524D\u53EA\u662F\u78B0\u5DE7\u6CA1\u6709\u9047\u5230\u8FD9\u79CD\u60C5\u51B5\uFF0C\u56E0\u4E3A Drop \u78B0\u5DE7\u80FD\u591F\u5904\u7406\u4E00\u4E2A\u88AB\u6E05\u96F6\u7684\u5B57\u7B26\u4E32\u3002\u4F46\u73B0\u5728\uFF0C\u6211\u4EEC\u6DF1\u5165\u4E86\u672A\u5B9A\u4E49\u884C\u4E3A\u3002\u6211\u4EEC\u5982\u4F55\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u5462\uFF1F\u6211\u4EEC\u9700\u8981\u4EE5\u67D0\u79CD\u65B9\u5F0F\u76F4\u63A5\u5C06\u5B57\u7B26\u4E32\u5199\u5230\u90A3\u91CC\u7684\u6307\u9488\u3002</p><p>\u6211\u4EEC\u9996\u5148\u8981\u63A5\u53D7 MaybeUninit \u662F\u5FC5\u8981\u7684\uFF0C\u73B0\u5728\u6211\u4EEC\u8981\u5904\u7406\u8FD9\u91CC\u7684\u88F8\u6307\u9488\u3002\u8FD9\u6709\u4E9B\u9EBB\u70E6\uFF0C\u4F46\u662F\u770B\u8D77\u6765\u4E0D\u662F\u7279\u522B\u96BE\u3002\u73B0\u5728\u6211\u4EEC\u6709\u4E24\u4E2A\u65B0\u95EE\u9898\uFF1A\u6211\u4EEC\u77E5\u9053 <code>&amp;mut X</code> \u662F\u4E0D\u5141\u8BB8\u7684\uFF0C\u4F46\u662F <code>*mut X</code> \u662F\u5141\u8BB8\u7684\u3002\u6211\u4EEC\u5982\u4F55\u5728\u4E0D\u4F7F\u7528 <code>&amp;mut X</code> \u7684\u60C5\u51B5\u4E0B\u5F97\u5230\u4E00\u4E2A <code>*mut X</code>? \u8BBD\u523A\u7684\u662F\uFF0C\u5728 Rust 1.51 \u4E4B\u524D\uFF0C\u518D\u4E0D\u6253\u7834\u4EFB\u4F55\u89C4\u5219\u4E4B\u524D\uFF0C\u8FD9\u662F\u4E0D\u53EF\u80FD\u7684\uFF0C\u4F46\u662F\u73B0\u5728\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>addr_of_mut!</code> \u5B8F\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> name_ptr <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>ptr<span class="token punctuation">::</span></span><span class="token macro property">addr_of_mut!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u592A\u68D2\u4E86\uFF0C\u73B0\u5728\u6211\u4EEC\u62FF\u5230\u4E86 name \u7684\u6307\u9488\uFF0C\u5982\u4F55\u5199\u5165\u5462\uFF1F\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <code>write</code> \u65B9\u6CD5\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token macro property">addr_of_mut!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;basic&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>`,27),M=s("\u73B0\u5728\u5B8C\u6210\u4E86\u5417\uFF1F\u8FD8\u8BB0\u5F97\u6211\u4EEC\u662F\u5982\u4F55\u4F7F\u7528\u666E\u901A\u7ED3\u6784\u4F53\u7684\u5417\uFF1F\u5982\u679C\u9605\u8BFB\u4E00\u4E0B\u6587\u6863\uFF0C\u4F60\u5C31\u4F1A\u53D1\u73B0\uFF0C\u7ED3\u6784\u4F53\u7684\u5185\u5B58\u5E03\u5C40\u6CA1\u6709\u4EFB\u4F55\u4FDD\u8BC1\u3002\u4E8B\u5B9E\u8868\u660E\uFF0C"),U={href:"https://github.com/rust-lang/reference/issues/1151",target:"_blank",rel:"noopener noreferrer"},z=s("\u5C3D\u7BA1\u76EE\u524D\u7684\u6587\u6863\u662F\u8FD9\u6837\u8BF4\u7684"),C=s("\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u4F9D\u9760\u5B57\u6BB5\u7684\u5BF9\u9F50\u6027\u3002\u5982\u679C\u6211\u4EEC\u5904\u7406\u7684\u662F "),S=n("code",null,"#[repr(packed)]",-1),I=s("\uFF0C\u6211\u4EEC\u5C31\u5FC5\u987B\u4F7F\u7528 "),D=n("code",null,"write_unaligned",-1),N=s(" \u65B9\u6CD5\u6765\u4EE3\u66FF\u3002\u5982\u679C Rust \u9009\u62E9\u7684\u7ED3\u6784\u4F53\u7684\u4E00\u4E2A\u6210\u5458\u662F\u4E0D\u5BF9\u9F50\u7684\uFF0C\u8FD9\u662F\u5408\u6CD5\u7684\u3002"),T=t(`<p>\u6700\u7EC8\u7684\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>mem<span class="token punctuation">::</span></span><span class="token class-name">MaybeUninit</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>ptr<span class="token punctuation">::</span></span>addr_of_mut<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token type-definition class-name">Role</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    disabled<span class="token punctuation">:</span> <span class="token keyword">bool</span><span class="token punctuation">,</span>
    flag<span class="token punctuation">:</span> <span class="token keyword">u32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> role <span class="token operator">=</span> <span class="token keyword">unsafe</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> uninit <span class="token operator">=</span> <span class="token class-name">MaybeUninit</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">Role</span><span class="token operator">&gt;</span><span class="token punctuation">::</span><span class="token function">uninit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> role <span class="token operator">=</span> uninit<span class="token punctuation">.</span><span class="token function">as_mut_ptr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token macro property">addr_of_mut!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;basic&quot;</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        uninit<span class="token punctuation">.</span><span class="token function">assume_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{} ({}, {})&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">.</span>name<span class="token punctuation">,</span> role<span class="token punctuation">.</span>flag<span class="token punctuation">,</span> role<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="\u4EC0\u4E48\u65F6\u5019\u7528-addr-of-mut" tabindex="-1"><a class="header-anchor" href="#\u4EC0\u4E48\u65F6\u5019\u7528-addr-of-mut" aria-hidden="true">#</a> \u4EC0\u4E48\u65F6\u5019\u7528 <code>addr_of_mut!</code></h2><p>\u4E00\u822C\u6709\u4E24\u79CD\u60C5\u51B5\uFF1A\u672A\u521D\u59CB\u5316\u7684\u5185\u5B58\uFF0C\u672A\u5BF9\u9F50\u7684\u5F15\u7528\u3002Rust \u4E0D\u5141\u8BB8\u7528\u6237\u521B\u5EFA\u4E00\u4E2A\u672A\u5BF9\u9F50\u7684\u5F15\u7528\uFF08\u5373\u65F6\u53EA\u662F\u6682\u65F6\u7684\uFF09\uFF0C\u540C\u65F6\u4E5F\u4E0D\u5141\u8BB8\u521B\u5EFA\u4E00\u4E2A\u5BF9\u672A\u521D\u59CB\u5316\u5185\u5B58\u7684\u5F15\u7528\u3002\u90A3\u4E48\uFF0C\u8FD9\u4E9B\u5F15\u7528\u662F\u4EC0\u4E48\u65F6\u5019\u88AB\u521B\u5EFA\u7684\u5462\uFF1F</p><p>\u5BF9\u4E8E\u4E0B\u9762\u7684\u4EE3\u7801\uFF1A<code>(*flag).flag = 1</code>\uFF0C\u6839\u636E Rust \u7684\u89C4\u5219\uFF0C\u5982\u679C\u4E00\u4E2A\u7C7B\u578B\u6CA1\u6709\u5B9E\u73B0 Drop\uFF0C\u8FD9\u662F\u53EF\u4EE5\u7684\u3002\u5982\u679C\u8BE5\u7C7B\u578B\u5B9E\u73B0\u4E86 Drop\uFF0C\u8FD9\u884C\u4EE3\u7801\u4F1A\u4EA7\u751F\u5F88\u591A\u95EE\u9898\uFF1A\u5F53 <code>Drop::drop</code> \u88AB\u8C03\u7528\u65F6\uFF0C\u5E76\u4E14\u8C03\u7528\u5728\u672A\u521D\u59CB\u5316\u7684\u5185\u5B58\u4E0A\uFF0C\u8FD9\u65F6\u6211\u4EEC\u5C31\u9700\u8981 <code>addr_of_mut!</code>\u3002\u8FD9\u5C31\u662F\u4E3A\u4EC0\u4E48\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4E3A flag \u5B57\u6BB5\u8D4B\u503C\uFF0C\u4F46\u662F\u6211\u4EEC\u5374\u9700\u8981\u901A\u8FC7 <code>addr_of_mut!</code> \u6765\u83B7\u53D6 name \u5B57\u6BB5\uFF0C\u56E0\u4E3A\u5B83\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u3002</p><h2 id="maybeuninit" tabindex="-1"><a class="header-anchor" href="#maybeuninit" aria-hidden="true">#</a> MaybeUninit</h2><p>\u5BF9\u5B89\u5168\u7684\u7406\u89E3\u968F\u7740\u65F6\u95F4\u7684\u63A8\u79FB\u800C\u4E0D\u65AD\u6539\u53D8\u3002\u66FE\u7ECF\uFF0C<code>mem::uninitialized</code> \u88AB\u8BA4\u4E3A\u662F\u4E00\u4E2A\u5065\u5168\u7684 API\uFF0C\u4F46\u662F\u5728\u540E\u6765\uFF0C<code>MaybeUninit</code> \u88AB\u5F15\u5165\u53BB\u89E3\u51B3\u53D1\u73B0\u7684\u7F3A\u70B9\u3002\u4F46\u662F\uFF0C\u7531\u4E8E\u90E8\u5206\u521D\u59CB\u5316\u7684\u7C7B\u578B\u7684\u5B58\u5728\uFF0CMaybeUninit \u5728\u5B9E\u8DF5\u4E2D\u5E76\u4E0D\u7406\u60F3\u3002\u867D\u7136\u7531\u4E8E <code>#[repr(transparent)]</code>\uFF0C MaybeUninit \u548C T \u662F\u5185\u5B58\u517C\u5BB9\u7684\uFF0C\u4F46\u662F\u5728\u5D4C\u5957\u4F7F\u7528\u65F6\u7684\u6548\u679C\u5E76\u4E0D\u4F73\u3002</p><p>\u6709\u65F6\u4F60\u9700\u8981\u7ED3\u6784\u4F53\u7684\u67D0\u4E2A\u5B57\u6BB5\u4E0A\u6709\u4E00\u4E2A MaybeUninit\uFF0C\u4F46\u662F\u53EA\u540E\u4F60\u53C8\u5E0C\u671B\u8FD9\u4E2A\u62BD\u8C61\u4E0D\u5B58\u5728\uFF0C\u8FD9\u79CD\u60C5\u51B5\u5E76\u4E0D\u7F55\u89C1\u3002\u5B9E\u9645\u4E0A\uFF0C\u5728\u5B9E\u8DF5\u4E2D\u4F7F\u7528 MaybeUninit \u662F\u4E00\u4E2A\u5145\u6EE1\u6311\u6218\u7684\u4F53\u9A8C\uFF0C\u4F46\u662F\u8FD9\u7BC7\u6587\u7AE0\u5E76\u6CA1\u6709\u4F53\u73B0\u51FA\u6765\u3002</p><h2 id="\u6211\u7684-unsafe-\u4EE3\u7801\u6B63\u786E\u5417" tabindex="-1"><a class="header-anchor" href="#\u6211\u7684-unsafe-\u4EE3\u7801\u6B63\u786E\u5417" aria-hidden="true">#</a> \u6211\u7684 unsafe \u4EE3\u7801\u6B63\u786E\u5417\uFF1F</h2><p>\u5728 2022 \u5E74\uFF0C\u6211\u627F\u8BA4\uFF0C\u6211\u4E0D\u518D\u5BF9\u7F16\u5199 Rust \u4EE3\u7801\u611F\u5230\u81EA\u4FE1\u3002unsafe \u7684\u89C4\u5219\u53EF\u80FD\u53EF\u80FD\u90FD\u662F\u5982\u6B64\u590D\u6742\uFF0C\u4F46\u662F\u4ECE\u6211\u591A\u5E74\u6765\u9605\u8BFB\u8FC7\u7684 unsafe \u4EE3\u7801\u6765\u8BF4\uFF0C\u5927\u591A\u6570 unsafe \u4EE3\u7801\u90FD\u4E0D\u592A\u5173\u5FC3\u8FD9\u4E9B\u89C4\u5219\uFF0C\u5E76\u4E14\u65E0\u89C6\u4E86\u5B83\u4EEC\u3002<code>addr_of_mut!</code>\u76F4\u5230 1.53 \u624D\u88AB\u6DFB\u52A0\u5230\u8BED\u8A00\u4E2D\u662F\u6709\u539F\u56E0\u7684\u3002\u5373\u4F7F\u5230\u4E86\u4ECA\u5929\uFF0C\u6587\u6863\u4E2D\u90FD\u8BF4\u5B83 Rust \u7ED3\u6784\u4F53 repr \u7684\u5BF9\u9F50\u65B9\u5F0F\u6CA1\u6709\u4EFB\u4F55\u4FDD\u8BC1\u3002</p>`,10),V=s("\u5728\u8FC7\u53BB\u7684\u51E0\u5E74\u91CC\uFF0C\u4F3C\u4E4E\u53D1\u751F\u4E86\u8FD9\u6837\u7684\u4E8B\u60C5\uFF1ARust \u5F00\u53D1\u8005\u5728\u5B9E\u8DF5\u4E2D\u7F16\u5199 unsafe \u8D8A\u6765\u8D8A\u56F0\u96BE\uFF0C\u73B0\u5728\u7684\u89C4\u5219\u662F\u5982\u6B64\u590D\u6742\uFF0C\u4EE5\u81F3\u4E8E\u5BF9\u4E00\u4E2A\u968F\u610F\u7684\u7A0B\u5E8F\u5458\u6765\u8BF4\u975E\u5E38\u96BE\u4EE5\u7406\u89E3\uFF0C\u56F4\u7ED5\u4ED6\u7684\u6587\u6863\u4E5F\u5F88\u5BB9\u6613\u88AB\u66F2\u89E3\u3002\u6211\u5728\u8FD9\u7BC7\u6587\u7AE0\u7684"),X={href:"https://github.com/mitsuhiko/lucumr/blob/48440d3cf151f0d774bc9ad62f903034ca2b30ff/2022/1/30/unsafe-rust.rst",target:"_blank",rel:"noopener noreferrer"},A=s("\u4E0A\u4E00\u4E2A\u7248\u672C"),B=s("\u4E2D\u8BA4\u4E3A "),E=n("code",null,"addr_of_mut!",-1),P=s(" \u7684\u4E00\u4E9B\u4F7F\u7528\u662F\u5FC5\u8981\u7684\uFF0C\u4F46\u5B9E\u9645\u4E0A\u5E76\u975E\u5982\u6B64\u3002\u5728\u6709\u4EBA\u6307\u51FA\u8FD9\u4E2A\u9519\u8BEF\u4E4B\u524D\uFF0C\u6587\u7AE0\u5DF2\u7ECF\u5F97\u5230\u4E86\u5927\u91CF\u5173\u6CE8\u3002"),j=n("p",null,"\u8FD9\u4E9B\u89C4\u5219\u4F7F\u5F97 Rust \u6700\u597D\u7684\u529F\u80FD\u4E4B\u4E00\u8D8A\u6765\u8D8A\u96BE\u4EE5\u63A5\u8FD1\uFF0C\u540C\u65F6\u4E5F\u8D8A\u6765\u8D8A\u96BE\u4EE5\u7406\u89E3\u3002\u8981\u6C42\u5B58\u5728 MaybeUninit\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u8FC7\u53BB\u7684 mem::uninitialized API \u662F\u663E\u800C\u6613\u89C1\u7684\uFF0C\u4F46\u662F\u5374\u5C55\u793A\u4E86\u8BED\u8A00\u89C4\u5219\u662F\u591A\u4E48\u7684\u590D\u6742\u3002",-1),F=n("p",null,"\u6211\u4E0D\u8BA4\u4E3A\u8FD9\u662F\u597D\u7684\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u6211\u8BA4\u4E3A\u8FD9\u6839\u672C\u4E0D\u662F\u4E00\u4E2A\u597D\u7684\u8D8B\u52BF\uFF0C\u597D\u50CF\u8D8A\u6765\u8D8A\u5C11\u7684\u4EBA\u4E86\u89E3 unsafe Rust\u3002\u4E0E C \u7684\u4E92\u64CD\u4F5C\u6027\u662F\u8BA9 Rust \u4F1F\u5927\u7684\u4E00\u4E2A\u539F\u56E0\uFF0C\u4F46\u662F\u6211\u4EEC\u73B0\u5728\u6B63\u5728\u521B\u5EFA\u5DE8\u5927\u7684\u5C4F\u969C\uFF0C\u8FD9\u662F\u4E0D\u53EF\u53D6\u7684\u3002\u66F4\u91CD\u8981\u7684\u662F\uFF1A\u7F16\u8BD1\u5668\u5728\u6307\u51FA\u6211\u7684\u9519\u8BEF\u65F6\u6CA1\u6709\u4EC0\u4E48\u5E2E\u52A9\u3002",-1),L=n("p",null,"\u8BA9 unsafe \u53D8\u5F97\u66F4\u7B26\u5408\u4EBA\u4F53\u5DE5\u7A0B\u5B66\u662F\u4E00\u4E2A\u56F0\u96BE\u7684\u95EE\u9898\uFF0C\u4F46\u662F\u5B83\u503C\u5F97\u88AB\u89E3\u51B3\u3002\u56E0\u4E3A\u6709\u4E00\u70B9\u5F88\u660E\u786E\uFF1A\u4EBA\u4EEC\u4E0D\u4F1A\u5F88\u5FEB\u505C\u6B62\u7F16\u5199 unsafe \u4EE3\u7801\u3002",-1);function G(H,J){const a=e("ExternalLinkIcon");return o(),c(l,null,[n("blockquote",null,[i,n("p",null,[n("strong",null,[k,n("a",d,[b,p(a)])])]),n("p",null,[m,n("a",_,[f,p(a)])]),n("p",null,[g,n("a",h,[y,p(a)]),w,n("a",v,[R,p(a)]),q])]),x,n("p",null,[M,n("a",U,[z,p(a)]),C,S,I,D,N]),T,n("p",null,[V,n("a",X,[A,p(a)]),B,E,P]),j,F,L],64)}var Q=u(r,[["render",G]]);export{Q as default};
