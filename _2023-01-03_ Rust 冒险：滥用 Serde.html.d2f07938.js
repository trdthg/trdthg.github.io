import{r as e,o,c,a as n,b as p,F as l,d as s,e as t}from"./app.0374563d.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=n("p",null,"\u539F\u6587\u94FE\u63A5\uFF1Ahttps://lucumr.pocoo.org/2021/11/14/abusing-serde/",-1),k=s("\u7FFB\u8BD1\uFF1A"),d={href:"https://github.com/trdthg",target:"_blank",rel:"noopener noreferrer"},m=s("trdthg"),b=s("\u9009\u9898\uFF1A"),f={href:"https://github.com/trdthg",target:"_blank",rel:"noopener noreferrer"},_=s("trdthg"),g=s("\u672C\u6587\u7531 "),h={href:"https://Rustt.org",target:"_blank",rel:"noopener noreferrer"},w=s("Rustt"),y=s(" \u7FFB\u8BD1\uFF0C"),v={href:"https://studyrust.org",target:"_blank",rel:"noopener noreferrer"},S=s("StudyRust"),x=s(" \u8363\u8A89\u63A8\u51FA"),z=n("h1",{id:"rust-\u5192\u9669-\u6EE5\u7528-serde",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#rust-\u5192\u9669-\u6EE5\u7528-serde","aria-hidden":"true"},"#"),s(" Rust \u5192\u9669\uFF1A\u6EE5\u7528 Serde")],-1),q=n("p",null,"\u5F53\u4F60\u8BA9\u4E00\u4E2A Rust \u7A0B\u5E8F\u5458\u6307\u51FA\u81EA\u5DF1\u6700\u559C\u6B22\u7684\u4E1C\u897F\u65F6\uFF0C\u4ED6\u4EEC\u4F1A\u5F88\u5FEB\u7684\u6307\u51FA serde \u662F\u4E00\u4E2A\u8BA9\u5DE5\u4F5C\u6109\u5FEB\u597D\u5E2E\u624B\u3002serde \u662F\u4E00\u4E2A Rust \u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u6846\u67B6\u3002\u5B83\u7684\u683C\u5F0F\u76F8\u5BF9\u72EC\u7ACB\uFF0C\u53EF\u4EE5\u8BA9\u4F60\u5904\u7406 JSON\uFF0CYAML \u4EE5\u53CA\u4E00\u7CFB\u5217\u4E0D\u540C\u7684\u683C\u5F0F\u3002",-1),E=n("p",null,"\u9664\u4E86\u4E0A\u9762\u7684\u4E4B\u5916\uFF0C\u8FD8\u6709\u5F88\u591A\u4E1C\u897F\u53EF\u4EE5\u7528 serve \u5B8C\u6210\u3002\u6211\u8BA4\u4E3A\u6709\u4E00\u4E9B\u7528\u4F8B\u76F8\u5F53\u6709\u8DA3\uFF0C\u503C\u5F97\u5206\u4EAB\u3002",-1),A=n("h2",{id:"\u6EE5\u7528\u5E8F\u5217\u5316",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6EE5\u7528\u5E8F\u5217\u5316","aria-hidden":"true"},"#"),s(" \u6EE5\u7528\u5E8F\u5217\u5316")],-1),L=n("p",null,[n("em",null,"Abusing Serialization")],-1),R=n("p",null,"\u5176\u4E2D\u4E00\u4E2A\u6709\u8DA3\u7684\u7528\u4F8B\u662F\u7528 serde \u4F5C\u4E3A\u67D0\u79CD\u5F62\u5F0F\u7684\u53CD\u5C04\u6846\u67B6\uFF0C\u5C06\u7ED3\u6784\u4F53\u66B4\u9732\u7ED9\u5176\u4ED6\u7684\u4E0D\u80FD\u539F\u751F\u652F\u6301 Rust \u7ED3\u6784\u4F53\u7684\u73AF\u5883\u3002\u5728\u8FD9\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u4F5C\u4E3A\u4E00\u4E2A\u5F00\u53D1\u8005\uFF0C\u4F60\u5E8F\u5217\u5316\u4E86\u4E00\u4E2A\u53EF\u4EE5\u88AB\u5E8F\u5217\u5316\u7684\u5BF9\u8C61\uFF0C\u63A5\u7740\u7ACB\u5373\u4EE5\u67D0\u79CD\u7A0D\u5FAE\u4E0D\u540C\u7684\u683C\u5F0F\u518D\u6B21\u53CD\u5E8F\u5217\u5316\u5B83\u3002\u76F8\u6BD4\u4E8E\u53CD\u5E8F\u5217\u5316\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u4E00\u4E2A\u5E8F\u5217\u5316\u5668\u7528\u6765 '\u6355\u83B7' \u5E8F\u5217\u5316\u7684\u8C03\u7528\u3002\u8FD9\u662F\u5728 IPC\uFF0C\u6A21\u677F\u5F15\u64CE\u4E0A\u4E0B\u6587\u3001\u683C\u5F0F\u8F6C\u6362\u4E2D\u5E38\u7528\u7684\u6A21\u5F0F\u3002",-1),j=s("\u8FD9\u5728\u5B9E\u8DF5\u4E2D\u5927\u6982\u662F\u4EC0\u4E48\u6837\u5462\uFF1F\u8BA9\u6211\u4EEC\u4ECE\u7528\u6237\u7684\u89D2\u5EA6\u770B\u4E00\u4E0B\u6211\u5199\u7684 "),V={href:"https://github.com/mitsuhiko/minijinja",target:"_blank",rel:"noopener noreferrer"},N=s("MiniJinja"),O=s(" \u6A21\u677F\u5F15\u64CE\u3002MiniJinja \u4F7F\u7528 serde \u4F5C\u4E3A\u6838\u5FC3\u6570\u636E\u6A21\u578B\uFF0C\u5C06\u7ED3\u6784\u5316\u7684\u6570\u636E\u4F20\u9012\u7ED9\u6A21\u677F\uFF0C\u4EE5\u4FBF\u5B83\u4EEC\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u8FDB\u884C\u8BC4\u4F30\u3002\u4E0B\u9762\u662F\u4E00\u4E9B\u7ED9\u5F00\u53D1\u8005\u7684\u793A\u4F8B\u4EE3\u7801\uFF1A"),J=t(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Serialize, Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">User</span> <span class="token punctuation">{</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> env <span class="token operator">=</span> <span class="token class-name">Environment</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    env<span class="token punctuation">.</span><span class="token function">add_template</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello {{ user.name }}!&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> template <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">get_template</span><span class="token punctuation">(</span><span class="token string">&quot;hello.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> user <span class="token operator">=</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
        name<span class="token punctuation">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> template<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token macro property">context!</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5982\u4F60\u6240\u89C1\uFF0C\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A\u53EB User \u7684\u7ED3\u6784\u4F53\uFF0C\u53EF\u4EE5\u4F7F\u7528\u9ED8\u8BA4\u7684 Serialize \u5B9E\u73B0\u5C06\u5B83\u5E8F\u5217\u5316\u3002\u8FD9\u4E2A\u5BF9\u8C61\u63A5\u7740\u88AB\u4F20\u9012\u5230 <code>context!()</code>\u3002<code>context!()</code> \u6240\u505A\u7684\u5C31\u662F\u521B\u5EFA\u4E86\u4E00\u4E2A map\uFF0C\u7136\u540E\u5C06\u4E00\u4E2A\u952E\u8BBE\u4E3A user\uFF0C\u63A5\u7740\u8BBE\u7F6E\u4E3A\u8BE5\u53D8\u91CF\u7684\u503C\u3002\u8FD9\u6837\u505A\u7684\u76EE\u7684\u662F\u5141\u8BB8\u6A21\u677F\u5F15\u64CE\u8BBF\u95EE\u5230 user \u7684 &#39;\u5C5E\u6027&#39;\uFF0C\u4F8B\u5982 name\u3002Rust \u4E0D\u662F\u52A8\u6001\u8BED\u8A00\uFF0C\u8FD9\u610F\u5473\u7740\u901A\u5E38\u5728\u8FD0\u884C\u65F6\u505A\u8FD9\u6837\u7684\u4E8B\u60C5\u662F\u4E0D\u53EF\u80FD\u7684\u3002\u4F46\u662F\u7531\u4E8E serde \u4E3A User \u5B9E\u73B0\u4E86 Seralize\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8FD9\u6837\u505A\u3002\u5177\u4F53\u7684\u5B9E\u73B0\u5927\u81F4\u5982\u4E0B\uFF08\u4F2A\u4EE3\u7801\uFF09\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Serialize</span> <span class="token keyword">for</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">serialize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> serializer<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token punctuation">::</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">S</span><span class="token punctuation">::</span><span class="token class-name">Error</span><span class="token operator">&gt;</span>
        <span class="token keyword">where</span> <span class="token class-name">S</span><span class="token punctuation">:</span> <span class="token class-name">Serializer</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">let</span> s <span class="token operator">=</span> serializer<span class="token punctuation">.</span><span class="token function">serialize_struct</span><span class="token punctuation">(</span><span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        s<span class="token punctuation">.</span><span class="token function">serialize_field</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0Cserializer \u662F\u4E00\u4E2A\u7C7B\u4F3C\u4E8E JSON \u5E8F\u5217\u5316\u5668\u7684\u4E1C\u897F\uFF0C\u5B83\u53EF\u4EE5\u5C06\u7ED3\u6784\u4F53\u5199\u5165\u5230\u4E00\u4E2A\u5B57\u7B26\u4E32\u6216\u8005\u662F\u6587\u4EF6\uFF0C\u5728\u8FD9\u4E2A\u8FC7\u7A0B\u4E2D\u628A\u5B83\u7F16\u7801\u4E3A JSON\u3002\u4F46\u662F serde \u63D0\u4F9B\u7684\u63A5\u53E3\u5E76\u4E0D\u8981\u6C42\u7528\u6237\u5FC5\u987B\u8FD9\u6837\u3002\u5B9E\u9645\u4E0A\uFF0CMiniJinja \u76F4\u63A5\u5C06\u7ED3\u6784\u4F53\u7F16\u7801\u4E3A\u4E00\u4E2A\u5185\u5B58\u4E2D\u7684\u7ED3\u6784\uFF0C\u6A21\u677F\u5F15\u64CE\u53EF\u4EE5\u89E3\u6790\u5B83\u3002</p><p>\u8FD9\u79CD\u6A21\u5F0F\u5E76\u4E0D\u65B0\u9896\uFF0Cserde \u672C\u8EAB\u5176\u5B9E\u4E5F\u6709\u4F7F\u7528\u3002\u5F53\u4F60\u4F7F\u7528 serde \u7684 flatter \u529F\u80FD\u65F6\uFF0Cserde \u4F1A\u542F\u7528\u4E00\u4E2A\u5185\u90E8\u7F13\u51B2\u6A21\u5F0F\uFF0C\u6570\u636E\u4F1A\u88AB\u5B58\u50A8\u5728\u4E00\u4E2A\u5185\u90E8\u7684 Context \u7C7B\u578B\u4E2D\uFF0CContext \u7C7B\u578B\u53EF\u4EE5\u8868\u793A serde \u6570\u636E\u6A21\u578B\u7684\u5168\u90E8\u5185\u5BB9\u3002\u7136\u540E\u8FD9\u4E2A context \u53EF\u4EE5\u88AB\u4F20\u9012\u7ED9\u53E6\u4E00\u4E2A\u5E8F\u5217\u5316\u5668\u4E2D\u3002</p>`,5),M=s("\u6211\u4E0D\u4EC5\u5728 MiniJinja\uFF0C\u540C\u65F6\u4E5F\u5728 "),U={href:"https://insta.rs/",target:"_blank",rel:"noopener noreferrer"},H=s("insta"),T=s(" \uFF08\u4E00\u4E2A\u5FEB\u7167\u6D4B\u8BD5\u5DE5\u5177\uFF09\u4F7F\u7528\u5230\u8FD9\u79CD\u6A21\u5F0F\u3002\u4E3A\u4E86\u907F\u514D\u7531\u4E8E\u975E\u786E\u5B9A\u6027\u6570\u636E\u5BFC\u81F4\u7684\u6D4B\u8BD5\u5FEB\u7167\u7684\u4E0D\u7A33\u5B9A\u6027\uFF0C\u6211\u9996\u5148\u5C06\u5176\u5E8F\u5217\u5316\u4E3A\u4E00\u79CD\u5185\u90E8\u7684\u683C\u5F0F\uFF0C\u63A5\u7740\u5728\u8BE5\u683C\u5F0F\u4E0A\u8FDB\u884C\u4E00\u4E2A\u518D\u52A0\u5DE5\uFF0C\u6700\u540E\u518D\u5C06\u5176\u5E8F\u5217\u5316\u4E3A\u6700\u7EC8\u7684\u683C\u5F0F\uFF08\u4F8B\u5982 YAML\uFF09\u3002"),I=n("h2",{id:"tls-\u6076\u4F5C\u5267",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tls-\u6076\u4F5C\u5267","aria-hidden":"true"},"#"),s(" TLS \u6076\u4F5C\u5267")],-1),D=n("p",null,[n("em",null,"TLS Shenanigans")],-1),F=n("blockquote",null,[n("p",null,"TLS\uFF1AThread Local Storage\uFF0CShenanigans\uFF1A\u6076\u4F5C\u5267")],-1),C=s("\u7136\u800C\uFF0CMiniJinja \u5728\u6B64\u5904\u4F7F\u7528 serde \u7684\u6709\u8DA3\u4E4B\u5904\u5728\u4E8E\uFF0C\u5B83\u5141\u8BB8\u5728\u5E8F\u5217\u5316\u548C\u5E8F\u5217\u5316\u5668\u4E4B\u95F4\u4F20\u9012\u4E0D\u517C\u5BB9\u7684\u6570\u636E\u3002\u5982\u524D\u6240\u8FF0\uFF0Cserde \u6709\u4E00\u4E2A\u7279\u5B9A\u7684\u6570\u636E\u6A21\u578B\uFF0C\u4E0D\u7B26\u5408\u8BE5\u6570\u636E\u6A21\u578B\u7684\u4E1C\u897F\u90FD\u4F1A\u9047\u5230\u8FD9\u4E2A\u95EE\u9898\u3002\u4F8B\u5982\uFF0Cserde \u53EF\u4EE5\u7F16\u7801\u7684\u6700\u5927\u6574\u578B\u662F i128\u3002\u5982\u679C\u4F60\u9700\u8981\u4E00\u4E2A\u4EFB\u610F\u7CBE\u5EA6\u7684\u6574\u578B\uFF0C\u90A3\u5C31\u4E0D\u8D70\u8FD0\u4E86\u3002\u4F46\u662F\u8FD8\u662F\u6709\u529E\u6CD5\u7684\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 "),B={href:"https://en.wikipedia.org/wiki/In-band_signaling",target:"_blank",rel:"noopener noreferrer"},P=s("\u5E26\u5185\u4FE1\u4EE4\uFF08in-band signalling\uFF09"),K=s("\u4F20\u9012\u989D\u5916\u6570\u636E\u3002\u4F8B\u5982\uFF0Cserde JSON \u5E8F\u5217\u5316\u5668\u80FD\u591F\u8868\u793A\u4EFB\u610F\u7CBE\u5EA6\u6574\u578B\uFF0C\u56E0\u4E3A\u5B83\u5728\u5355\u503C\u5BF9\u8C61\u4E2D\u4FDD\u7559\u4E86\u4E00\u4E2A\u7279\u6B8A\u7684\u952E\uFF0C\u5E76\u7528\u5B83\u53BB\u6307\u793A JSON \u5E8F\u5217\u5316 / \u53CD\u5E8F\u5217\u5316\u5668\u7EC4\u5408\uFF0C\u51B3\u5B9A\u8FD9\u4E2A\u4EFB\u610F\u7CBE\u5EA6\u7684\u6574\u578B\u662F\u5426\u8981\u88AB\u5E8F\u5217\u5316\u3002\u5B83\u770B\u8D77\u6765\u50CF\u8FD9\u6837\uFF1A"),Y=t(`<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span> <span class="token property">&quot;$serde_json::private::Number&quot;</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4F46\u662F\u4F60\u5E94\u8BE5\u80FD\u53D1\u73B0\uFF0C\u5982\u679C\u4E00\u4E2A\u4EBA\u7ED9\u51FA\u4E86\u8FD9\u6837\u7684 JSON \u6587\u6863\uFF0Cserde JSON \u4F1A\u628A\u5B83\u5F53\u4F5C\u4EFB\u610F\u7CBE\u5EA6\u7684\u6574\u5F62\u53BB\u89E3\u6790\uFF0C\u8FD9\u610F\u5473\u7740 &#39;value&#39; \u90E8\u5206\u672C\u8EAB\u4E5F\u9700\u8981\u4E8E serde \u517C\u5BB9\u3002\u5BF9\u4E8E\u4EFB\u610F\u7CBE\u5EA6\u7684\u6574\u578B\uFF0C\u8FD9\u6CA1\u6709\u95EE\u9898\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u7528\u5B57\u7B26\u4E32\u8868\u793A\u3002\u4F46\u662F\u5047\u5982\u4F60\u60F3\u5728\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u4E2D\u4F20\u9012\u7684\u4E1C\u897F\u6839\u672C\u4E0D\u80FD\u5E8F\u5217\u5316\u5462\uFF1F</p><p>\u8FD9\u65F6\uFF0C\u5DE7\u5999\u5730\u5229\u7528 <strong>thread local</strong> \u5C31\u662F\u4E00\u79CD\u53D8\u901A\u65B9\u6CD5\u3002</p><p>\u5728 MiniJinja \u4E2D\uFF0C\u8FD0\u884C\u65F6\u503C\u7684\u5185\u90E8\u8868\u793A\u662F\u4E00\u4E2A\u53EB\u505A <code>Value</code> \u7684\u7ED3\u6784\u4F53\u3002\u6B63\u5982\u4F60\u6240\u671F\u671B\u7684\uFF0C\u5B83\u53EF\u4EE5\u5BB9\u7EB3\u6574\u578B\uFF0C\u6D6E\u70B9\u6570\uFF0C\u5B57\u7B26\u4E32\uFF0C\u5217\u8868\uFF0C\u5BF9\u8C61\u7B49\u7B49\u3002\u7136\u800C\uFF0C\u4ED6\u4E5F\u53EF\u4EE5\u5BB9\u7EB3\u4E00\u4E9B serde \u5B8C\u5168\u65E0\u6CD5\u89E3\u6790\u7684\u7C7B\u578B\u3002\u7279\u522B\u662F\u5B83\u53EF\u4EE5\u4FDD\u5B58\u4E00\u79CD\u7279\u6B8A\u7C7B\u578B\u7684\u5B57\u7B26\u4E32\uFF0C\u79F0\u4E3A <code>&#39;safe&#39; string</code>, \u5B83\u662F\u4E00\u4E2A\u5B58\u50A8\u4E86\u5B89\u5168\u7684 HTML \u4EE3\u7801\u7684\u5B57\u7B26\u4E32\uFF0C\u4E0D\u9700\u8981\u8F6C\u4E49\uFF0C\u4E5F\u4E0D\u9700\u8981\u6240\u8C13\u7684 &#39;\u52A8\u6001\u503C&#39;\u3002\u540E\u8005\u7279\u522B\u6709\u8DA3\uFF0C\u56E0\u4E3A\u5B83\u4E0D\u80FD\u88AB\u5E8F\u5217\u5316\u3002</p><p>\u4EC0\u4E48\u662F\u52A8\u6001\u503C\uFF1F\u5B83\u5B9E\u9645\u4E0A\u662F\u5177\u6709\u72B6\u6001\u7684\u5BF9\u8C61\u7684\u53E5\u67C4\uFF0C\u5E94\u8BE5\u76F4\u63A5\u4F20\u9012\u7ED9\u6A21\u677F\u3002\u8FD9\u91CC\u7684\u4E00\u4E2A\u4F8B\u5B50\u662F MiniJinja \u4E2D\u7684 loop \u53D8\u91CF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> seq <span class="token operator">%</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token keyword">loop</span><span class="token punctuation">.</span>index <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
<span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>MiniJinja\uFF08\u7C7B\u4F3C\u4E8E Jinja2\uFF09\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7279\u6B8A\u7684 loop \u53D8\u91CF\u53EF\u4EE5\u8BBF\u95EE\u5FAA\u73AF\u7684\u72B6\u6001\u3002\u4F8B\u5982\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>loop.index</code> \u6765\u83B7\u53D6\u5F53\u524D\u5FAA\u73AF\u7684\u8FED\u4EE3\u6B21\u6570\u3002\u5728 MiniJinja \u7684\u5DE5\u4F5C\u539F\u7406\u4E2D\uFF0C&#39;\u5FAA\u73AF\u63A7\u5236\u5668&#39; \u672C\u8EAB\u4F1A\u88AB\u76F4\u63A5\u4F20\u9012\u7ED9\u6A21\u677F\uFF0C\u5E76\u4E14\u628A\u503C\u672C\u8EAB\u5F53\u4F5C\u5F15\u7528\u8BA1\u6570\u5B58\u8FDB\u53BB\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">LoopState</span> <span class="token punctuation">{</span>
    len<span class="token punctuation">:</span> <span class="token class-name">AtomicUsize</span><span class="token punctuation">,</span>
    idx<span class="token punctuation">:</span> <span class="token class-name">AtomicUsize</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> controller <span class="token operator">=</span> <span class="token class-name">Rc</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">LoopState</span> <span class="token punctuation">{</span>
    idx<span class="token punctuation">:</span> <span class="token class-name">AtomicUsize</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0usize</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    len<span class="token punctuation">:</span> <span class="token class-name">AtomicUsize</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5F53\u5FAA\u73AF\u8FED\u4EE3\u65F6\uFF0C\u63A7\u5236\u5668\u4E0A\u7684\u7D22\u5F15\u4F1A +1\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>controller<span class="token punctuation">.</span>idx<span class="token punctuation">.</span><span class="token function">fetch_add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">Ordering</span><span class="token punctuation">::</span><span class="token class-name">Relaxed</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u63A7\u5236\u5668\u672C\u8EAB\u4F1A\u88AB\u76F4\u63A5\u6DFB\u52A0\u5230\u4E0A\u4E0B\u6587\u4E2D\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> template_side_controller <span class="token operator">=</span> <span class="token class-name">Value</span><span class="token punctuation">::</span><span class="token function">from_object</span><span class="token punctuation">(</span>controller<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u4E3A\u4E86\u8FBE\u5230\u8FD9\u4E2A\u76EE\u7684\uFF0C\u63A7\u5236\u5668\u9700\u8981\u5B9E\u73B0 MiniJinja \u5185\u90E8\u7684 <code>Object</code> \u7279\u5F81\uFF0C\u4E0B\u9762\u662F\u4E00\u4E2A\u6700\u5C0F\u5B9E\u73B0\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Object</span> <span class="token keyword">for</span> <span class="token class-name">LoopState</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">attributes</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
        <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token string">&quot;index&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;length&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">..</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">get_attr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> name<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Value</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>idx<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Ordering</span><span class="token punctuation">::</span><span class="token class-name">Relaxed</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> len <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>len<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">Ordering</span><span class="token punctuation">::</span><span class="token class-name">Relaxed</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">u64</span><span class="token punctuation">;</span>
        <span class="token keyword">match</span> name <span class="token punctuation">{</span>
            <span class="token string">&quot;index&quot;</span> <span class="token operator">=&gt;</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Value</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;length&quot;</span> <span class="token operator">=&gt;</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">Value</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            _ <span class="token operator">=&gt;</span> <span class="token class-name">None</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u5728\u6A21\u677F\u5F15\u64CE\u90A3\u4E00\u8FB9\uFF0C\u7CFB\u7EDF\u77E5\u9053\u5F53 <code>index</code> \u5C5E\u6027\u88AB\u4F7F\u7528\u65F6\uFF0C\u9700\u8981\u8C03\u7528 <code>get_attr()</code> \u65B9\u6CD5\u3002</p><p>\u5230\u76EE\u524D\u4E3A\u6B62\u6211\u4EEC\u6240\u8BF4\u7684\u90FD\u662F\u7406\u8BBA\uFF0Cserde \u7A76\u7ADF\u662F\u5982\u4F55\u505A\u7684\u5462\uFF1F\u5F53 <code>Value::from_object</code> \u8C03\u7528\u65F6\uFF0C\u4F20\u5165\u7684\u503C\u4F1A\u88AB <code>move</code> \u5230 value \u5BF9\u8C61\u91CC\u3002\u8FD9\u6837\u505A\u4E0D\u9700\u8981\u7279\u6B8A\u5904\u7406\uFF0C\u7279\u522B\u662F\u7531\u4E8E\u5DF2\u7ECF\u4F7F\u7528\u4E86\u5F15\u7528\u8BA1\u6570\u3002\u4F46\u662F\u73B0\u5728\u7684\u95EE\u9898\u662F\uFF0C\u5BF9\u4E8E\u50CF <code>LoopState</code> \u8FD9\u6837\u672C\u8EAB\u6CA1\u6709\u5B9E\u73B0 <code>Serialize</code> \u7684\u4E1C\u897F\uFF0C\u5B83\u7684\u503C\u662F\u5982\u4F55\u88AB\u5E8F\u5217\u5316\u7684\uFF1F\u7B54\u6848\u662F\u7EBF\u7A0B\u672C\u5730\u5B58\u50A8\uFF08thread local storage\uFF09\u548C\u4E00\u4E2A\u5408\u4F5C\u7684\uFF08co-operating\uFF09\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u5668\u3002</p><h2 id="\u8D8A\u8FC7\u8FB9\u754C\u7684-state" tabindex="-1"><a class="header-anchor" href="#\u8D8A\u8FC7\u8FB9\u754C\u7684-state" aria-hidden="true">#</a> \u8D8A\u8FC7\u8FB9\u754C\u7684 State</h2><p><em>Out of Bound State</em></p><p>\u9690\u85CF\u5728 MiniJinja \u7684 Value \u5B9E\u73B0\u6709\u8FD9\u6837\u4E00\u6BB5\u4EE3\u7801\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">const</span> <span class="token constant">VALUE_HANDLE_MARKER</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">str</span> <span class="token operator">=</span> <span class="token string">&quot;\\x01__minijinja_ValueHandle&quot;</span><span class="token punctuation">;</span>
<span class="token macro property">thread_local!</span> <span class="token punctuation">{</span>
     <span class="token keyword">static</span> <span class="token constant">INTERNAL_SERIALIZATION</span><span class="token punctuation">:</span> <span class="token class-name">AtomicBool</span> <span class="token operator">=</span> <span class="token class-name">AtomicBool</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">static</span> <span class="token constant">LAST_VALUE_HANDLE</span><span class="token punctuation">:</span> <span class="token class-name">AtomicUsize</span> <span class="token operator">=</span> <span class="token class-name">AtomicUsize</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">static</span> <span class="token constant">VALUE_HANDLES</span><span class="token punctuation">:</span> <span class="token class-name">RefCell</span><span class="token operator">&lt;</span><span class="token class-name">BTreeMap</span><span class="token operator">&lt;</span><span class="token keyword">usize</span><span class="token punctuation">,</span> <span class="token class-name">Value</span><span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> <span class="token class-name">RefCell</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">BTreeMap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token keyword">fn</span> <span class="token function-definition function">in_internal_serialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
    <span class="token constant">INTERNAL_SERIALIZATION</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>flag<span class="token closure-punctuation punctuation">|</span></span> flag<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token namespace">atomic<span class="token punctuation">::</span></span><span class="token class-name">Ordering</span><span class="token punctuation">::</span><span class="token class-name">Relaxed</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u5B83\u4EEC\u7684\u7528\u5904\u662F\uFF0CValue \u81EA\u8EAB\u80FD\u591F\u611F\u77E5\u5230\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u5185\u90E8\u5E8F\u5217\u5316\u7684\u7279\u6B8A\u5F62\u5F0F\u3002\u8FD9\u79CD\u5185\u90E8\u5E8F\u5217\u5316\u662F\u4E00\u79CD\u7279\u6B8A\u5F62\u5F0F\u7684\u5E8F\u5217\u5316\uFF0C\u6211\u4EEC\u660E\u786E\u77E5\u9053\u6211\u4EEC\u7684\u5E8F\u5217\u5316\u6570\u636E\u7684\u63A5\u6536\u8005\u662F\u4E00\u4E2A\u53EF\u4EE5\u7406\u89E3\u8BE5\u6570\u636E\u7684\u53CD\u5E8F\u5217\u5316\u5668\u3002\u6211\u4EEC\u6CA1\u6709\u76F4\u63A5\u5BF9\u6570\u636E\u8FDB\u884C\u5E8F\u5217\u5316\uFF0C\u800C\u662F\u5C06\u5176\u5B58\u5165\u5230 TLS \u4E2D\uFF0C\u7136\u540E\u628A\u6570\u636E\u7684\u53E5\u67C4\u5E8F\u5217\u5316\u5230 serde \u5E8F\u5217\u5316\u5668\u4E2D\u3002\u53CD\u5E8F\u5217\u5316\u5668\u4F1A\u5148\u53CD\u5E8F\u5217\u5316\u53E5\u67C4\uFF0C\u63A5\u7740\u518D\u4ECE TLS \u4E2D\u63D0\u53D6\u503C\u3002</p><p>\u56E0\u6B64\uFF0C\u6211\u4EEC\u7684\u5FAA\u73AF\u63A7\u5236\u5668\u5E8F\u5217\u5316\u7684\u5B9E\u73B0\u5927\u81F4\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Serialize</span> <span class="token keyword">for</span> <span class="token class-name">Value</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">serialize</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> serializer<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token punctuation">::</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">S</span><span class="token punctuation">::</span><span class="token class-name">Error</span><span class="token operator">&gt;</span>
    <span class="token keyword">where</span>
        <span class="token class-name">S</span><span class="token punctuation">:</span> <span class="token class-name">Serializer</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// enable round tripping of values</span>
        <span class="token keyword">if</span> <span class="token function">in_internal_serialization</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span>ser<span class="token punctuation">::</span></span><span class="token class-name">SerializeStruct</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> handle <span class="token operator">=</span> <span class="token constant">LAST_VALUE_HANDLE</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>x<span class="token closure-punctuation punctuation">|</span></span> x<span class="token punctuation">.</span><span class="token function">fetch_add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token namespace">atomic<span class="token punctuation">::</span></span><span class="token class-name">Ordering</span><span class="token punctuation">::</span><span class="token class-name">Relaxed</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token constant">VALUE_HANDLES</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>handles<span class="token closure-punctuation punctuation">|</span></span> handles<span class="token punctuation">.</span><span class="token function">borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> <span class="token keyword">mut</span> s <span class="token operator">=</span> serializer<span class="token punctuation">.</span><span class="token function">serialize_struct</span><span class="token punctuation">(</span><span class="token constant">VALUE_HANDLE_MARKER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
            s<span class="token punctuation">.</span><span class="token function">serialize_field</span><span class="token punctuation">(</span><span class="token string">&quot;handle&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>handle<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// ... here follows implementation for serializing to JSON etc.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u5982\u679C\u5B83\u88AB\u5E8F\u5217\u5316\u4E3A JSON\uFF0C\u6211\u4EEC\u5927\u81F4\u80FD\u770B\u5230\u8FD9\u6837\u7684\u4E1C\u897F\uFF1A</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span> <span class="token property">&quot;\\u0001__minijinja_ValueHandle&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u800C\u771F\u6B63\u7684\u5FAA\u73AF\u63A7\u5236\u5668\u5C06\u88AB\u5B58\u50A8\u5728 <code>VALUE_HANDLES</code> \u4E2D\u53E5\u67C4\u4E3A 1 \u5904\u3002\u73B0\u5728\u6211\u4EEC\u5982\u4F55\u4ECE\u91CC\u9762\u7684\u5230\u6570\u503C\u5462\uFF1F\u5728 MiniJinja \u4E2D\uFF0C\u53CD\u5E8F\u5217\u5316\u5176\u5B9E\u4ECE\u672A\u53D1\u751F\uFF0C\u53EA\u6709\u5E8F\u5217\u5316\u3002\u800C\u4E14\u5E8F\u5217\u5316\u4E5F\u53EA\u662F\u5C06\u5185\u5B58\u4E2D\u7684\u5BF9\u8C61\u7EC4\u88C5\u8D77\u6765\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u8BA9\u5E8F\u5217\u5316\u5668\u7406\u89E3\u5E26\u5185\u4FE1\u4EE4\u5982\u4F55\u5904\u7406\uFF0C\u5E76\u4EE5\u6B64\u627E\u5230\u5E26\u5916\u7684\u503C\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token namespace">ser<span class="token punctuation">::</span></span><span class="token class-name">SerializeStruct</span> <span class="token keyword">for</span> <span class="token class-name">SerializeStruct</span> <span class="token punctuation">{</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">Ok</span> <span class="token operator">=</span> <span class="token class-name">Value</span><span class="token punctuation">;</span>
    <span class="token keyword">type</span> <span class="token type-definition class-name">Error</span> <span class="token operator">=</span> <span class="token class-name">Error</span><span class="token punctuation">;</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">serialize_field</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token operator">?</span><span class="token class-name">Sized</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;static</span> <span class="token keyword">str</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Error</span><span class="token operator">&gt;</span>
    <span class="token keyword">where</span>
        <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Serialize</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">let</span> value <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token class-name">ValueSerializer</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>fields<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">end</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Value</span><span class="token punctuation">,</span> <span class="token class-name">Error</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">match</span> <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token punctuation">{</span>
            <span class="token constant">VALUE_HANDLE_MARKER</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> handle_id <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span>fields<span class="token punctuation">[</span><span class="token string">&quot;handle&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">as_usize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token constant">VALUE_HANDLES</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>handles<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
                    <span class="token keyword">let</span> <span class="token keyword">mut</span> handles <span class="token operator">=</span> handles<span class="token punctuation">.</span><span class="token function">borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    handles
                        <span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>handle_id<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;value handle not in registry&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
            _ <span class="token operator">=&gt;</span> <span class="token comment">/* regular struct code */</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="ser-to-de" tabindex="-1"><a class="header-anchor" href="#ser-to-de" aria-hidden="true">#</a> Ser-to-De</h2>`,28),Z=s("\u4E0A\u9762\u7684\u4F8B\u5B50\u662F\u4F60\u53EF\u4EE5\u6EE5\u7528\u7684\u4E00\u79CD\u65B9\u5F0F\uFF0C\u4F46\u662F\u540C\u6837\u7684\u6A21\u5F0F\u5728\u771F\u5B9E\u7684\u5E8F\u5217\u5316\u548C\u53CD\u5E8F\u5217\u5316\u4E2D\u4E5F\u53EF\u4EE5\u7528\u5230\u3002\u5728 MiniJinja \u4E2D\uFF0C\u6211\u53EF\u4EE5\u4E0D\u4F7F\u7528\u5E8F\u5217\u5316\uFF0C\u56E0\u4E3A\u6211\u6709\u6548\u5730\u5229\u7528\u4E86\u5E8F\u5217\u5316\u4EE3\u7801\uFF0C\u4ECE\u4E00\u79CD\u5185\u5B58\u683C\u5F0F\u8F6C\u6362\u5230\u53E6\u4E00\u79CD\u5185\u5B58\u683C\u5F0F\u3002\u5982\u679C\u4F60\u60F3\u5728\u8FDB\u7A0B\u95F4\u4F20\u9012\u6570\u636E\uFF0C\u60C5\u51B5\u5C31\u4F1A\u53D8\u5F97\u68D8\u624B\u4E00\u4E9B\uFF0C\u5B9E\u9645\u7684\u5E8F\u5217\u5316\u5C31\u662F\u5FC5\u8981\u7684\u3002\u4F8B\u5982\uFF0C\u4F60\u60F3\u5EFA\u7ACB\u4E00\u4E2A IPC \u7CFB\u7EDF\uFF0C\u5728\u8FDB\u7A0B\u4E4B\u95F4\u4EA4\u6362\u6570\u636E\uFF0C\u8FD9\u91CC\u7684\u6311\u6218\u662F\uFF0C\u51FA\u4E8E\u6027\u80FD\u7684\u8003\u8651\uFF0C\u5BF9\u4E8E\u6BD4\u8F83\u5927\u7684\u5185\u5B58\u6BB5\uFF0C\u4F60\u5FC5\u987B\u4F7F\u7528\u5171\u4EAB\u5185\u5B58\uFF0C\u6216\u8005\u662F\u4EE5\u6587\u4EF6\u63CF\u8FF0\u7B26\u7684\u5F62\u5F0F\u4F20\u9012\u6253\u5F00\u7684\u6587\u4EF6\uFF08\u56E0\u4E3A\u8FD9\u4E9B\u6587\u4EF6\u6709\u53EF\u80FD\u662F socket\uFF09\u3002\u5728\u6211\u7684\u5B9E\u9A8C\u6027 "),$={href:"https://github.com/mitsuhiko/unix-ipc",target:"_blank",rel:"noopener noreferrer"},G=s("unix-ipc"),Q=s(" crate \u4E2D\uFF0C\u6211\u5C31\u662F\u8FD9\u6837\u505A\u7684\u3002"),W=t(`<p>\u6211\u5728\u8FD9\u91CC\u5EFA\u7ACB\u4E86\u4E00\u4E2A\u4E8C\u7EA7\u7F13\u51B2\u533A\uFF0C\u5B83\u53EF\u4EE5\u653E\u7F6E\u6587\u4EF6\u63CF\u8FF0\u7B26\u3002\u540C\u6837\uFF0C\u8FD9\u91CC\u5FC5\u987B\u4F7F\u7528 TLS\u3002</p><p>API \u5927\u81F4\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">serialize</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token punctuation">:</span> <span class="token class-name">Serialize</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">io<span class="token punctuation">::</span></span><span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">u8</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">RawFd</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> fds <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token keyword">mut</span> out <span class="token operator">=</span> <span class="token class-name">Vec</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">enter_ipc_mode</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token namespace">bincode<span class="token punctuation">::</span></span><span class="token function">serialize_into</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> out<span class="token punctuation">,</span> <span class="token operator">&amp;</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> fds<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map_err</span><span class="token punctuation">(</span>bincode_to_io_error<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span>out<span class="token punctuation">,</span> fds<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4ECE\u7528\u6237\u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u8FD9\u4E9B\u90FD\u662F\u900F\u660E\u7684\u3002\u5F53\u4E00\u4E2A Serailize \u5B9E\u73B0\u9047\u5230\u4E86\u4E00\u4E2A\u6587\u4EF6\u5BF9\u8C61\u65F6\uFF0C\u5B83\u53EF\u4EE5\u68C0\u67E5\u662F\u5426\u5E94\u8BE5\u4F7F\u7528 IPC \u7684\u5E8F\u5217\u5316\uFF0C\u5982\u679C\u662F\uFF0C\u5B83\u53EF\u4EE5\u628A FD \u5B58\u8D77\u6765\uFF0C<code>enter_ipc_mode</code> \u57FA\u672C\u4E0A\u5C06 fds \u7ED1\u5B9A\u5230\u4E86\u4E00\u4E2A\u7EBF\u7A0B\u5C40\u90E8\u53D8\u91CF\u91CC\uFF0C\u63A5\u7740\u8C03\u7528 <code>register_fd</code> \u6CE8\u518C\u5B83\u3002\u4F8B\u5982\uFF0C\u4E0B\u9762\u5C55\u793A\u4E86\u5185\u90E8\u53E5\u67C4\u7684\u5E8F\u5217\u5316\u65B9\u5F0F\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">IntoRawFd</span><span class="token operator">&gt;</span> <span class="token class-name">Serialize</span> <span class="token keyword">for</span> <span class="token class-name">Handle</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">serialize</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> serializer<span class="token punctuation">:</span> <span class="token class-name">S</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">S</span><span class="token punctuation">::</span><span class="token class-name">Ok</span><span class="token punctuation">,</span> <span class="token class-name">S</span><span class="token punctuation">::</span><span class="token class-name">Error</span><span class="token operator">&gt;</span>
    <span class="token keyword">where</span>
        <span class="token class-name">S</span><span class="token punctuation">:</span> <span class="token namespace">ser<span class="token punctuation">::</span></span><span class="token class-name">Serializer</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token function">is_ipc_mode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// effectively a weird version of \`into_raw_fd\` that does</span>
            <span class="token comment">// consume</span>
            <span class="token keyword">let</span> fd <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">extract_raw_fd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token function">register_fd</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
            idx<span class="token punctuation">.</span><span class="token function">serialize</span><span class="token punctuation">(</span>serializer<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">Err</span><span class="token punctuation">(</span><span class="token namespace">ser<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token string">&quot;can only serialize in ipc mode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u7136\u540E\u662F\u53CD\u5E8F\u5217\u5316\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;de</span><span class="token punctuation">,</span> <span class="token class-name">F</span><span class="token punctuation">:</span> <span class="token class-name">FromRawFd</span> <span class="token operator">+</span> <span class="token class-name">IntoRawFd</span><span class="token operator">&gt;</span> <span class="token class-name">Deserialize</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;de</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Handle</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">deserialize</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>deserializer<span class="token punctuation">:</span> <span class="token class-name">D</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">Handle</span><span class="token operator">&lt;</span><span class="token class-name">F</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">::</span><span class="token class-name">Error</span><span class="token operator">&gt;</span>
    <span class="token keyword">where</span>
        <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token namespace">de<span class="token punctuation">::</span></span><span class="token class-name">Deserializer</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;de</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token function">is_ipc_mode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token keyword">u32</span><span class="token punctuation">::</span><span class="token function">deserialize</span><span class="token punctuation">(</span>deserializer<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
            <span class="token keyword">let</span> fd <span class="token operator">=</span> <span class="token function">lookup_fd</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ok_or_else</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span><span class="token closure-punctuation punctuation">|</span></span> <span class="token namespace">de<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token string">&quot;fd not found in mapping&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
            <span class="token keyword">unsafe</span> <span class="token punctuation">{</span> <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token class-name">Handle</span><span class="token punctuation">(</span><span class="token class-name">Mutex</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token class-name">FromRawFd</span><span class="token punctuation">::</span><span class="token function">from_raw_fd</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">Err</span><span class="token punctuation">(</span><span class="token namespace">de<span class="token punctuation">::</span></span><span class="token class-name">Error</span><span class="token punctuation">::</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token string">&quot;can only deserialize in ipc mode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4ECE\u7528\u6237\u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u4ED6\u53EA\u9700\u8981\u901A\u8FC7 IPC channel \u4F20\u9012\u4E00\u4E2A <code>Handle::new(my_file)</code> \u5C31\u80FD\u5B9E\u73B0\u3002</p><h2 id="serde-\u7684\u73B0\u72B6" tabindex="-1"><a class="header-anchor" href="#serde-\u7684\u73B0\u72B6" aria-hidden="true">#</a> Serde \u7684\u73B0\u72B6</h2><p><em>State of Serde</em></p><p>\u4E0D\u5E78\u7684\u662F\uFF0C\u4E0A\u9762\u6240\u6709\u7684\u4E1C\u897F\u90FD\u4F9D\u8D56\u7EBF\u7A0B\u672C\u5730\u53D8\u91CF\u548C\u5BF9\u5185\u4FE1\u4EE4\u3002\u6574\u4F53\u4E0A\u90FD\u4E0D\u662F\u5F88\u597D\uFF0C\u5982\u679C\u6709\u4E00\u5929\u51FA\u4E86 serde 2.0\uFF0C\u6211\u5E0C\u671B\u6709\u66F4\u597D\u7684\u65B9\u6CD5\u5B9E\u73B0\u4E0A\u9762\u7684\u5185\u5BB9\u3002</p><p>\u5B9E\u9645\u4E0A\uFF0C\u73B0\u5728\u7684 serde \u4ECD\u7136\u6709\u4E0D\u5C11\u95EE\u9898\u548C\u4E0A\u8FF0\u7684 Hack \u884C\u4E3A\u76F8\u5173\u3002</p>`,12),X={href:"https://github.com/serde-rs/serde/issues/1463",target:"_blank",rel:"noopener noreferrer"},nn=s("serde requires in-band signalling"),sn={href:"https://github.com/serde-rs/serde/issues/1183",target:"_blank",rel:"noopener noreferrer"},an=s("Internal buffering disrupts format-specific deserialization features"),pn={href:"https://github.com/serde-rs/json/issues/721",target:"_blank",rel:"noopener noreferrer"},tn=s("serde_json's arbitrary precision feature incompatible with flatten"),en=n("p",null,"\u8BF4\u5230\u8FD9\u91CC\uFF0C\u5728\u6211\u4EEC\u9700\u8981\u91CD\u5199 serde \u4E4B\u524D\uFF0C\u80AF\u5B9A\u8FD8\u6709\u8FDB\u4E00\u6B65\u53EF\u4EE5\u88AB\u6EE5\u7528\u7684\u5730\u65B9\u3002\u4F46\u662F\u73B0\u5728\u662F\u65F6\u5019\u5E94\u8BE5\u6162\u6162\u8003\u8651 serve \u672A\u6765\u7248\u672C\u7684\u8BBE\u60F3\u4E86\u5B83\u5E94\u8BE5\u5BF9\u6570\u636E\u6A21\u578B\u7684\u652F\u6301\u66F4\u53CB\u597D\uFF0C\u53EF\u4EE5\u7528\u66F4\u5C11\u7684 Hack \u6765\u8131\u79BB\u89C4\u5B9A\u6846\u67B6\u3002",-1);function on(cn,ln){const a=e("ExternalLinkIcon");return o(),c(l,null,[n("blockquote",null,[r,n("p",null,[n("strong",null,[k,n("a",d,[m,p(a)])])]),n("p",null,[b,n("a",f,[_,p(a)])]),n("p",null,[g,n("a",h,[w,p(a)]),y,n("a",v,[S,p(a)]),x])]),z,q,E,A,L,R,n("p",null,[j,n("a",V,[N,p(a)]),O]),J,n("p",null,[M,n("a",U,[H,p(a)]),T]),I,D,F,n("p",null,[C,n("a",B,[P,p(a)]),K]),Y,n("p",null,[Z,n("a",$,[G,p(a)]),Q]),W,n("ul",null,[n("li",null,[n("a",X,[nn,p(a)])]),n("li",null,[n("a",sn,[an,p(a)])]),n("li",null,[n("a",pn,[tn,p(a)])])]),en],64)}var kn=u(i,[["render",on]]);export{kn as default};
