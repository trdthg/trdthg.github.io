import{d as n}from"./app.6e4ad136.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u4E00\u4E9B\u7279\u6B8A\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u7279\u6B8A\u70B9" aria-hidden="true">#</a> \u4E00\u4E9B\u7279\u6B8A\u70B9</h1><h2 id="\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840" aria-hidden="true">#</a> \u57FA\u7840</h2><h3 id="\u683C\u5F0F\u5316" tabindex="-1"><a class="header-anchor" href="#\u683C\u5F0F\u5316" aria-hidden="true">#</a> \u683C\u5F0F\u5316</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;type %T value %v \\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> num <span class="token operator">:=</span> <span class="token number">10</span><span class="token punctuation">;</span> num <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

finger <span class="token operator">:=</span> <span class="token number">2</span>
<span class="token keyword">switch</span> finger <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">fallthrough</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sss&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

dd <span class="token operator">:=</span> <span class="token number">1</span>
<span class="token keyword">switch</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> dd <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> dd <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><p>\u6570\u7EC4\u6709\u56FA\u5B9A\u5927\u5C0F\uFF0C\u6570\u7EC4\u7684\u5927\u5C0F\u662F\u7C7B\u578B\u7684\u4E00\u90E8\u5206\uFF0C\u56E0\u6B64[5]int \u548C [25]int\u662F\u4E0D\u540C\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>
a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span>
b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>

veggies <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;potatoes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tomatoes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;brinjal&quot;</span><span class="token punctuation">}</span>
fruits <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;oranges&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apples&quot;</span><span class="token punctuation">}</span>
food <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>veggies<span class="token punctuation">,</span> fruits<span class="token operator">...</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;food:&quot;</span><span class="token punctuation">,</span> veggies<span class="token punctuation">,</span> fruits<span class="token punctuation">,</span> food<span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;food:&quot;</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>veggies<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>food<span class="token punctuation">)</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;food:&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>veggies<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>food<span class="token punctuation">)</span><span class="token punctuation">)</span>
nums <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span>
<span class="token function">change</span><span class="token punctuation">(</span>nums<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token function">pln</span><span class="token punctuation">(</span>nums<span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// map\u7684\u96F6\u503C\u4E3Anil, \u5FC5\u987B\u4F7F\u7528make\u521D\u59CB\u5316</span>
<span class="token comment">// map\u662F \u5F15\u7528\u7C7B\u578B\uFF0C\u5F53map\u88AB\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u53D8\u91CF\u662F\u540E\uFF0C\u4ED6\u4EEC\u5171\u4EAB\u4E00\u4E2A</span>
<span class="token comment">// map\u4E0D\u80FD\u4F7F\u7528==\u5224\u65AD\uFF0C==\u53EA\u80FD\u7528\u6765\u5224\u65ADmap\u662F\u5426\u4E3Anil\uFF0C\u5E94\u8BE5\u904D\u5386\u5B57\u5178\u5143\u7D20\u53BB\u6BD4\u8F83\u4E24\u4E2A\u5B57\u5178</span>
<span class="token keyword">var</span> mm <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token comment">// mm[&quot;s&quot;] = 1                    // \u56DE\u62A5\u9519\uFF0Cmap is nil</span>
<span class="token comment">// fmt.Printf(&quot;%T %v \\n&quot;, mm, mm) // \u8FD9\u91CC\u867D\u7136\u80FD\u6253\u5370\u51FA map[]\uFF0C\u4F46\u662F\u65E0\u6D4E\u4E8E\u4E8B</span>
<span class="token keyword">if</span> mm <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    mm <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    mm<span class="token punctuation">[</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%T %v \\n&quot;</span><span class="token punctuation">,</span> mm<span class="token punctuation">,</span> mm<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
mmm <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
    <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> mmm<span class="token punctuation">[</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token function">delete</span><span class="token punctuation">(</span>mmm<span class="token punctuation">,</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;no such key&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>mmm<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> mmm <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="\u5B57\u7B26\u4E32-\u4E0E-\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32-\u4E0E-\u5207\u7247" aria-hidden="true">#</a> \u5B57\u7B26\u4E32 \u4E0E \u5207\u7247</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u5B57\u7B26\u4E32</span>
name <span class="token operator">:=</span> <span class="token string">&quot;Se\xF1or&quot;</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> name <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
name_ <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>name_<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> name_<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//\u5173\u4E8E\u5207\u7247</span>
<span class="token comment">// a[x] \u662F (*a)[x] \u7684\u7B80\u5199\u5F62\u5F0F</span>
<span class="token comment">// arr := [3]int{1, 2, 3}</span>
<span class="token comment">// modify(&amp;arr)</span>
<span class="token comment">// modify(arr[:]) \u8FD9\u79CD\u66F4\u5E38\u7528</span>
<span class="token comment">// arr++ \u8FD9\u79CD\u76F4\u63A5\u8FDB\u884C\u6307\u9488\u64CD\u4F5C\u4E0D\u88AB\u5141\u8BB8</span>
<span class="token keyword">func</span> <span class="token function">modify1</span><span class="token punctuation">(</span>arr <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">(</span><span class="token operator">*</span>arr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">90</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">modify2</span><span class="token punctuation">(</span>arr <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">90</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">change</span><span class="token punctuation">(</span>elems <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> elems <span class="token punctuation">{</span>
		v <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment">// \u65E0\u6548</span>
		elems<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span> <span class="token comment">// \u6709\u6548</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">pln</span><span class="token punctuation">(</span>elems <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> elems <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;index: %v value %v\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u7ED3\u6784\u4F53</h3><h4 id="\u4E66\u5199" tabindex="-1"><a class="header-anchor" href="#\u4E66\u5199" aria-hidden="true">#</a> \u4E66\u5199</h4><ul><li><p>\u533F\u540D\u7ED3\u6784\u4F53: string,int\u5C31\u662F\u5B57\u6BB5\u540D\uFF0C\u5B57\u6BB5\u4E0D\u80FD\u91CD\u590D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token builtin">string</span>
    <span class="token builtin">int</span>
<span class="token punctuation">}</span>
person <span class="token operator">:=</span> Person<span class="token punctuation">{</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token builtin">int</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span><span class="token builtin">string</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>\u63D0\u5347\u5B57\u6BB5: \u5D4C\u5165\u7684\u7ED3\u6784\u4F53\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u91CC\u9762\u7684\u5B57\u6BB5</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Group <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token builtin">string</span>
    <span class="token builtin">int</span>
    Person
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>\u533F\u540D + \u63D0\u5347\uFF0C\u5411\u4E0A\u9762\u7684\u60C5\u51B5</p><p>\u533F\u540D\u7684\u7C7B\u578B\u53EF\u4EE5\u91CD\u590D\uFF0C\u4F46\u662F\u4F1A\u4EE5\u81EA\u8EAB\u7684\u4E3A\u51C6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>group <span class="token operator">:=</span> Group<span class="token punctuation">{</span><span class="token string">&quot;bb&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> person<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token builtin">string</span><span class="token punctuation">,</span> group<span class="token punctuation">.</span><span class="token builtin">string</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h4 id="\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83" aria-hidden="true">#</a> \u6BD4\u8F83</h4><ul><li>\u7ED3\u6784\u4F53\u662F\u503C\u7C7B\u578B\u3002\u5982\u679C\u5B83\u7684\u6BCF\u4E00\u4E2A\u5B57\u6BB5\u90FD\u662F\u53EF\u6BD4\u8F83\u7684\uFF0C\u5219\u8BE5\u7ED3\u6784\u4F53\u4E5F\u662F\u53EF\u6BD4\u8F83\u7684\u3002\u5982\u679C\u4E24\u4E2A\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u5BF9\u5E94\u5B57\u6BB5\u76F8\u7B49\uFF0C\u5219\u8FD9\u4E24\u4E2A\u53D8\u91CF\u4E5F\u662F\u76F8\u7B49\u7684\u3002</li><li>\u5982\u679C\u7ED3\u6784\u4F53\u5305\u542B\u4E0D\u53EF\u6BD4\u8F83\u7684\u5B57\u6BB5\uFF0C\u5219\u7ED3\u6784\u4F53\u53D8\u91CF\u4E5F\u4E0D\u53EF\u6BD4\u8F83\u3002</li></ul><h3 id="\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5" aria-hidden="true">#</a> \u65B9\u6CD5</h3><h4 id="\u7ED3\u6784\u4F53\u4E0A\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u4E0A\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u4E0A\u7684\u65B9\u6CD5</h4><ul><li>\u7ED3\u6784\u4F53\u65B9\u6CD5: \u4E0D\u7BA1\u662F\u4E00\u4E2A\u503C\uFF0C\u8FD8\u662F\u4E00\u4E2A\u53EF\u4EE5\u89E3\u5F15\u7528\u7684\u6307\u9488\uFF0C\u8C03\u7528\u8FD9\u6837\u7684\u65B9\u6CD5\u90FD\u662F\u5408\u6CD5\u7684\u3002 \u6216\u8005\u8BF4: \u7528<strong>\u4E00\u4E2A\u6307\u9488</strong>\u6216\u8005<strong>\u4E00\u4E2A\u53EF\u53D6\u5F97\u5730\u5740\u7684\u503C</strong>\u6765\u8C03\u7528\u90FD\u662F\u5408\u6CD5\u7684</li><li>\u533F\u540D\u5B57\u6BB5\u7684\u65B9\u6CD5: \u5C5E\u4E8E\u7ED3\u6784\u4F53\u7684\u533F\u540D\u5B57\u6BB5\u7684\u65B9\u6CD5\u53EF\u4EE5\u88AB\u76F4\u63A5\u8C03\u7528\uFF0C\u5C31\u597D\u50CF\u8FD9\u4E9B\u65B9\u6CD5\u662F\u5C5E\u4E8E\u5B9A\u4E49\u4E86\u533F\u540D\u5B57\u6BB5\u7684\u7ED3\u6784\u4F53\u4E00\u6837\u3002</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> rectangle <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	length <span class="token builtin">int</span>
	width  <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>rectangle<span class="token punctuation">)</span> <span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r<span class="token punctuation">.</span>length <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// func (r rectangle) area() {</span>
<span class="token comment">// 	r.length += 1</span>
<span class="token comment">// }</span>

r <span class="token operator">:=</span> rectangle<span class="token punctuation">{</span>
    length<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span>  <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

r<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token operator">&amp;</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// {12, 5}</span>
<span class="token comment">// \u5982\u679C\u6539\u4E3A \u4E0D\u5E26*\u7684\u65B9\u6CD5\uFF0C{10, 5}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u90A3\u4E48\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u6307\u9488\u63A5\u6536\u5668\uFF0C\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u503C\u63A5\u6536\u5668\uFF1F</p><ul><li>\u4E00\u822C\u6765\u8BF4\uFF0C\u6307\u9488\u63A5\u6536\u5668\u53EF\u4EE5\u4F7F\u7528\u5728\uFF1A\u5BF9\u65B9\u6CD5\u5185\u90E8\u7684\u63A5\u6536\u5668\u6240\u505A\u7684\u6539\u53D8\u5E94\u8BE5\u5BF9\u8C03\u7528\u8005\u53EF\u89C1\u65F6\u3002</li><li>\u6307\u9488\u63A5\u6536\u5668\u4E5F\u53EF\u4EE5\u88AB\u4F7F\u7528\u5728\u5982\u4E0B\u573A\u666F\uFF1A\u5F53\u62F7\u8D1D\u4E00\u4E2A\u7ED3\u6784\u4F53\u7684\u4EE3\u4EF7\u8FC7\u4E8E\u6602\u8D35\u65F6\u3002\u8003\u8651\u4E0B\u4E00\u4E2A\u7ED3\u6784\u4F53\u6709\u5F88\u591A\u7684\u5B57\u6BB5\u3002\u5728\u65B9\u6CD5\u5185\u4F7F\u7528\u8FD9\u4E2A\u7ED3\u6784\u4F53\u505A\u4E3A\u503C\u63A5\u6536\u5668\u9700\u8981\u62F7\u8D1D\u6574\u4E2A\u7ED3\u6784\u4F53\uFF0C\u8FD9\u662F\u5F88\u6602\u8D35\u7684\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4F7F\u7528\u6307\u9488\u63A5\u6536\u5668\uFF0C\u7ED3\u6784\u4F53\u4E0D\u4F1A\u88AB\u62F7\u8D1D\uFF0C\u53EA\u4F1A\u4F20\u9012\u4E00\u4E2A\u6307\u9488\u5230\u65B9\u6CD5\u5185\u90E8\u4F7F\u7528\u3002</li><li>\u5728\u5176\u4ED6\u7684\u6240\u6709\u60C5\u51B5\uFF0C\u503C\u63A5\u6536\u5668\u90FD\u53EF\u4EE5\u88AB\u4F7F\u7528\u3002</li></ul><h4 id="\u5B64\u513F\u89C4\u5219\u{1F436}" tabindex="-1"><a class="header-anchor" href="#\u5B64\u513F\u89C4\u5219\u{1F436}" aria-hidden="true">#</a> \u5B64\u513F\u89C4\u5219\u{1F436}</h4><p>\u4E0B\u9762\u7684\u4E0D\u5141\u8BB8\uFF0C\u56E0\u4E3Aint\u7C7B\u578B\u548C\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u4E0D\u518D\u540C\u4E00\u4E2A\u5305\u91CC</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u89E3\u51B3\u65B9\u6CD5</p><ul><li>\u5B9A\u4E49\u7C7B\u578B\u522B\u540D</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> myInt <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>a myInt<span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>b myInt<span class="token punctuation">)</span> myInt <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>wrapper\u5305\u88C5</li></ul><h3 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h3><p>\u7C7B\u4F3C\u4E8Edyn Train</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> SalaryCalculator <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">CalculateSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span>
employees <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>SalaryCalculator<span class="token punctuation">{</span>pemp1<span class="token punctuation">,</span> pemp2<span class="token punctuation">,</span> cemp1<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u63A5\u53E3\u7684\u5185\u90E8\u8868\u793A" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7684\u5185\u90E8\u8868\u793A" aria-hidden="true">#</a> \u63A5\u53E3\u7684\u5185\u90E8\u8868\u793A</h4><p>\u53EF\u4EE5\u628A\u63A5\u53E3\u770B\u4F5C\u5185\u90E8\u7684\u4E00\u4E2A\u5143\u7EC4 (type, value)\u3002 type \u662F\u63A5\u53E3\u5E95\u5C42\u7684\u5177\u4F53\u7C7B\u578B\uFF08Concrete Type\uFF09\uFF0C\u800C value \u662F\u5177\u4F53\u7C7B\u578B\u7684\u503C\u3002</p><h4 id="\u7A7A\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u63A5\u53E3" aria-hidden="true">#</a> \u7A7A\u63A5\u53E3</h4><p>\u6CA1\u6709\u5305\u542B\u65B9\u6CD5\u7684\u63A5\u53E3\u79F0\u4E3A\u7A7A\u63A5\u53E3\u3002\u7A7A\u63A5\u53E3\u8868\u793A\u4E3A interface{}\u3002\u7531\u4E8E\u7A7A\u63A5\u53E3\u6CA1\u6709\u65B9\u6CD5\uFF0C\u56E0\u6B64\u6240\u6709\u7C7B\u578B\u90FD\u5B9E\u73B0\u4E86\u7A7A\u63A5\u53E3\u3002</p><h4 id="\u63A5\u53E3\u7684\u5177\u4F53\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7684\u5177\u4F53\u7C7B\u578B" aria-hidden="true">#</a> \u63A5\u53E3\u7684\u5177\u4F53\u7C7B\u578B</h4><ul><li>\u7C7B\u578B\u65AD\u8A00</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">assert</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> ok<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u662Fint\u7C7B\u578B\uFF0Cv\u5C31\u4F1A\u88AB\u8D4B\u4E3AT\u7684\u96F6\u503C</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> s <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token number">56</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    <span class="token keyword">var</span> i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;Steven Paul&quot;</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>switch type</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">findType</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token builtin">string</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am a string and my value is %s\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am an int and my value is %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Unknown type\\n&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u63A5\u53E32" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E32" aria-hidden="true">#</a> \u63A5\u53E32</h3><h4 id="\u63A5\u53E3\u7C7B\u578B\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7C7B\u578B\u53D8\u91CF" aria-hidden="true">#</a> \u63A5\u53E3\u7C7B\u578B\u53D8\u91CF</h4><p>\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u662F\u63A5\u53E3\u7C7B\u578B\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u53D8\u91CF\u53EF\u4EE5\u88AB\u8D4B\u503C\u4E3A\uFF0C\u4EFB\u4F55\u5B9E\u73B0\u4E86\u63A5\u53E3\u7684\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Describer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
    age  <span class="token builtin">int</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Address <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    state   <span class="token builtin">string</span>
    country <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u73B0\u5728\u8FD8\u4E0D\u80FD\u8D4B\u503C\uFF0C\u63A5\u4E0B\u6765\u4E3A\u4E24\u4E2Astruct\u6211\u4EEC\u5B9E\u73B0\u63A5\u53E3</p><p>\u4E3Aperson\u5B9E\u73B0describe\uFF0C\u4F7F\u7528<strong>\u503C</strong>\u63A5\u53D7\u8005, \u4E0B\u9762\u4E24\u79CD\u8D4B\u503C\u90FD\u53EF\u4EE5\uFF0C\u4E5F\u90FD\u80FD\u8C03\u7528\u65B9\u6CD5</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>p Person<span class="token punctuation">)</span> <span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528\u503C\u63A5\u53D7\u8005\u5B9E\u73B0</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s is %d years old\\n&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> d1 Describer
p1 <span class="token operator">:=</span> Person<span class="token punctuation">{</span><span class="token string">&quot;Sam&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">}</span>
d1 <span class="token operator">=</span> p1
d1<span class="token punctuation">.</span><span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
p2 <span class="token operator">:=</span> Person<span class="token punctuation">{</span><span class="token string">&quot;James&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">}</span>
d1 <span class="token operator">=</span> <span class="token operator">&amp;</span>p2
d1<span class="token punctuation">.</span><span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E3AAddress\u5B9E\u73B0describer, \u4F7F\u7528<strong>\u6307\u9488</strong>\u63A5\u53D7\u8005, \u4E0B\u9762\u5C31\u6BD4\u8F83\u7279\u6B8A d = a\u4E0D\u80FD\u76F4\u63A5\u8D4B\u503C\uFF0C\u5982\u679C\u662F\u5728\u7ED3\u6784\u4F53\u7684\u65B9\u6CD5\u4E2D\uFF0C\u4E0B\u9762\u7684\u4E24\u79CD\u8D4B\u503C\u90FD\u662F\u53EF\u4EE5\u7684\uFF0C\u4F46\u662F\u5728\u63A5\u53E3\u4E2D\u4E0D\u884C</p><p>\u5176\u539F\u56E0\u662F\uFF1A\u5BF9\u4E8E\u4F7F\u7528\u6307\u9488\u63A5\u53D7\u8005\u7684\u65B9\u6CD5\uFF0C\u7528<strong>\u4E00\u4E2A\u6307\u9488</strong>\u6216\u8005<strong>\u4E00\u4E2A\u53EF\u53D6\u5F97\u5730\u5740\u7684\u503C</strong>\u6765\u8C03\u7528\u90FD\u662F\u5408\u6CD5\u7684\u3002\u4F46\u63A5\u53E3\u4E2D\u5B58\u50A8\u7684\u5177\u4F53\u503C\uFF08Concrete Value\uFF09\u5E76\u4E0D\u80FD\u53D6\u5230\u5730\u5740\uFF0C\u56E0\u6B64\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5BF9\u4E8E\u7F16\u8BD1\u5668\u65E0\u6CD5\u81EA\u52A8\u83B7\u53D6 a \u7684\u5730\u5740\uFF0C\u4E8E\u662F\u7A0B\u5E8F\u62A5\u9519\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Address<span class="token punctuation">)</span> <span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528\u6307\u9488\u63A5\u53D7\u8005\u5B9E\u73B0</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;State %s Country %s&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>state<span class="token punctuation">,</span> a<span class="token punctuation">.</span>country<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> d Describer
a <span class="token operator">:=</span> Address<span class="token punctuation">{</span><span class="token string">&quot;Washington&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;USA&quot;</span><span class="token punctuation">}</span>

<span class="token comment">//d = a  // \u8FD9\u662F\u4E0D\u5408\u6CD5\u7684\uFF0C\u4F1A\u62A5\u9519: Address does not implement Describer</span>

d <span class="token operator">=</span> <span class="token operator">&amp;</span>a <span class="token comment">// \u8FD9\u662F\u5408\u6CD5\u7684, Address \u7C7B\u578B\u7684\u6307\u9488\u5B9E\u73B0\u4E86 Describer \u63A5\u53E3</span>
d<span class="token punctuation">.</span><span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="\u63A5\u53E3\u53EF\u4EE5\u5D4C\u5957" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u53EF\u4EE5\u5D4C\u5957" aria-hidden="true">#</a> \u63A5\u53E3\u53EF\u4EE5\u5D4C\u5957</h4><p>\u7C7B\u4F3C\u4E8E\u533F\u540D\u7ED3\u6784\u4F53\u7684\u5D4C\u5957 \u4E00\u4E2A\u7ED3\u6784\u4F53\u5B9E\u73B0\u4E86A\uFF0CB\uFF0C\u90A3\u5C31\u8BF4\u5B83\u4E5F\u5B9E\u73B0\u4E86C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> A <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> B <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> C <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    A
    B
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="\u63A5\u53E3\u7684\u96F6\u503C" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7684\u96F6\u503C" aria-hidden="true">#</a> \u63A5\u53E3\u7684\u96F6\u503C</h4><p>\u63A5\u53E3\u7684\u96F6\u503C\u662Fnil\uFF0C\u540C\u65F6\u5176\u5E95\u5C42\u503C\uFF08Underlying Value\uFF09\u548C\u5177\u4F53\u7C7B\u578B\uFF08Concrete Type\uFF09\u90FD\u4E3A nil\u3002\u8C03\u7528\u65B9\u6CD5\u4F1Apanic</p><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h3><h4 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> \u7279\u6027</h4><ul><li>go\u7684channel\u9ED8\u8BA4\u662F\u53CC\u5411\u7684\uFF0C\u65E2\u53EF\u4EE5send\uFF0C\u4E5F\u53EF\u4EE5recv</li><li>channel\u5FC5\u987B\u6709\u53D1\u9001\u7AEF\u548C\u63A5\u6536\u7AEF\uFF0C\u5426\u5219\u5C31panic</li><li>make(chan int, n) n\u8868\u793A\u7F13\u51B2\u533A\u5927\u5C0F, \u53EF\u4EE5\u7701\u7565, \u9ED8\u8BA4\u4E3A0 <ul><li>\u5982\u679C\u8D85\u8FC7\u7F13\u51B2\u533A\u5927\u5C0F, \u5C31\u4F1Apanic, \u8D85\u8FC7\u7F13\u51B2\u533A\u5927\u5C0F\u7684\u6570\u636E\u5FC5\u987B\u5728\u5176\u4ED6\u7684\u534F\u7A0B\u4E2D\u5904\u7406</li><li>\u5BF9\u4E8Erust,\u5982\u679C\u8D85\u51FA\u7F13\u51B2\u533A\u5927\u5C0Fsend\u5C31\u4F1A\u963B\u585E\uFF0C\u53D1\u4E0D\u51FA\u53BB</li></ul></li><li>\u7F13\u51B2\u533A\u4E5F\u6709len \u548C cap\u7684\u6982\u5FF5</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">sendData</span><span class="token punctuation">(</span>sendch <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sendch <span class="token operator">&lt;-</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cha1 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">sendData</span><span class="token punctuation">(</span>cha1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>cha1<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u5355\u5411channel" tabindex="-1"><a class="header-anchor" href="#\u5355\u5411channel" aria-hidden="true">#</a> \u5355\u5411channel</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u58F0\u660E\u53C2\u6570\u662F\u4E00\u4E2A\u53EA\u80FD\u53D1\u9001\u7684ch</span>
<span class="token keyword">func</span> <span class="token function">sendData</span><span class="token punctuation">(</span>sendch <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sendch <span class="token operator">&lt;-</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EA\u80FD\u53D1\u9001\u7684channel\uFF0C\u4E0B\u9762\u4F7F\u7528\u5B83\u53BB\u63A5\u53D7\u5C31\u4F1Apanic</span>
    <span class="token comment">// \u5982\u679C\u58F0\u660E\u4E3A chan int, \u4E0B\u9762\u7684\u63A5\u53D7\u4E0D\u4F1Apanic\uFF0C\u5728sendData\u4F1A\u88AB\u8F6C\u6362\u4E3A\u53EA\u80FD\u53D1\u9001\u7684channel\uFF0C\u800Cmain\u4E2D\u7684\u4ECD\u7136\u662F\u53CC\u5411\u7684</span>
    sendch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">sendData</span><span class="token punctuation">(</span>sendch<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>sendch<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u5173\u95EDchannel" tabindex="-1"><a class="header-anchor" href="#\u5173\u95EDchannel" aria-hidden="true">#</a> \u5173\u95EDchannel</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">producer</span><span class="token punctuation">(</span>chnl <span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        chnl <span class="token operator">&lt;-</span> i
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53D1\u9001\u5B8C\u6210\u540E, \u4F7F\u7528send\u51FD\u6570\u663E\u5F0F\u5173\u95EDchannel</span>
    <span class="token function">close</span><span class="token punctuation">(</span>chnl<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">producer</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u901A\u8FC7ok\u5224\u65ADchannel\u662F\u5426\u5173\u95ED</span>
        v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch
        <span class="token keyword">if</span> ok <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Received &quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">,</span> ok<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="waitgroup" tabindex="-1"><a class="header-anchor" href="#waitgroup" aria-hidden="true">#</a> waitGroup</h4><p>\u7B49\u5F85\u4E00\u7FA4\u534F\u7A0B\u7ED3\u675F</p><p>\u6CE8\u610F\u4E00\u5B9A\u8981\u4F7F\u7528\u6307\u9488</p><h4 id="\u5DE5\u4F5C\u6C60" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u6C60" aria-hidden="true">#</a> \u5DE5\u4F5C\u6C60</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u6A21\u62DF\u8017\u65F6\u7684\u8BA1\u7B97</span>
<span class="token keyword">func</span> <span class="token function">calculate</span><span class="token punctuation">(</span>number <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token keyword">return</span> number
<span class="token punctuation">}</span>

<span class="token comment">// \u751F\u4EA7\u8005\uFF0C\u5206\u53D1\u5DE5\u4F5C</span>
<span class="token keyword">func</span> <span class="token function">produceJobs</span><span class="token punctuation">(</span>jobs <span class="token keyword">chan</span><span class="token operator">&lt;-</span> Job<span class="token punctuation">,</span> n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token comment">// fmt.Printf(&quot;sending %d \\n&quot;, i)</span>
		jobs <span class="token operator">&lt;-</span> Job<span class="token punctuation">{</span>
			id<span class="token punctuation">:</span>     i<span class="token punctuation">,</span>
			number<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">close</span><span class="token punctuation">(</span>jobs<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D88\u8D39\u8005\uFF0C\u63A5\u53D7\u5DE5\u4F5C\uFF0C\u5E72\u5B8C\u6D3B\u5C31\u901A\u77E5\u4EE5\u4E0B\u7BA1\u7406\u5458</span>
<span class="token keyword">func</span> <span class="token function">consumeFunc</span><span class="token punctuation">(</span>jobs <span class="token operator">&lt;-</span><span class="token keyword">chan</span> Job<span class="token punctuation">,</span> results <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">,</span> wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6BCF\u4E2Aworker\u90FD\u5728\u62A2\u5DE5\u4F5C\uFF0C\u771F\u79EF\u6781\u554A</span>
	<span class="token keyword">for</span> job <span class="token operator">:=</span> <span class="token keyword">range</span> jobs <span class="token punctuation">{</span>
		<span class="token comment">// fmt.Printf(&quot;id: %d\\n&quot;, job.id)</span>
		results <span class="token operator">&lt;-</span> <span class="token function">calculate</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span>number<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7BA1\u7406\u5458\uFF0C\u7B49\u5F85\u6240\u6709\u5DE5\u4EBA\u90FD\u901A\u77E5\u4ED6\uFF0C\u6BCF\u6B21\u88AB\u901A\u77E5\uFF0C\u8BA1\u6570\u5668\u5C31\u51CF1, \u5F53\u8BA1\u6570\u5668\u4E3A0\u662F\u5C31\u4E0D\u518D\u963B\u585E</span>
<span class="token keyword">func</span> <span class="token function">consumeJobs</span><span class="token punctuation">(</span>jobs <span class="token operator">&lt;-</span><span class="token keyword">chan</span> Job<span class="token punctuation">,</span> results <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">,</span> worker_number <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u7B49\u5F85\u4E00\u6279goroutine\u7ED3\u675F\uFF0C\u7C7B\u4F3C\u4E8Ejoin</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	<span class="token comment">// \u4E3A\u6BCF\u4E00\u4E2A\u5DE5\u4F5C\u5F00\u542F\u4E00\u4E2Agoroutine</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> worker_number<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token function">consumeFunc</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> results<span class="token punctuation">,</span> <span class="token operator">&amp;</span>wg<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u963B\u585E\u5F53\u524Dgoroutine\u76F4\u5230\u8BA1\u6570\u5668\u5F520, \u6240\u6709job\u90FD\u5E94\u8BE5\u505A\u5B8C\u4E86\uFF0Cresult\u5E94\u8BE5\u4E5F\u90FD\u53D1\u9001\u51FA\u53BB\u4E86</span>
	<span class="token function">close</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Job <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	id     <span class="token builtin">int</span>
	number <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	startTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	jobs <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Job<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
	results <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

	<span class="token comment">// \u53D1\u9001work, jobs send</span>
	<span class="token keyword">go</span> <span class="token function">produceJobs</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
	<span class="token comment">// jobs recv | results send</span>
	<span class="token keyword">go</span> <span class="token function">consumeJobs</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> results<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
	<span class="token comment">// results recv</span>
	a <span class="token operator">:=</span> <span class="token number">0</span>
	<span class="token keyword">for</span> res <span class="token operator">:=</span> <span class="token keyword">range</span> results <span class="token punctuation">{</span>
		a <span class="token operator">+=</span> res
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;res: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>

	endTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	diff <span class="token operator">:=</span> endTime<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;total time taken &quot;</span><span class="token punctuation">,</span> diff<span class="token punctuation">.</span><span class="token function">Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;seconds&quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><h4 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select</h4><p>\u7528\u6CD5\u633A\u666E\u901A</p><ul><li>\u5982\u679C\u6709\u591A\u4E2Achannel\u51C6\u5907\u5C31\u7EEA, \u5C31\u968F\u673A\u9009\u62E9\u4E00\u4E2A\u6267\u884C</li><li>\u6B7B\u9501\u4E0E\u9ED8\u8BA4\u60C5\u51B5: ch\u5E76\u6CA1\u6709send\u4EFB\u4F55\u4E1C\u897F, \u5982\u679C\u6CA1\u6709default\u5C31\u4F1A\u89E6\u53D1\u6B7B\u9501, \u5BFC\u81F4panic, \u7A7Aselect\u4E00\u6837\u4E5F\u4F1A\u5BFC\u81F4panic</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
    <span class="token keyword">select</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">:</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;default case executed&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u5E76\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1" aria-hidden="true">#</a> \u5E76\u53D1</h3><p>goroutine\u4E0D\u80FD\u4FDD\u8BC1\u5E76\u53D1\u5B89\u5168, \u4E0B\u9762\u662F\u4E00\u4E9B\u89E3\u51B3\u65B9\u6CD5</p><ul><li>\u603B\u4F53\u8BF4\u6765\uFF0C\u5F53 Go \u534F\u7A0B\u9700\u8981\u4E0E\u5176\u4ED6\u534F\u7A0B\u901A\u4FE1\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528channel\u3002\u800C\u5F53\u53EA\u5141\u8BB8\u4E00\u4E2A\u534F\u7A0B\u8BBF\u95EE\u4E34\u754C\u533A\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 Mutex\u3002</li><li>\u5C31\u6211\u4EEC\u4E0A\u9762\u89E3\u51B3\u7684\u95EE\u9898\u800C\u8A00\uFF0C\u6211\u66F4\u503E\u5411\u4E8E\u4F7F\u7528 Mutex\uFF0C\u56E0\u4E3A\u8BE5\u95EE\u9898\u5E76\u4E0D\u9700\u8981\u534F\u7A0B\u95F4\u7684\u901A\u4FE1\u3002\u6240\u4EE5 Mutex \u662F\u5F88\u81EA\u7136\u7684\u9009\u62E9\u3002</li></ul><h4 id="mutex" tabindex="-1"><a class="header-anchor" href="#mutex" aria-hidden="true">#</a> mutex</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">aa</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">,</span> m <span class="token operator">*</span>sync<span class="token punctuation">.</span>Mutex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	m<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	x <span class="token operator">+=</span> <span class="token number">1</span>
	m<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
    <span class="token keyword">var</span> m sync<span class="token punctuation">.</span>Mutex
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">go</span> <span class="token function">aa</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="channel-1" tabindex="-1"><a class="header-anchor" href="#channel-1" aria-hidden="true">#</a> channel</h4><p>\u4F7F\u7528\u7F13\u51B2\u4E3A1\u7684channel\u5B9E\u73B0</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">aa</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">,</span> ch <span class="token keyword">chan</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	ch <span class="token operator">&lt;-</span> <span class="token boolean">true</span>
	x <span class="token operator">+=</span> <span class="token number">1</span>
	<span class="token operator">&lt;-</span>ch
	wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	startTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	<span class="token keyword">var</span> ch <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token function">aa</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">,</span> ch<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="defer" tabindex="-1"><a class="header-anchor" href="#defer" aria-hidden="true">#</a> defer</h3><h4 id="\u5B9E\u53C2\u6C42\u503C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u53C2\u6C42\u503C" aria-hidden="true">#</a> \u5B9E\u53C2\u6C42\u503C</h4><p>\u5F53\u6267\u884C defer \u8BED\u53E5\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u5BF9\u5EF6\u8FDF\u51FD\u6570\u7684\u5B9E\u53C2\u8FDB\u884C\u6C42\u503C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">printA</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;value of a in deferred function&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token number">5</span>
    <span class="token keyword">defer</span> <span class="token function">printA</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
<span class="token comment">// value of a in deferred function 5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="defer\u6808" tabindex="-1"><a class="header-anchor" href="#defer\u6808" aria-hidden="true">#</a> defer\u6808</h4><p>\u5F53\u4E00\u4E2A\u51FD\u6570\u5185\u591A\u6B21\u8C03\u7528 defer \u65F6\uFF0CGo \u4F1A\u628A defer \u8C03\u7528\u653E\u5165\u5230\u4E00\u4E2A\u6808\u4E2D\uFF0C\u968F\u540E\u6309\u7167\u540E\u8FDB\u5148\u51FA\uFF08Last In First Out, LIFO\uFF09\u7684\u987A\u5E8F\u6267\u884C\u3002</p><p>\u4E0B\u9762\u7684\u7A0B\u5E8F\uFF0C\u4F7F\u7528 defer \u6808\uFF0C\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u9006\u5E8F\u6253\u5370\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    name <span class="token operator">:=</span> <span class="token string">&quot;Naveen&quot;</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5012\u53D9\u8F93\u51FA: neevaN</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4F7F\u7528\u573A\u666F</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>r rect<span class="token punctuation">)</span> <span class="token function">area</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// defer wg.Done() // \u4EE3\u66FF\u4E0B\u9762\u76843\u4E2Areturn\u4E2D\u7684wg.Done()</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rect %v&#39;s length should be greater than zero\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>width <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rect %v&#39;s width should be greater than zero\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    area <span class="token operator">:=</span> r<span class="token punctuation">.</span>length <span class="token operator">*</span> r<span class="token punctuation">.</span>width
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rect %v&#39;s area %d\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> area<span class="token punctuation">)</span>
    wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h3><h4 id="\u9519\u8BEF\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u63A5\u53E3" aria-hidden="true">#</a> \u9519\u8BEF\u63A5\u53E3</h4><p>\u5728\u6807\u51C6\u5E93\u91CC\u7684\u5B9A\u4E49</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>open\u51FD\u6570\u7684\u8BBE\u8BA1</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> PathError <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Op   <span class="token builtin">string</span>
    Path <span class="token builtin">string</span>
    Err  <span class="token builtin">error</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>PathError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> e<span class="token punctuation">.</span>Op <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Path <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="\u9519\u8BEF\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u9519\u8BEF\u7C7B\u578B\u65AD\u8A00</h4><p>\u901A\u8FC7\u7C7B\u578B\u65AD\u8A00\u62FF\u5230\u9519\u8BEF\u4FE1\u606F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;/test.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>os<span class="token punctuation">.</span>PathError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;File at path&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> <span class="token string">&quot;failed to open&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;opened successfully&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="\u5B50\u9519\u8BEF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B50\u9519\u8BEF\u7C7B\u578B" aria-hidden="true">#</a> \u5B50\u9519\u8BEF\u7C7B\u578B</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> DNSError <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>DNSError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>DNSError<span class="token punctuation">)</span> <span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>DNSError<span class="token punctuation">)</span> <span class="token function">Temporary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    addr<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">LookupHost</span><span class="token punctuation">(</span><span class="token string">&quot;golangbot123.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>net<span class="token punctuation">.</span>DNSError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        <span class="token keyword">if</span> err<span class="token punctuation">.</span><span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;operation timed out&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> err<span class="token punctuation">.</span><span class="token function">Temporary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;temporary error&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;generic error: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="panic\u548Crecover" tabindex="-1"><a class="header-anchor" href="#panic\u548Crecover" aria-hidden="true">#</a> panic\u548Crecover</h4><p>\u4E0B\u9762\u4F7F\u7528recover\u53BB\u6062\u590Dpanic</p><ul><li>\u6CE8\u610F: Go \u534F\u7A0B\u4E2D\u8C03\u7528 recover \u624D\u7BA1\u7528\u3002recover \u4E0D\u80FD\u6062\u590D\u4E00\u4E2A\u4E0D\u540C\u534F\u7A0B\u7684 panic\u3002</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">recoverName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> r<span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;recovered from &quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">fullName</span><span class="token punctuation">(</span>firstName <span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">,</span> lastName <span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token function">recoverName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> firstName <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;runtime error: first name cannot be nil&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> lastName <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;runtime error: last name cannot be nil&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>firstName<span class="token punctuation">,</span> <span class="token operator">*</span>lastName<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;returned normally from fullName&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="\u6062\u590D\u540E\u83B7\u5F97\u5806\u6808" tabindex="-1"><a class="header-anchor" href="#\u6062\u590D\u540E\u83B7\u5F97\u5806\u6808" aria-hidden="true">#</a> \u6062\u590D\u540E\u83B7\u5F97\u5806\u6808</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;runtime/debug&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> r <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Recovered&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        debug<span class="token punctuation">.</span><span class="token function">PrintStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u66F4\u591A\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u66F4\u591A\u51FD\u6570" aria-hidden="true">#</a> \u66F4\u591A\u51FD\u6570</h3><h4 id="\u533F\u540D\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u51FD\u6570" aria-hidden="true">#</a> \u533F\u540D\u51FD\u6570</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">func</span><span class="token punctuation">(</span>n <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&quot;Gophers&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="\u81EA\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> add <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a add <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a <span class="token operator">+</span> b
    <span class="token punctuation">}</span>
    s <span class="token operator">:=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Sum&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u9AD8\u9636\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u9AD8\u9636\u51FD\u6570" aria-hidden="true">#</a> \u9AD8\u9636\u51FD\u6570</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u63A5\u53D7\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">simple</span><span class="token punctuation">(</span>a <span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">simple</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    f <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a <span class="token operator">+</span> b
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> f
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="\u53CD\u5C04" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5C04" aria-hidden="true">#</a> \u53CD\u5C04</h3><p>\u6CA1\u4EC0\u4E48\u597D\u8BF4\u7684</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> order <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ordId      <span class="token builtin">int</span>
	customerId <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">play</span><span class="token punctuation">(</span>q <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	t <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
	k <span class="token operator">:=</span> t<span class="token punctuation">.</span><span class="token function">Kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	v <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
	fieldsNum <span class="token operator">:=</span> v<span class="token punctuation">.</span><span class="token function">NumField</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Type: &quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token string">&quot;Kind: &quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">,</span> <span class="token string">&quot;FieldNum: &quot;</span><span class="token punctuation">,</span> fieldsNum<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fieldsNum<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">createQuery</span><span class="token punctuation">(</span>q <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> reflect<span class="token punctuation">.</span>Struct <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	t <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	query <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;insert into %s values(&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
	v <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> v<span class="token punctuation">.</span><span class="token function">NumField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">switch</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> reflect<span class="token punctuation">.</span>Int<span class="token punctuation">:</span>
			<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s%d&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s, %d&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token keyword">case</span> reflect<span class="token punctuation">.</span>String<span class="token punctuation">:</span>
			<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\&quot;%s\\&quot;&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s, \\&quot;%s\\&quot;&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;unsupported field type&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s)&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	o <span class="token operator">:=</span> order<span class="token punctuation">{</span>
		ordId<span class="token punctuation">:</span>      <span class="token number">456</span><span class="token punctuation">,</span>
		customerId<span class="token punctuation">:</span> <span class="token number">56</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token function">play</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
	<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------------------------&quot;</span><span class="token punctuation">)</span>
	<span class="token function">createQuery</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>

	<span class="token keyword">var</span> a <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span>
	b <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div>`,121);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
