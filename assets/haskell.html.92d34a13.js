import{r as t,o,c as l,a as s,b as p,F as c,e as n,d as e}from"./app.4adb9c39.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";const i={},u=s("h1",{id:"haskell-\u5B66\u4E60",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#haskell-\u5B66\u4E60","aria-hidden":"true"},"#"),n(" Haskell \u5B66\u4E60")],-1),k=n("\u2B50\uFE0F"),b={href:"http://learnyouahaskell.com/chapters",target:"_blank",rel:"noopener noreferrer"},h=n("Learn You a Haskell for Great Good!"),m=e(`<h2 id="_0-\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#_0-\u7279\u6027" aria-hidden="true">#</a> 0. \u7279\u6027</h2><ol><li><blockquote><p>We usually use &#39; to either denote a strict version of a function (one that isn&#39;t lazy) or a slightly modified version of a function or a variable. Because &#39; is a valid character in functions, we can make a function like this.</p></blockquote><p><code>\u2018</code> \u5728haskell\u4E2D\u662F\u58F0\u660E\u7684\u5408\u6CD5\u5B57\u7B26\uFF0C \u4E00\u822C\u4E2D\u52A0 <code>\u2019</code> \u7684\u51FD\u6570\u4EE3\u8868\u4E00\u4E2A\u51FD\u6570\u7684\u4FEE\u6539\u7248\u672C\u6216\u8005\u4E25\u683C\u7248\u672C</p></li></ol><h2 id="_1-\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#_1-\u5F00\u59CB" aria-hidden="true">#</a> 1. \u5F00\u59CB</h2><p><strong>Starting Out</strong></p><h3 id="_1-1-\u57FA\u672C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-1-\u57FA\u672C\u51FD\u6570" aria-hidden="true">#</a> 1.1 \u57FA\u672C\u51FD\u6570</h3><ul><li>\u6700\u5C0F\u503C: <code>min 1 3</code></li><li>\u6700\u5927\u503C: <code>max 1 3</code></li><li>\u52A0\u4E00: <code>succ 1</code></li></ul><h3 id="_1-2-\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#_1-2-\u5217\u8868" aria-hidden="true">#</a> 1.2 \u5217\u8868</h3><ul><li><p>\u5408\u5E76\uFF1A <code>[1,2,3,4] ++ [9,10,11,12] </code></p></li><li><p>\u6839\u636E\u7D22\u5F15\u53D6\u503C\uFF1A <code>&quot;Steve Buscemi&quot; !! 6</code></p></li><li><p>\u5F00\u5934\u63D2\u5165\uFF1A <code>&#39;A&#39;:&quot; SMALL CAT&quot; </code></p><blockquote><p>[1,2,3] is actually just syntactic sugar for 1:2:3:[].</p></blockquote></li><li><p>\u53D6\u8868\u5934: <code>head [1, 2, 3, 4, 5]</code></p></li><li><p>\u53D6\u8868\u5C3E: <code>tail [1, 2, 3, 4, 5] </code></p></li><li><p>\u53D6\u6700\u540E\u4E00\u4E2A\u5143\u7D20: <code>last [1, 2, 3, 4, 5]</code></p></li><li><p>\u53D6\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF1A <code>init [1, 2, 3, 4, 5]</code></p></li><li><p>\u957F\u5EA6\uFF1A <code>length [5,4,3,2,1] </code></p></li><li><p>\u662F\u5426\u4E3A\u7A7A\uFF1A <code>null [1,2,3] </code></p></li><li><p>\u53CD\u8F6C\u5217\u8868\uFF1A <code>reverse [5,4,3,2,1] </code></p></li><li><p>\u53D6\u524Dn\u4E2A\uFF1A <code>take 3 [5,4,3,2,1] </code></p></li><li><p>\u4ECE\u7B2Cn\u4E2A\u5F00\u59CB\u5411\u540E\u53D6\uFF1A <code>drop 3 [8,4,2,1,5,6] </code></p></li><li><p>\u6700\u5927\u5143\u7D20\uFF1A <code>maximum [1,9,2,3,4] </code></p></li><li><p>\u6700\u5C0F\u5143\u7D20\uFF1A <code>minimum [8,4,2,1,5,6]</code></p></li><li><p>\u52A0\uFF1A <code>sum [5,2,1,6,3,2,5,7] </code></p></li><li><p>\u4E58\uFF1A <code>product [6,2,1,2] </code></p></li><li><p>\u662F\u5426\u5728\u5217\u8868\u4E2D\uFF1A <code>4 </code>elem <code>[3,4,5,6]</code></p></li></ul><h3 id="_1-3-\u751F\u6210\u5F0F" tabindex="-1"><a class="header-anchor" href="#_1-3-\u751F\u6210\u5F0F" aria-hidden="true">#</a> 1.3 \u751F\u6210\u5F0F</h3><ul><li>\u5FAA\u73AF\u8FFD\u52A0\uFF08append\uFF09\uFF1A <code>cycle [1,2,3]</code></li><li>\u5FAA\u73AF\u751F\u6210\uFF08extend\uFF09\uFF1A <code>repeat 5</code></li><li>\u751F\u6210\u5F0F\uFF1A <code>boomBangs xs = [ if x &lt; 10 then &quot;BOOM!&quot; else &quot;BANG!&quot; | x &lt;- xs, odd x]</code></li></ul><h3 id="_1-4-\u5143\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1-4-\u5143\u7EC4" aria-hidden="true">#</a> 1.4 \u5143\u7EC4</h3><p>\u7C7B\u578B\u968F\u610F\uFF0C</p><ul><li>fst\uFF1A <code>fst (&quot;Wow&quot;, False) </code></li><li>snd\uFF1A <code>snd (&quot;Wow&quot;, False)</code></li></ul><h3 id="_1-5-\u91CD\u8981" tabindex="-1"><a class="header-anchor" href="#_1-5-\u91CD\u8981" aria-hidden="true">#</a> 1.5 \u91CD\u8981</h3><ul><li>zip<div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">zip</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token string">&quot;im&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;turtle&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&quot;im&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;turtle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token builtin">zip</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">..</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;orange&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cherry&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;mango&quot;</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;apple&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;orange&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&quot;cherry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&quot;mango&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h2 id="_2-\u7C7B\u578B\u7CFB\u7EDF" tabindex="-1"><a class="header-anchor" href="#_2-\u7C7B\u578B\u7CFB\u7EDF" aria-hidden="true">#</a> 2. \u7C7B\u578B\u7CFB\u7EDF</h2><p><strong>Types and Typeclasses</strong></p><h3 id="_2-1-\u67E5\u770B\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_2-1-\u67E5\u770B\u7C7B\u578B" aria-hidden="true">#</a> 2.1 \u67E5\u770B\u7C7B\u578B</h3><p>ghci\u67E5\u770B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>\uFF1A<span class="token hvariable">t</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;qqq&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-2-typeclasses-101" tabindex="-1"><a class="header-anchor" href="#_2-2-typeclasses-101" aria-hidden="true">#</a> 2.2 Typeclasses 101</h3><p>\u6240\u6709\u7684 <code>== + - * / </code> \u90FD\u662Ffunction</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token operator">==</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>Everything before the =&gt; symbol is called a <em>class constraint</em>. We can read the previous type declaration like this: the equality function takes any two values that are of the same type and returns a Bool. The type of those two values must be a member of the Eq class (this was the class constraint).</p></blockquote><ul><li><code>=&gt;</code> \u4E4B\u524D\u7684\u88AB\u53EB\u505A\u7C7B\u578B\u7EA6\u675F</li></ul><p><strong>Type variables</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token builtin">head</span>
<span class="token builtin">head</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>a \u5C31\u662F\u7C7B\u578B\u53D8\u91CF\uFF0C \u4F46\u662F\u7531\u4E8Ea\u4E0D\u662F\u67D0\u4E00\u4E2A\u7279\u5B9A\u7684\u7C7B\u578B\uFF0C \u6240\u4EE5\u6211\u4EEC\u79F0 head \u591A\u6001\u51FD\u6570</p><blockquote><p>Functions that have type variables are called <strong>polymorphic functions</strong>.</p></blockquote><p><strong>Typeclasses</strong> \u5C31\u662F\u7C7B\u578B\u7EA6\u675F</p><p>\u4E0B\u9762\u4E3E\u51FA\u4E86\u4E00\u7CFB\u5217\u5E38\u7528\u7684Typeclasses</p><h4 id="_2-2-1-eq" tabindex="-1"><a class="header-anchor" href="#_2-2-1-eq" aria-hidden="true">#</a> 2.2.1 Eq</h4><blockquote><p>The Eq typeclass provides an interface for testing for equality. Any type where it makes sense to test for equality between two values of that type should be a member of the Eq class. All standard Haskell types except for IO (the type for dealing with input and output) and functions are a part of the Eq typeclass.</p></blockquote><p>Eq\u63D0\u4F9B\u4E86\u4E00\u4E2A\u6BD4\u8F83\u7684\u63A5\u53E3\uFF0C \u4EFB\u4F55\u80FD\u591F\u6BD4\u8F83\u8BE5\u7C7B\u578B\u7684\u4E24\u4E2A\u503C\u4E4B\u95F4\u76F8\u7B49\u6027\u7684\u90FD\u5E94\u8BE5\u662FEq\u7C7B\u7684\u6210\u5458</p><h4 id="_2-2-2-ord" tabindex="-1"><a class="header-anchor" href="#_2-2-2-ord" aria-hidden="true">#</a> 2.2.2 Ord</h4><blockquote><p>All the types we covered so far except for functions are part of Ord. Ord covers all the standard comparing functions such as &gt;, &lt;, &gt;= and &lt;=. The compare function takes two Ord members of the same type and returns an ordering. Ordering is a type that can be GT, LT or EQ, meaning <em>greater than</em>, <em>lesser than</em> and <em>equal</em>, respectively.</p></blockquote><p>Ord\u5305\u542B\u4E86\u6240\u6709\u6807\u51C6\u7684\u6BD4\u8F83\u51FD\u6570\uFF0C \u4F8B\u5982 &gt; &lt; &gt;= &lt;=, \u6BD4\u8F83\u51FD\u6570\u63A5\u53D7\u4E24\u4E2A\u7C7B\u578B\u76F8\u540C\u7684Ord\u6210\u5458\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u6392\u5E8F\uFF0C\u6392\u5E8F\u662FGT\uFF0C LT\uFF0C EQ\uFF0C\u5206\u522B\u8868\u793A\u5927\u4E8E\uFF0C\u5C0F\u4E8E\uFF0C\u7B49\u4E8E</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;Abrakadabra&quot;</span> <span class="token operator">&lt;</span> <span class="token string">&quot;Zebra&quot;</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;Abrakadabra&quot;</span> <span class="token operator">\`compare\`</span> <span class="token string">&quot;Zebra&quot;</span>
<span class="token constant">LT</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token operator">&gt;=</span> <span class="token number">2</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token operator">\`compare\`</span> <span class="token number">3</span>
<span class="token constant">GT</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-2-3-show" tabindex="-1"><a class="header-anchor" href="#_2-2-3-show" aria-hidden="true">#</a> 2.2.3 Show</h4><blockquote><p>Members of Show can be presented as strings. All types covered so far except for functions are a part of Show. The most used function that deals with the Show typeclass is show. It takes a value whose type is a member of Show and presents it to us as a string.</p></blockquote><p>Show\u7684\u6210\u5458\u53EF\u4EE5\u88AB\u6253\u5370\u4E3A\u5B57\u7B26\u4E32\uFF0C\u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u9664\u4E86\u51FD\u6570\u4E4B\u5916\u7684\u6240\u6709\u7C7B\u578B\u90FD\u662F Show \u7684\u4E00\u90E8\u5206\u3002</p><p>show\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A\u7C7B\u578B\u4E3AShow\u6210\u5458\u7684\u503C\uFF0C\u5E76\u5C06\u5176\u4F5C\u4E3A\u5B57\u7B26\u4E32\u5448\u73B0</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token builtin">read</span>
<span class="token builtin">read</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Read</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-2-4-read" tabindex="-1"><a class="header-anchor" href="#_2-2-4-read" aria-hidden="true">#</a> 2.2.4 Read</h4><blockquote><p>Read is sort of the opposite typeclass of Show. The read function takes a string and returns a type which is a member of Read.</p></blockquote><p>read\u51FD\u6570\u63A5\u53D7\u4E00\u4E2AString\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2ARead\u7684\u6210\u5458\u7684\u7C7B\u578B</p><p><strong>\u95EE\u9898</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">read</span> <span class="token string">&quot;4&quot;</span>
    <span class="token operator">&lt;</span><span class="token hvariable">interactive</span><span class="token operator">&gt;:</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span>
        <span class="token constant">Ambiguous</span> <span class="token keyword">type</span> <span class="token hvariable">variable</span> \`<span class="token hvariable">a&#39;</span> <span class="token keyword">in</span> <span class="token hvariable">the</span> <span class="token hvariable">constraint</span><span class="token operator">:</span>
        	\`<span class="token constant">Read</span> <span class="token hvariable">a&#39;</span> <span class="token hvariable">arising</span> <span class="token hvariable">from</span> <span class="token hvariable">a</span> <span class="token hvariable">use</span> <span class="token keyword">of</span> \`<span class="token builtin">read</span>&#39; <span class="token hvariable">at</span> <span class="token operator">&lt;</span><span class="token hvariable">interactive</span><span class="token operator">&gt;:</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">7</span>
        <span class="token constant">Probable</span> <span class="token hvariable">fix</span><span class="token operator">:</span> <span class="token hvariable">add</span> <span class="token hvariable">a</span> <span class="token keyword">type</span> <span class="token hvariable">signature</span> <span class="token hvariable">that</span> <span class="token hvariable">fixes</span> <span class="token hvariable">these</span> <span class="token keyword">type</span> <span class="token hvariable">variable</span><span class="token punctuation">(</span><span class="token hvariable">s</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>\u6307\u5B9Areturn\u7C7B\u578B</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">read</span> <span class="token string">&quot;5&quot;</span> <span class="token operator">::</span> <span class="token constant">Int</span>
<span class="token number">5</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">read</span> <span class="token string">&quot;5&quot;</span> <span class="token operator">::</span> <span class="token constant">Float</span>
<span class="token number">5.0</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token builtin">read</span> <span class="token string">&quot;5&quot;</span> <span class="token operator">::</span> <span class="token constant">Float</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">4</span>
<span class="token number">20.0</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">read</span> <span class="token string">&quot;[1,2,3,4]&quot;</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token constant">Int</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">read</span> <span class="token string">&quot;(3, &#39;a&#39;)&quot;</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Int</span><span class="token punctuation">,</span> <span class="token constant">Char</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token char string">&#39;a&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="_2-2-5-enum" tabindex="-1"><a class="header-anchor" href="#_2-2-5-enum" aria-hidden="true">#</a> 2.2.5 Enum</h4><blockquote><p>Enum members are sequentially ordered types \u2014 they can be enumerated. The main advantage of the Enum typeclass is that we can use its types in list ranges. They also have defined successors and predecesors, which you can get with the succ and pred functions. Types in this class: (), Bool, Char, Ordering, Int, Integer, Float and Double.</p></blockquote><p>\u679A\u4E3E\u7C7B\u578B\u662F\u6309\u7167\u987A\u5E8F\u6392\u5E8F\u7684\u7C7B\u578B\uFF0C\u4ED6\u4EEC\u53EF\u4EE5\u88AB\u679A\u4E3E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5728\u5217\u8868\u4E2D\u4F7F\u7528\u5B83\u7684\u6240\u6709\u7C7B\u578B\u3002</p><p>\u4ED6\u4EEC\u8FD8\u88AB\u5B9A\u4E49\u4E86\u524D\u9A71\u548C\u540E\u7EE7\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5BF9\u5B83\u7684\u7C7B\u578B\u4F7F\u7528 <code>succ</code> \u548C <code>pred</code> \u51FD\u6570</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token char string">&#39;a&#39;</span><span class="token operator">..</span><span class="token char string">&#39;e&#39;</span><span class="token punctuation">]</span>
<span class="token string">&quot;abcde&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token constant">LT</span> <span class="token operator">..</span> <span class="token constant">GT</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token constant">LT</span><span class="token punctuation">,</span><span class="token constant">EQ</span><span class="token punctuation">,</span><span class="token constant">GT</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">..</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">succ</span> <span class="token char string">&#39;B&#39;</span>
<span class="token char string">&#39;C&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-2-6-bounded" tabindex="-1"><a class="header-anchor" href="#_2-2-6-bounded" aria-hidden="true">#</a> 2.2.6 Bounded</h4><blockquote><p>Bounded members have an upper and a lower bound.</p></blockquote><p>Bounded\u7C7B\u578B\u6709\u4E0A\u754C\u548C\u4E0B\u754C</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">minBound</span> <span class="token operator">::</span> <span class="token constant">Int</span>
<span class="token operator">-</span><span class="token number">2147483648</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">maxBound</span> <span class="token operator">::</span> <span class="token constant">Char</span>
<span class="token char string">&#39;\\1114111&#39;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">maxBound</span> <span class="token operator">::</span> <span class="token constant">Bool</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">minBound</span> <span class="token operator">::</span> <span class="token constant">Bool</span>
<span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><blockquote><p>minBound and maxBound are interesting because they have a type of (Bounded a) =&gt; a. In a sense they are polymorphic constants.</p></blockquote><p>\u4ED6\u4EEC\u662F\u591A\u6001\u6027\u5E38\u91CF\uFF0C\u89C1\u4E0B\u6587</p><p>\u5982\u679C\u5143\u7EC4\u7684\u5143\u7D20\u4E5F\u5728\u5143\u7EC4\u4E2D\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u5143\u7EC4\u4E5F\u662FBounded\u7684\u6210\u5458\u3002</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">maxBound</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Bool</span><span class="token punctuation">,</span> <span class="token constant">Int</span><span class="token punctuation">,</span> <span class="token constant">Char</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token constant">True</span><span class="token punctuation">,</span><span class="token number">2147483647</span><span class="token punctuation">,</span><span class="token char string">&#39;\\1114111&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_2-2-7-num" tabindex="-1"><a class="header-anchor" href="#_2-2-7-num" aria-hidden="true">#</a> 2.2.7 Num</h4><p>Num\u4E5F\u662F\u4E00\u4E2A\u591A\u6001\u6027\u5E38\u91CF\uFF0C\u4ED6\u80FD\u8868\u73B0\u7684\u5411\u4EFB\u4F55Num\u7C7B\u7684\u6210\u5458\uFF08\u5305\u62EC Int, Integer, Float, Double\uFF09</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token number">20</span>
<span class="token number">20</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">t</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">t</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token operator">::</span> <span class="token constant">Int</span>
<span class="token number">20</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token operator">::</span> <span class="token constant">Integer</span>
<span class="token number">20</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token operator">::</span> <span class="token constant">Float</span>
<span class="token number">20.0</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token number">20</span> <span class="token operator">::</span> <span class="token constant">Double</span>
<span class="token number">20.0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>(5 :: Int) * (6 :: Integer)</code> will error\uFF0C while <code>5 * (6 :: Integer)</code> will work just fine</p><h4 id="_2-2-9-integral-floating" tabindex="-1"><a class="header-anchor" href="#_2-2-9-integral-floating" aria-hidden="true">#</a> 2.2.9 Integral &amp; Floating</h4><ul><li><code>Integral </code>contains <code> Int</code> and <code>Integer</code></li><li><code>Floating</code> contains <code>Float</code> and <code>Double</code>.</li></ul><p><code>fromIntegral</code>\u53EF\u4EE5\u5E2E\u6211\u4EEC\u5B9E\u73B0\u7C7B\u578B\u8F6C\u6362</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- It has a type declaration of</span>
<span class="token builtin">fromIntegral</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">b</span><span class="token punctuation">,</span> <span class="token constant">Integral</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span>
<span class="token comment">-- so, you can use it as</span>
<span class="token builtin">fromIntegral</span> <span class="token punctuation">(</span><span class="token builtin">length</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3.2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="_3-\u51FD\u6570\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3-\u51FD\u6570\u8BED\u6CD5" aria-hidden="true">#</a> 3. \u51FD\u6570\u8BED\u6CD5</h2><p><strong>Syntax in Functions</strong></p><h3 id="_3-1-match\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_3-1-match\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 3.1 Match\u8868\u8FBE\u5F0F</h3><p><strong>Pattern marching</strong></p><ol><li><p>\u5728 ghci \u4E2D\u58F0\u660E\u7C7B\u578B\u9700\u8981\u4F7F\u7528\u591A\u884C\u5757\u4E2D</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token operator">:</span><span class="token punctuation">{</span>
<span class="token hvariable">lucky</span> <span class="token operator">::</span> <span class="token constant">Int</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">lucky</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token builtin">show</span><span class="token punctuation">(</span><span class="token hvariable">a</span><span class="token punctuation">)</span>
<span class="token operator">:</span><span class="token punctuation">}</span>

<span class="token operator">:</span><span class="token keyword">type</span> <span class="token hvariable">lucky</span>
<span class="token hvariable">lucky</span> <span class="token operator">::</span> <span class="token constant">Int</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p>\u5339\u914D\u5217\u8868\u957F\u5EA6</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">tell</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Show</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">tell</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;The list is empty&quot;</span>
<span class="token hvariable">tell</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;The list has one element: &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">x</span>
<span class="token hvariable">tell</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;The list has two elements: &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">x</span> <span class="token operator">++</span> <span class="token string">&quot; and &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">y</span>
<span class="token hvariable">tell</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;This list is long. The first two elements are: &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">x</span> <span class="token operator">++</span> <span class="token string">&quot; and &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">y</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>\u4E00\u4E2A length \u51FD\u6570\u7684\u5B9E\u73B0</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">length</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span>
<span class="token builtin">length</span>&#39; <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token builtin">length</span>&#39; <span class="token punctuation">(</span><span class="token hvariable">_</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token builtin">length</span>&#39; <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol><h3 id="_3-2-guard" tabindex="-1"><a class="header-anchor" href="#_3-2-guard" aria-hidden="true">#</a> 3.2 Guard</h3><ol><li><p>\u6807\u51C6</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">bmiTell</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">RealFloat</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">bmiTell</span> <span class="token hvariable">bmi</span>
   <span class="token operator">|</span> <span class="token hvariable">bmi</span> <span class="token operator">&lt;=</span> <span class="token number">18.5</span> <span class="token operator">=</span> <span class="token string">&quot;You&#39;re underweight, you emo, you!&quot;</span>
   <span class="token operator">|</span> <span class="token hvariable">bmi</span> <span class="token operator">&lt;=</span> <span class="token number">25.0</span> <span class="token operator">=</span> <span class="token string">&quot;You&#39;re supposedly normal. Pffft, I bet you&#39;re ugly!&quot;</span>
   <span class="token operator">|</span> <span class="token hvariable">bmi</span> <span class="token operator">&lt;=</span> <span class="token number">30.0</span> <span class="token operator">=</span> <span class="token string">&quot;You&#39;re fat! Lose some weight, fatty!&quot;</span>
   <span class="token operator">|</span> <span class="token builtin">otherwise</span>   <span class="token operator">=</span> <span class="token string">&quot;You&#39;re a whale, congratulations!&quot;</span>

<span class="token hvariable">myCompare</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Ordering</span>
<span class="token hvariable">a</span> <span class="token operator">\`myCompare\`</span> <span class="token hvariable">b</span>
    <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">&gt;</span> <span class="token hvariable">b</span>     <span class="token operator">=</span> <span class="token constant">GT</span>
    <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">==</span> <span class="token hvariable">b</span>    <span class="token operator">=</span> <span class="token constant">EQ</span>
    <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token constant">LT</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li><li><p>inline \u7248\uFF08\u53EF\u8BFB\u6027\u5DEE\uFF09</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">max</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">max</span>&#39; <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">&gt;</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token hvariable">a</span> <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token hvariable">b</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h3 id="_3-3-where" tabindex="-1"><a class="header-anchor" href="#_3-3-where" aria-hidden="true">#</a> 3.3 where</h3><ol><li><p>\u4F5C\u7528\u5728guard\u4E0A</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token hvariable">bmiTell</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">RealFloat</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
    <span class="token hvariable">bmiTell</span> <span class="token hvariable">weight</span> <span class="token hvariable">height</span>
        <span class="token operator">|</span> <span class="token hvariable">bmi</span> <span class="token operator">&lt;=</span> <span class="token hvariable">skinny</span> <span class="token operator">=</span> <span class="token string">&quot;You&#39;re underweight, you emo, you!&quot;</span>
        <span class="token operator">|</span> <span class="token hvariable">bmi</span> <span class="token operator">&lt;=</span> <span class="token hvariable">normal</span> <span class="token operator">=</span> <span class="token string">&quot;You&#39;re supposedly normal. Pffft, I bet you&#39;re ugly!&quot;</span>
        <span class="token operator">|</span> <span class="token hvariable">bmi</span> <span class="token operator">&lt;=</span> <span class="token hvariable">fat</span>    <span class="token operator">=</span> <span class="token string">&quot;You&#39;re fat! Lose some weight, fatty!&quot;</span>
        <span class="token operator">|</span> <span class="token builtin">otherwise</span>     <span class="token operator">=</span> <span class="token string">&quot;You&#39;re a whale, congratulations!&quot;</span>
        <span class="token keyword">where</span> <span class="token hvariable">bmi</span> <span class="token operator">=</span> <span class="token hvariable">weight</span> <span class="token operator">/</span> <span class="token hvariable">height</span> <span class="token operator">^</span> <span class="token number">2</span>
              <span class="token hvariable">skinny</span> <span class="token operator">=</span> <span class="token number">18.5</span>
              <span class="token hvariable">normal</span> <span class="token operator">=</span> <span class="token number">25.0</span>
              <span class="token hvariable">fat</span> <span class="token operator">=</span> <span class="token number">30.0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p><em>where</em> bindings aren&#39;t shared across function bodies of different patterns. If you want several patterns of one function to access some shared name, you have to define it globally.</p></blockquote><p>where \u7684\u7ED1\u5B9A\u4E0D\u80FD\u5728\u51FD\u6570\u4F53\u91CC\u5171\u4EAB\uFF0C\u9664\u975E\u4EE5\u5168\u5C40\u65B9\u5F0F\u5B9A\u4E49</p></li><li><p>\u4F5C\u7528\u5728 pattern match \u4E0A</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token hvariable">initials</span> <span class="token operator">::</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
    <span class="token hvariable">initials</span> <span class="token hvariable">firstname</span> <span class="token hvariable">lastname</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token hvariable">f</span><span class="token punctuation">]</span> <span class="token operator">++</span> <span class="token string">&quot;. &quot;</span> <span class="token operator">++</span> <span class="token punctuation">[</span><span class="token hvariable">l</span><span class="token punctuation">]</span> <span class="token operator">++</span> <span class="token string">&quot;.&quot;</span>
        <span class="token keyword">where</span> <span class="token punctuation">(</span><span class="token hvariable">f</span><span class="token operator">:</span><span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">firstname</span>
              <span class="token punctuation">(</span><span class="token hvariable">l</span><span class="token operator">:</span><span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">lastname</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>\u4F7F\u7528 where \u5B9A\u4E49 function</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token hvariable">calcBmis</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">RealFloat</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token hvariable">a</span><span class="token punctuation">,</span> <span class="token hvariable">a</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
    <span class="token hvariable">calcBmis</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token hvariable">bmi</span> <span class="token hvariable">w</span> <span class="token hvariable">h</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token hvariable">w</span><span class="token punctuation">,</span> <span class="token hvariable">h</span><span class="token punctuation">)</span> <span class="token operator">&lt;-</span> <span class="token hvariable">xs</span><span class="token punctuation">]</span>
        <span class="token keyword">where</span> <span class="token hvariable">bmi</span> <span class="token hvariable">weight</span> <span class="token hvariable">height</span> <span class="token operator">=</span> <span class="token hvariable">weight</span> <span class="token operator">/</span> <span class="token hvariable">height</span> <span class="token operator">^</span> <span class="token number">2</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol><h3 id="_3-4-let-it-be" tabindex="-1"><a class="header-anchor" href="#_3-4-let-it-be" aria-hidden="true">#</a> 3.4 Let it be</h3><p>** <code>let &lt;bindings&gt; in &lt;expression&gt; </code>**</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token hvariable">cylinder</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">RealFloat</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
    <span class="token hvariable">cylinder</span> <span class="token hvariable">r</span> <span class="token hvariable">h</span> <span class="token operator">=</span>
        <span class="token keyword">let</span> <span class="token hvariable">sideArea</span> <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token builtin">pi</span> <span class="token operator">*</span> <span class="token hvariable">r</span> <span class="token operator">*</span> <span class="token hvariable">h</span>
            <span class="token hvariable">topArea</span> <span class="token operator">=</span> <span class="token builtin">pi</span> <span class="token operator">*</span> <span class="token hvariable">r</span> <span class="token operator">^</span><span class="token number">2</span>
        <span class="token keyword">in</span>  <span class="token hvariable">sideArea</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token hvariable">topArea</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>The difference is that <em>let</em> bindings are expressions themselves. <em>where</em> bindings are just syntactic constructs.</p></blockquote><p>Let \u628A\u7ED1\u5B9A\u653E\u5728\u524D\u9762\uFF0Cwhere \u628A\u7ED1\u5B9A\u653E\u5728\u540E\u9762\uFF0C \u4F46\u662F Let \u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C Where\u53EA\u662F\u4E2A\u8BED\u6CD5\u7ED3\u6784</p><h3 id="_3-5-case-expression" tabindex="-1"><a class="header-anchor" href="#_3-5-case-expression" aria-hidden="true">#</a> 3.5 Case Expression</h3><ul><li><p>\u793A\u4F8B 1</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">describeList</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">describeList</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token string">&quot;The list is &quot;</span> <span class="token operator">++</span> <span class="token keyword">case</span> <span class="token hvariable">xs</span> <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;empty.&quot;</span>
                                               <span class="token punctuation">[</span><span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;a singleton list.&quot;</span>
                                               <span class="token hvariable">xs</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;a longer list.&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>\u793A\u4F8B 2</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">describeList</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">describeList</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token string">&quot;The list is &quot;</span> <span class="token operator">++</span> <span class="token hvariable">what</span> <span class="token hvariable">xs</span>
    <span class="token keyword">where</span> <span class="token hvariable">what</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;empty.&quot;</span>
          <span class="token hvariable">what</span> <span class="token punctuation">[</span><span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;a singleton list.&quot;</span>
          <span class="token hvariable">what</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token string">&quot;a longer list.&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h2 id="_4-\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#_4-\u9012\u5F52" aria-hidden="true">#</a> 4. \u9012\u5F52</h2><p><strong>Recursion</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>### 4.1 maxium
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u7B2C\u4E00\u79CD</span>
<span class="token builtin">maximum</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">maximum</span>&#39; <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">error</span> <span class="token string">&quot;maximum of empty list&quot;</span>
<span class="token builtin">maximum</span>&#39; <span class="token punctuation">[</span><span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token hvariable">x</span>
<span class="token builtin">maximum</span>&#39; <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span> <span class="token operator">&gt;</span> <span class="token hvariable">maxTail</span> <span class="token operator">=</span> <span class="token hvariable">x</span>
    <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token hvariable">maxTail</span>
    <span class="token keyword">where</span> <span class="token hvariable">maxTail</span> <span class="token operator">=</span> <span class="token builtin">maximum</span>&#39; <span class="token hvariable">xs</span>
<span class="token comment">-- \u7B2C\u4E8C\u79CD</span>
<span class="token builtin">maximum</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">maximum</span>&#39; <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">error</span> <span class="token string">&quot;maximum of empty list&quot;</span>
<span class="token builtin">maximum</span>&#39; <span class="token punctuation">[</span><span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token hvariable">x</span>
<span class="token builtin">maximum</span>&#39; <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token builtin">max</span> <span class="token hvariable">x</span> <span class="token punctuation">(</span><span class="token builtin">maximum</span>&#39; <span class="token hvariable">xs</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_4-2-replicate" tabindex="-1"><a class="header-anchor" href="#_4-2-replicate" aria-hidden="true">#</a> 4.2 replicate</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">replicate</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">i</span><span class="token punctuation">,</span> <span class="token constant">Ord</span> <span class="token hvariable">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">i</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
<span class="token builtin">replicate</span>&#39; <span class="token hvariable">n</span> <span class="token hvariable">x</span>
    <span class="token operator">|</span> <span class="token hvariable">n</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>    <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token hvariable">x</span><span class="token operator">:</span><span class="token builtin">replicate</span>&#39; <span class="token punctuation">(</span><span class="token hvariable">n</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token hvariable">x</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-3-take" tabindex="-1"><a class="header-anchor" href="#_4-3-take" aria-hidden="true">#</a> 4.3 take</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">take</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">i</span><span class="token punctuation">,</span> <span class="token constant">Ord</span> <span class="token hvariable">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">i</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
<span class="token builtin">take</span>&#39; <span class="token hvariable">n</span> <span class="token hvariable">_</span>
    <span class="token operator">|</span> <span class="token hvariable">n</span> <span class="token operator">&lt;=</span> <span class="token number">0</span>   <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token builtin">take</span>&#39; <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>     <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token builtin">take</span>&#39; <span class="token hvariable">n</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">x</span> <span class="token operator">:</span> <span class="token builtin">take</span>&#39; <span class="token punctuation">(</span><span class="token hvariable">n</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_4-4-zip" tabindex="-1"><a class="header-anchor" href="#_4-4-zip" aria-hidden="true">#</a> 4.4 zip</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">elem</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>
<span class="token builtin">elem</span>&#39; <span class="token hvariable">a</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">False</span>
<span class="token builtin">elem</span>&#39; <span class="token hvariable">a</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">==</span> <span class="token hvariable">x</span>    <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token hvariable">a</span> <span class="token operator">\`elem&#39;\`</span> <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_4-5-quick-sort" tabindex="-1"><a class="header-anchor" href="#_4-5-quick-sort" aria-hidden="true">#</a> 4.5 quick sort</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">quicksort</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
<span class="token hvariable">quicksort</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token hvariable">quicksort</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span>
    <span class="token keyword">let</span> <span class="token hvariable">smallerSorted</span> <span class="token operator">=</span> <span class="token hvariable">quicksort</span> <span class="token punctuation">[</span><span class="token hvariable">a</span> <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">&lt;-</span> <span class="token hvariable">xs</span><span class="token punctuation">,</span> <span class="token hvariable">a</span> <span class="token operator">&lt;=</span> <span class="token hvariable">x</span><span class="token punctuation">]</span>
        <span class="token hvariable">biggerSorted</span> <span class="token operator">=</span> <span class="token hvariable">quicksort</span> <span class="token punctuation">[</span><span class="token hvariable">a</span> <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">&lt;-</span> <span class="token hvariable">xs</span><span class="token punctuation">,</span> <span class="token hvariable">a</span> <span class="token operator">&gt;</span> <span class="token hvariable">x</span><span class="token punctuation">]</span>
    <span class="token keyword">in</span>  <span class="token hvariable">smallerSorted</span> <span class="token operator">++</span> <span class="token punctuation">[</span><span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">++</span> <span class="token hvariable">biggerSorted</span>
<span class="token hvariable">quicksort</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">quicksort</span> <span class="token punctuation">[</span><span class="token hvariable">a</span> <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">&lt;-</span> <span class="token hvariable">xs</span><span class="token punctuation">,</span> <span class="token hvariable">a</span> <span class="token operator">&lt;=</span> <span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">++</span> <span class="token punctuation">[</span><span class="token hvariable">x</span><span class="token punctuation">]</span> <span class="token operator">++</span> <span class="token hvariable">quicksort</span> <span class="token punctuation">[</span><span class="token hvariable">a</span> <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">&lt;-</span> <span class="token hvariable">xs</span><span class="token punctuation">,</span> <span class="token hvariable">a</span> <span class="token operator">&gt;</span> <span class="token hvariable">x</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_5-\u9AD8\u9636\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_5-\u9AD8\u9636\u51FD\u6570" aria-hidden="true">#</a> 5. \u9AD8\u9636\u51FD\u6570</h2><p><em>Higher order functions</em></p><p>\u80FD\u591F\u4EE5\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570, \u6216\u8005\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\u7684\u51FD\u6570\u90FD\u662F\u9AD8\u9636\u51FD\u6570, \u544A\u8BEB\u51FD\u6570\u5C31\u662FHaskell\u7684\u4F53\u9A8C</p><h3 id="_5-1-curried-functions" tabindex="-1"><a class="header-anchor" href="#_5-1-curried-functions" aria-hidden="true">#</a> 5.1 Curried functions</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">max</span> <span class="token number">4</span> <span class="token number">5</span>
<span class="token number">5</span>
<span class="token comment">-- max\u672C\u8EAB\u53EF\u4EE5\u8FD9\u6837\u5199</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token builtin">max</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">5</span>
<span class="token number">5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8BA9\u6211\u4EEC\u770B\u770Bmax\u7684\u7C7B\u578B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">max</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span><span class="token punctuation">.</span>
<span class="token comment">-- \u4E5F\u80FD\u5199\u4F5C</span>
<span class="token builtin">max</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u6240\u4EE5max\u8FD9\u4E2A\u51FD\u6570\u80FD\u591F\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570</p><p>\u540C\u65F6</p><h3 id="_5-2-\u4E00\u4E9B\u9AD8\u9636\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_5-2-\u4E00\u4E9B\u9AD8\u9636\u51FD\u6570" aria-hidden="true">#</a> 5.2 \u4E00\u4E9B\u9AD8\u9636\u51FD\u6570</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">applyTwice</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token hvariable">applyTwice</span> <span class="token hvariable">f</span> <span class="token hvariable">x</span> <span class="token operator">=</span> <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token hvariable">f</span> <span class="token hvariable">x</span><span class="token punctuation">)</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">applyTwice</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token number">10</span>
<span class="token number">16</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">zipWith</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">b</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">c</span><span class="token punctuation">]</span>
<span class="token builtin">zipWith</span>&#39; <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token builtin">zipWith</span>&#39; <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token builtin">zipWith</span>&#39; <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">f</span> <span class="token hvariable">x</span> <span class="token hvariable">y</span> <span class="token operator">:</span> <span class="token builtin">zipWith</span>&#39; <span class="token hvariable">f</span> <span class="token hvariable">xs</span> <span class="token hvariable">ys</span>

<span class="token builtin">zipWith</span>&#39; <span class="token punctuation">(</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ddd&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token string">&quot;aaaccc&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;bbbddd&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>flip</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">flip</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span>
<span class="token builtin">flip</span>&#39; <span class="token hvariable">f</span> <span class="token hvariable">y</span> <span class="token hvariable">x</span> <span class="token operator">=</span> <span class="token hvariable">f</span> <span class="token hvariable">x</span> <span class="token hvariable">y</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-3-map" tabindex="-1"><a class="header-anchor" href="#_5-3-map" aria-hidden="true">#</a> 5.3 Map</h3><blockquote><p><code>map (+3) [1,5,3,1,6] </code>is the same as writing <code>[x+3 | x &lt;- [1,5,3,1,6]].</code></p></blockquote><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token builtin">map</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">b</span><span class="token punctuation">]</span>
    <span class="token builtin">map</span> <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token builtin">map</span> <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">f</span> <span class="token hvariable">x</span> <span class="token operator">:</span> <span class="token builtin">map</span> <span class="token hvariable">f</span> <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_5-4-filter" tabindex="-1"><a class="header-anchor" href="#_5-4-filter" aria-hidden="true">#</a> 5.4 Filter</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token builtin">filter</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
    <span class="token builtin">filter</span> <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token builtin">filter</span> <span class="token hvariable">p</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span>
        <span class="token operator">|</span> <span class="token hvariable">p</span> <span class="token hvariable">x</span>       <span class="token operator">=</span> <span class="token hvariable">x</span> <span class="token operator">:</span> <span class="token builtin">filter</span> <span class="token hvariable">p</span> <span class="token hvariable">xs</span>
        <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token builtin">filter</span> <span class="token hvariable">p</span> <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_5-5-takewhile" tabindex="-1"><a class="header-anchor" href="#_5-5-takewhile" aria-hidden="true">#</a> 5.5 takeWhile</h3><p>take\u76F4\u5230\u9650\u5236\u6761\u4EF6\u5230</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">sum</span> <span class="token punctuation">(</span><span class="token builtin">takeWhile</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">filter</span> <span class="token builtin">odd</span> <span class="token punctuation">(</span><span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">..</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token builtin">sum</span> <span class="token punctuation">(</span><span class="token builtin">takeWhile</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token number">10000</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token hvariable">n</span><span class="token operator">^</span><span class="token number">2</span> <span class="token operator">|</span> <span class="token hvariable">n</span> <span class="token operator">&lt;-</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">..</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">odd</span> <span class="token punctuation">(</span><span class="token hvariable">n</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_5-6-chain" tabindex="-1"><a class="header-anchor" href="#_5-6-chain" aria-hidden="true">#</a> 5.6 Chain</h3><p>\u751F\u6210 Collatz sequences</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">chain</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Integral</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
<span class="token hvariable">chain</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token hvariable">chain</span> <span class="token hvariable">n</span>
    <span class="token operator">|</span> <span class="token builtin">even</span> <span class="token hvariable">n</span> <span class="token operator">=</span>  <span class="token hvariable">n</span><span class="token operator">:</span><span class="token hvariable">chain</span> <span class="token punctuation">(</span><span class="token hvariable">n</span> <span class="token operator">\`div\`</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> <span class="token builtin">odd</span> <span class="token hvariable">n</span>  <span class="token operator">=</span>  <span class="token hvariable">n</span><span class="token operator">:</span><span class="token hvariable">chain</span> <span class="token punctuation">(</span><span class="token hvariable">n</span><span class="token operator">*</span><span class="token number">3</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment">-- \u5C0F\u7EC3\u4E60</span>
<span class="token hvariable">numLongChains</span> <span class="token operator">::</span> <span class="token constant">Int</span>
<span class="token hvariable">numLongChains</span> <span class="token operator">=</span> <span class="token builtin">length</span> <span class="token punctuation">(</span><span class="token builtin">filter</span> <span class="token hvariable">isLong</span> <span class="token punctuation">(</span><span class="token builtin">map</span> <span class="token hvariable">chain</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">..</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">where</span> <span class="token hvariable">isLong</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">length</span> <span class="token hvariable">xs</span> <span class="token operator">&gt;</span> <span class="token number">15</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_5-7-map-0" tabindex="-1"><a class="header-anchor" href="#_5-7-map-0" aria-hidden="true">#</a> 5.7 map (*) [0..]</h3><blockquote><p>If we map <code>*</code> over the list <code> [0..]</code>, we get back a list of functions that only take one parameter, so <code>(Num a) =&gt; [a -&gt; a]</code>. <code>map (*) [0..]</code> produces a list like the one we&#39;d get by writing <code>[(0*),(1*),(2*),(3*),(4*),(5*)...</code></p></blockquote><p>\u5B9E\u4F8B\u4EE3\u7801</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">listOfFuns</span> <span class="token operator">=</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">..</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token hvariable">listOfFuns</span> <span class="token operator">!!</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token number">5</span>
<span class="token number">20</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_5-8-lambdas" tabindex="-1"><a class="header-anchor" href="#_5-8-lambdas" aria-hidden="true">#</a> 5.8 Lambdas</h3><p>\u8BED\u6CD5: \u4E00\u822C\u4EE5\u5C0F\u62EC\u53F7\u9614\u8D77\u6765, \u4EE5 <code>\\</code> \u5F00\u5934</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">numLongChains</span> <span class="token operator">::</span> <span class="token constant">Int</span>
<span class="token hvariable">numLongChains</span> <span class="token operator">=</span> <span class="token builtin">length</span> <span class="token punctuation">(</span><span class="token builtin">filter</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">xs</span> <span class="token operator">-&gt;</span> <span class="token builtin">length</span> <span class="token hvariable">xs</span> <span class="token operator">&gt;</span> <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">map</span> <span class="token hvariable">chain</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">..</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u4E00\u4E2A\u6BD4\u8F83\u597D\u7684\u7528\u53D1</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">flip</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span>
<span class="token builtin">flip</span>&#39; <span class="token hvariable">f</span> <span class="token operator">=</span> <span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token hvariable">y</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token hvariable">y</span> <span class="token hvariable">x</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-9-fold" tabindex="-1"><a class="header-anchor" href="#_5-9-fold" aria-hidden="true">#</a> 5.9 Fold</h3><p>\u6211\u4EEC\u7528 <em>fold</em> \u518D\u6B21\u5B9E\u73B0 <code>sum</code> \u51FD\u6570</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">sum</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">sum</span>&#39; <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">foldl</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">acc</span> <span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token hvariable">acc</span> <span class="token operator">+</span> <span class="token hvariable">x</span><span class="token punctuation">)</span> <span class="token number">0</span> <span class="token hvariable">xs</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">sum</span>&#39; <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token number">11</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol><li><strong>foldl</strong> \u63A5\u53D72\u4E2A\u53C2\u6570, \u5206\u522B\u662F\u51FD\u6570\u548C\u4E00\u4E2A\u521D\u59CB\u503C(\u6216\u8005\u8BF4\u7D2F\u52A0\u5668), acc\u5F00\u59CB\u4E3A0, \u4E4B\u540E\u4F9D\u6B21\u52A0 3, 5, 2, 1</li></ol><p>\u51FD\u6570\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u7D2F\u52A0\u5668, \u7B2C\u4E8C\u4E2A\u662F\u5F53\u524D\u7684\u503C</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u518D\u6B21\u5B9E\u73B0 elem</span>
<span class="token builtin">elem</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>
<span class="token builtin">elem</span>&#39; <span class="token hvariable">x</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">foldl</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">acc</span> <span class="token hvariable">el</span> <span class="token operator">-&gt;</span> <span class="token keyword">if</span> <span class="token hvariable">el</span> <span class="token operator">==</span> <span class="token hvariable">x</span> <span class="token keyword">then</span> <span class="token constant">True</span> <span class="token keyword">else</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token constant">False</span> <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li><p><strong>foldr</strong> \u4E0E foldl \u76F8\u4F3C, \u4E0D\u8FC7\u662F\u4ECE\u53F3\u4FA7\u5F00\u59CB\u904D\u5386\u5143\u7D20, \u5176\u4E2D, foldr\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u5F53\u524D\u5143\u7D20, \u7B2C\u4E8C\u4E2A\u5143\u7D20\u662F acc \u7D2F\u52A0\u5668</p></li><li><p><strong>\u4E24\u79CDmap\u7684\u5B9E\u73B0</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- foldr</span>
<span class="token builtin">map</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">b</span><span class="token punctuation">]</span>
<span class="token builtin">map</span>&#39; <span class="token hvariable">f</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">foldr</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token hvariable">acc</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token hvariable">x</span> <span class="token operator">:</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token hvariable">xs</span>
<span class="token comment">-- foldl</span>
<span class="token builtin">map</span>&#39; <span class="token hvariable">f</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">foldl</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">acc</span> <span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token hvariable">acc</span> <span class="token operator">++</span> <span class="token punctuation">[</span><span class="token hvariable">f</span> <span class="token hvariable">x</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token hvariable">xs</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5728\u4E0A\u9762\u7684\u6848\u4F8B\u4E2D, <code>foldr</code> \u5B9E\u73B0\u7684\u66F4\u597D, \u56E0\u4E3A <code>:</code> \u7684\u5F00\u9500\u6BD4 <code>++</code> \u5C0F\u7684\u591A</p></li><li><p>\u8981\u6CE8\u610F\u7684\u662F foldr \u53EF\u4EE5\u4F5C\u7528\u5728\u65E0\u7EBF\u5217\u8868\u4E0A, foldl \u4E0D\u80FD</p></li><li><p><strong>foldl1</strong> \u548C <strong>foldr1</strong> \u4F7F\u7528\u7B2C\u4E00\u4E2A\u6216\u8005\u6700\u540E\u4E00\u4E2A\u4F5C\u4E3A\u521D\u503C, \u4E0D\u9700\u8981\u90A3\u4E2A\u53C2\u6570\u4E86</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u8FD9\u91CC\u662F\u4E00\u5806\u4F8B\u5B50</span>
<span class="token builtin">maximum</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">maximum</span>&#39; <span class="token operator">=</span> <span class="token builtin">foldr1</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token hvariable">acc</span> <span class="token operator">-&gt;</span> <span class="token keyword">if</span> <span class="token hvariable">x</span> <span class="token operator">&gt;</span> <span class="token hvariable">acc</span> <span class="token keyword">then</span> <span class="token hvariable">x</span> <span class="token keyword">else</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span>

<span class="token builtin">reverse</span>&#39; <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
<span class="token builtin">reverse</span>&#39; <span class="token operator">=</span> <span class="token builtin">foldl</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">acc</span> <span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token hvariable">x</span> <span class="token operator">:</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token builtin">product</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">product</span>&#39; <span class="token operator">=</span> <span class="token builtin">foldr1</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>

<span class="token builtin">filter</span>&#39; <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>
<span class="token builtin">filter</span>&#39; <span class="token hvariable">p</span> <span class="token operator">=</span> <span class="token builtin">foldr</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token hvariable">acc</span> <span class="token operator">-&gt;</span> <span class="token keyword">if</span> <span class="token hvariable">p</span> <span class="token hvariable">x</span> <span class="token keyword">then</span> <span class="token hvariable">x</span> <span class="token operator">:</span> <span class="token hvariable">acc</span> <span class="token keyword">else</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token builtin">head</span>&#39; <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">head</span>&#39; <span class="token operator">=</span> <span class="token builtin">foldr1</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token hvariable">_</span> <span class="token operator">-&gt;</span> <span class="token hvariable">x</span><span class="token punctuation">)</span>

<span class="token builtin">last</span>&#39; <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token builtin">last</span>&#39; <span class="token operator">=</span> <span class="token builtin">foldl1</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">_</span> <span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token hvariable">x</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></li><li><p><strong>scanl</strong> \u548C <strong>scanr</strong> \u548Cfold\u7C7B\u4F3C, \u4E0D\u8FC7\u4F1A\u628A\u4E2D\u95F4\u7684\u72B6\u6001\u4FDD\u7559, \u5E76\u8FD4\u56DE\u4E00\u4E2A\u5217\u8868</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">scanl</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">scanr</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">scanl1</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">acc</span> <span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token keyword">if</span> <span class="token hvariable">x</span> <span class="token operator">&gt;</span> <span class="token hvariable">acc</span> <span class="token keyword">then</span> <span class="token hvariable">x</span> <span class="token keyword">else</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">scanl</span> <span class="token punctuation">(</span><span class="token builtin">flip</span> <span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ol><h3 id="_5-10-\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#_5-10-\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> 5.10 $ \u8FD0\u7B97\u7B26</h3><blockquote><p>Whereas normal function application (putting a space between two things) has a really high precedence, the $ function has the lowest precedence. Function application with a space is left-associative (so f a b c is the same as ((f a) b) c)), function application with $ is right-associative.</p></blockquote><p>\u7A7A\u683C\u5177\u6709\u8F83\u9AD8\u7684\u4F18\u5148\u7EA7, \u4F46\u662F <code>$</code> \u5177\u6709\u6700\u4F4E\u7684\u4F18\u5148\u7EA7</p><p>\u4F7F\u7528\u7A7A\u683C\u5206\u5272\u7684\u662F\u5DE6\u5173\u8054\u7684, \u800C\u4F7F\u7528 <code>$</code> \u5206\u5272\u7684\u662F\u53F3\u5173\u8054\u7684</p><p>\u6709\u4EC0\u4E48\u7528?</p><ol><li><p>\u5C11\u4E9B\u62EC\u53F7</p><p><code>sum (map sqrt [1..130])</code> \u53EF\u4EE5\u7528 <code>sum $ map sqrt [1..130]</code> \u4EE3\u66FF, <code>sqrt 3 + 4 + 9</code>\u662F13+\u6839\u53F73, \u4F46\u662F <code>sqrt $ 3 + 4 + 9</code> \u5C31\u6B63\u5E38</p><p>[]:</p><blockquote><p>How about sum (filter (&gt; 10) (map (*2) [2..10]))? Well, because $ is right-associative, f (g (z x)) is equal to f $ g $ z x. And so, we can rewrite sum (filter (&gt; 10) (map (*2) [2..10])) as sum $ filter (&gt; 10) $ map (*2) [2..10].</p></blockquote></li><li><p>\u589E\u52A0\u7279\u6027</p></li></ol><p>\u52A0\u4E86 <code>$</code> \u610F\u5473\u7740\u53EF\u4EE5\u88AB\u5F53\u4F5C\u51FD\u6570\u6765\u5BF9\u5F85\uFF0C \u6240\u4EE5\u4E0B\u9762\u7684\u5199\u6CD5\u662F\u53EF\u884C\u7684</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">$</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">sqrt</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">7.0</span><span class="token punctuation">,</span><span class="token number">30.0</span><span class="token punctuation">,</span><span class="token number">9.0</span><span class="token punctuation">,</span><span class="token number">1.7320508075688772</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_5-11-\u51FD\u6570\u7EC4\u5408" tabindex="-1"><a class="header-anchor" href="#_5-11-\u51FD\u6570\u7EC4\u5408" aria-hidden="true">#</a> 5.11 \u51FD\u6570\u7EC4\u5408</h3><p><code>.</code> \u662F\u4E00\u4E2A\u8FD0\u7B97\u7B26\uFF0C \u4ED6\u7684\u5B9A\u4E49\u5982\u4E0B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">c</span>
<span class="token hvariable">f</span> <span class="token operator">.</span> <span class="token hvariable">g</span> <span class="token operator">=</span> <span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token hvariable">g</span> <span class="token hvariable">x</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6709\u4E86\u8FD9\u4E2A\u540E\uFF0C \u4E00\u4E9B\u5D4C\u5957\u7684\u51FD\u6570\u5C31\u80FD\u7B80\u5199\uFF0C \u4F8B\u5982</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- before</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">x</span> <span class="token operator">-&gt;</span> <span class="token builtin">negate</span> <span class="token punctuation">(</span><span class="token builtin">abs</span> <span class="token hvariable">x</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">]</span>
<span class="token comment">-- now</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token builtin">negate</span> <span class="token operator">.</span> <span class="token builtin">abs</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_6-\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#_6-\u6A21\u5757" aria-hidden="true">#</a> 6. \u6A21\u5757</h2><p><strong>Modules</strong></p><h3 id="_6-1-\u5BFC\u5165\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#_6-1-\u5BFC\u5165\u6A21\u5757" aria-hidden="true">#</a> 6.1 \u5BFC\u5165\u6A21\u5757</h3><ol><li>\u5BFC\u5165</li></ol><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- 1. \u5BFC\u5165\u4E00\u4E2A\u6A21\u5757</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">import</span> <span class="token constant">Data<span class="token punctuation">.</span>List</span>
<span class="token comment">-- 2. \u5BFC\u5165\u591A\u4E2A\u6A21\u5757</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">m</span> <span class="token operator">+</span> <span class="token constant">Data<span class="token punctuation">.</span>List</span> <span class="token constant">Data<span class="token punctuation">.</span>Map</span> <span class="token constant">Data<span class="token punctuation">.</span>Set</span>
<span class="token comment">-- 3. \u5BFC\u5165\u67D0\u4E9B\u51FD\u6570</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">import</span> <span class="token constant">Data<span class="token punctuation">.</span>List</span> <span class="token punctuation">(</span><span class="token hvariable">nub</span><span class="token punctuation">,</span> <span class="token builtin">sort</span><span class="token punctuation">)</span>
<span class="token comment">-- 4. \u4E0D\u5BFC\u5165\u67D0\u4E9B\u6307\u5B9A\u7684\u51FD\u6570</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">import</span> <span class="token constant">Data<span class="token punctuation">.</span>List</span> <span class="token hvariable">hiding</span> <span class="token punctuation">(</span><span class="token hvariable">nub</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="2"><li>As</li></ol><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u907F\u514D\u91CD\u540D\uFF0C \u4F46\u662F\u4F7F\u7528\u65F6\u5FC5\u987B\u6307\u5B9A Data.Map.filter</span>
<span class="token import-statement"><span class="token keyword">import</span> <span class="token keyword">qualified</span> Data<span class="token punctuation">.</span>Map</span>
<span class="token comment">-- \u6362\u540D\uFF0C \u53EF\u4EE5\u7528 M.filter</span>
<span class="token import-statement"><span class="token keyword">import</span> <span class="token keyword">qualified</span> Data<span class="token punctuation">.</span>Map <span class="token keyword">as</span> M</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_6-2-data-list" tabindex="-1"><a class="header-anchor" href="#_6-2-data-list" aria-hidden="true">#</a> 6.2 Data.List</h3><ol><li><p>intersperse</p><p>\u5411List\u4E2D\u586B\u5145\u5143\u7D20*, \u7C7B\u4F3C\u4E0Epython\u4E2D\u7684 join</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">intersperse</span> <span class="token char string">&#39;.&#39;</span> <span class="token string">&quot;MONKEY&quot;</span>
<span class="token string">&quot;M.O.N.K.E.Y&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">intersperse</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>intercalate</p><p>join\u540E\u8FDB\u884Cconcat, \u586B\u5145\u540E\u5408\u5E76\u8FD4\u56DE,</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">intersperse</span> <span class="token char string">&#39;.&#39;</span> <span class="token string">&quot;MONKEY&quot;</span>
<span class="token string">&quot;M.O.N.K.E.Y&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">intersperse</span> <span class="token number">0</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>transpose</p><p>\u77E9\u9635\u8F6C\u7F6E</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">transpose</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">transpose</span> <span class="token punctuation">[</span><span class="token string">&quot;hey&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;there&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;guys&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token string">&quot;htg&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ehu&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;yey&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;rs&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>foldl&#39; foldl1&#39;</p><p>\u80FD\u591F\u7ACB\u5373\u8FD0\u7B97\uFF0C \u9632\u6B62\u5806\u6808\u6EA2\u51FA</p><blockquote><p>foldl&#39; and foldl1&#39; are stricter versions of their respective lazy incarnations. When using lazy folds on really big lists, you might often get a stack overflow error. The culprit for that is that due to the lazy nature of the folds, the accumulator value isn&#39;t actually updated as the folding happens. What actually happens is that the accumulator kind of makes a promise that it will compute its value when asked to actually produce the result (also called a thunk). That happens for every intermediate accumulator and all those thunks overflow your stack. The strict folds aren&#39;t lazy buggers and actually compute the intermediate values as they go along instead of filling up your stack with thunks. So if you ever get stack overflow errors when doing lazy folds, try switching to their strict versions.</p></blockquote></li><li><p>concat</p><p>\u548C\u5E76\u6240\u6709\u5143\u7D20\u5E76\u8FD4\u56DE</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">concat</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;car&quot;</span><span class="token punctuation">]</span>
<span class="token string">&quot;foobarcar&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">concat</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>concatMap == concat map</strong></p></li><li><p>and &amp; or</p><p>\u9700\u8981\u914D\u5408map\u4F7F\u7528</p><blockquote><p>and takes a list of boolean values and returns True only if all the values in the list are True.</p></blockquote><p>\u5168\u4E3A\u771F\u8FD4\u56DETrue</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">and</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">and</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>or is like and, only it returns True if any of the boolean values in a list is True.</p></blockquote><p>\u6709\u771F\u5C31\u8FD4\u56DETrue</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">or</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">or</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>all &amp; any</p><p>and \u548C or \u7684\u66FF\u4EE3\u54C1</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">any</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">all</span> <span class="token punctuation">(</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">all</span> <span class="token punctuation">(</span><span class="token operator">\`elem\`</span> <span class="token punctuation">[</span><span class="token char string">&#39;A&#39;</span><span class="token operator">..</span><span class="token char string">&#39;Z&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token string">&quot;HEYGUYSwhatsup&quot;</span>
<span class="token constant">False</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">any</span> <span class="token punctuation">(</span><span class="token operator">\`elem\`</span> <span class="token punctuation">[</span><span class="token char string">&#39;A&#39;</span><span class="token operator">..</span><span class="token char string">&#39;Z&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token string">&quot;HEYGUYSwhatsup&quot;</span>
<span class="token constant">True</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>iterate</p><p>\u6839\u636E\u6BCF\u6B21\u7684\u7ED3\u679C\u751F\u6210\u4E0B\u4E00\u6B21\u7684\u503C</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token builtin">take</span> <span class="token number">10</span> <span class="token punctuation">(</span><span class="token builtin">iterate</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span>
<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token builtin">take</span> <span class="token number">5</span> <span class="token operator">$</span> <span class="token builtin">iterate</span> <span class="token punctuation">(</span><span class="token operator">++</span> <span class="token string">&quot;haha&quot;</span><span class="token punctuation">)</span> <span class="token string">&quot;haha&quot;</span>
<span class="token punctuation">[</span><span class="token string">&quot;haha&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hahahaha&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hahahahahaha&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hahahahahahahaha&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;hahahahahahahahahaha&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>splitAt</p><p>\u5206\u5272\u751F\u6210\u5217\u8868</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">splitAt</span> <span class="token number">3</span> <span class="token string">&quot;heyman&quot;</span>
<span class="token punctuation">(</span><span class="token string">&quot;hey&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;man&quot;</span><span class="token punctuation">)</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">splitAt</span> <span class="token number">100</span> <span class="token string">&quot;heyman&quot;</span>
<span class="token punctuation">(</span><span class="token string">&quot;heyman&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">splitAt</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">&quot;heyman&quot;</span>
<span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;heyman&quot;</span><span class="token punctuation">)</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token hvariable">a</span><span class="token punctuation">,</span><span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token builtin">splitAt</span> <span class="token number">3</span> <span class="token string">&quot;foobar&quot;</span> <span class="token keyword">in</span> <span class="token hvariable">b</span> <span class="token operator">++</span> <span class="token hvariable">a</span>
<span class="token string">&quot;barfoo&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>takeWhile &amp; dropWhile</p><p>\u6839\u636E\u6761\u4EF6 take\u6216drop</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">takeWhile</span> <span class="token punctuation">(</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">takeWhile</span> <span class="token punctuation">(</span><span class="token operator">/=</span><span class="token char string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token string">&quot;This is a sentence&quot;</span>
<span class="token string">&quot;This&quot;</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">dropWhile</span> <span class="token punctuation">(</span><span class="token operator">/=</span><span class="token char string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token string">&quot;This is a sentence&quot;</span>
<span class="token string">&quot; is a sentence&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">dropWhile</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>break &amp; span</p><p>\u5C31\u662F\u628AtakeWhile\u7684\u540E\u534A\u90E8\u5206\u4E5F\u8FD4\u56DE\u4E86</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">break</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">span</span> <span class="token punctuation">(</span><span class="token operator">/=</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>
<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>sort</p><p>\u6392\u5E8F\u5457</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">sort</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">sort</span> <span class="token string">&quot;This will be sorted soon&quot;</span>
<span class="token string">&quot;    Tbdeehiillnooorssstw&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>group</p><p>\u5206\u7EC4\u4F46\u4E0D\u6392\u5E8F</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">group</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>inits &amp; tails</p><p>\u751F\u6210\u4E00\u4E2A\u524D\u7F00\u548C</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">inits</span> <span class="token string">&quot;w00t&quot;</span>
<span class="token punctuation">[</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w00t&quot;</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">tails</span> <span class="token string">&quot;w00t&quot;</span>
<span class="token punctuation">[</span><span class="token string">&quot;w00t&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;00t&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0t&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">w</span> <span class="token operator">=</span> <span class="token string">&quot;w00t&quot;</span> <span class="token keyword">in</span> <span class="token builtin">zip</span> <span class="token punctuation">(</span><span class="token hvariable">inits</span> <span class="token hvariable">w</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token hvariable">tails</span> <span class="token hvariable">w</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w00t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;00t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;w0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;0t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;w00&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;w00t&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>isInfixOf &amp; isPrefixOf &amp; isSuffixOf</p><p>\u662F\u5426\u662Fsublist, \u662F\u5426\u5728\u5F00\u5934, \u662F\u5426\u5728\u7ED3\u5C3E</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;cat&quot;</span> <span class="token operator">\`isInfixOf\`</span> <span class="token string">&quot;im a cat burglar&quot;</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;Cat&quot;</span> <span class="token operator">\`isInfixOf\`</span> <span class="token string">&quot;im a cat burglar&quot;</span>
<span class="token constant">False</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;cats&quot;</span> <span class="token operator">\`isInfixOf\`</span> <span class="token string">&quot;im a cat burglar&quot;</span>
<span class="token constant">False</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;hey&quot;</span> <span class="token operator">\`isPrefixOf\`</span> <span class="token string">&quot;hey there!&quot;</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;hey&quot;</span> <span class="token operator">\`isPrefixOf\`</span> <span class="token string">&quot;oh hey there!&quot;</span>
<span class="token constant">False</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;there!&quot;</span> <span class="token operator">\`isSuffixOf\`</span> <span class="token string">&quot;oh hey there!&quot;</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;there!&quot;</span> <span class="token operator">\`isSuffixOf\`</span> <span class="token string">&quot;oh hey there&quot;</span>
<span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li><li><p>elem &amp; notElem &amp; partition</p></li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5224\u65AD\u662F\u5426\u662F, \u5206\u4E3A\u4E24\u7EC4

\`\`\`haskell
ghci&gt; partition (\`elem\` [&#39;A&#39;..&#39;Z&#39;]) &quot;BOBsidneyMORGANeddy&quot;
(&quot;BOBMORGAN&quot;,&quot;sidneyeddy&quot;)
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
17. find &amp; findIndex &amp; findIndices

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>find\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u7B26\u5408\u7684\u5143\u7D20</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">find</span> <span class="token punctuation">(</span><span class="token operator">&gt;</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token constant">Just</span> <span class="token number">5</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">find</span> <span class="token punctuation">(</span><span class="token operator">&gt;</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span>
<span class="token constant">Nothing</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token hvariable">find</span>
<span class="token hvariable">find</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Maybe</span> <span class="token hvariable">a</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">findIndex</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token constant">Just</span> <span class="token number">5</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">findIndex</span> <span class="token punctuation">(</span><span class="token operator">==</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token constant">Nothing</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">findIndices</span> <span class="token punctuation">(</span><span class="token operator">\`elem\`</span> <span class="token punctuation">[</span><span class="token char string">&#39;A&#39;</span><span class="token operator">..</span><span class="token char string">&#39;Z&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token string">&quot;Where Are The Caps?&quot;</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
18. elemIndex  &amp; elemIndIces

    \u8FD4\u56DE\u5143\u7D20\u7684index

    \`\`\`haskell
    ghci&gt; :t elemIndex
    elemIndex :: (Eq a) =&gt; a -&gt; [a] -&gt; Maybe Int
    ghci&gt; 4 \`elemIndex\` [1,2,3,4,5,6]
    Just 3
    ghci&gt; 10 \`elemIndex\` [1,2,3,4,5,6]
    Nothing

    ghci&gt; &#39; &#39; \`elemIndices\` &quot;Where are the spaces?&quot;
    [5,9,13]
    \`\`\`
19. more zip

    \u4E00\u76F4\u63D0\u4F9B\u52307

    \`\`\`haskell
    ghci&gt; zipWith3 (\\x y z -&gt; x + y + z) [1,2,3] [4,5,2,2] [2,2,3]
    [7,9,8]
    ghci&gt; zip4 [2,3,3] [2,2,2] [5,5,3] [2,2,2]
    [(2,2,5,2),(3,2,5,2),(3,2,3,2)]
    \`\`\`
20. line &amp; word

    line \u5207\u51FA\u6CA1\u4E00\u884C, word\u5207\u51FA\u6BCF\u4E2A\u5355\u8BCD

    \`\`\`haskell
    ghci&gt; lines &quot;first line\\nsecond line\\nthird line&quot;
    [&quot;first line&quot;,&quot;second line&quot;,&quot;third line&quot;]
    ghci&gt; unlines [&quot;first line&quot;, &quot;second line&quot;, &quot;third line&quot;]
    &quot;first line\\nsecond line\\nthird line\\n&quot;
    ghci&gt; words &quot;hey these are the words in this sentence&quot;
    [&quot;hey&quot;,&quot;these&quot;,&quot;are&quot;,&quot;the&quot;,&quot;words&quot;,&quot;in&quot;,&quot;this&quot;,&quot;sentence&quot;]
    ghci&gt; words &quot;hey these           are    the words in this\\nsentence&quot;
    [&quot;hey&quot;,&quot;these&quot;,&quot;are&quot;,&quot;the&quot;,&quot;words&quot;,&quot;in&quot;,&quot;this&quot;,&quot;sentence&quot;]
    ghci&gt; unwords [&quot;hey&quot;,&quot;there&quot;,&quot;mate&quot;]
    &quot;hey there mate&quot;
    \`\`\`
21. nub

    \u5143\u7D20\u53BB\u91CD

    \`\`\`haskell
    ghci&gt; nub [1,2,3,4,3,2,1,2,3,4,3,2,1]
    [1,2,3,4]
    ghci&gt; nub &quot;Lots of words and stuff&quot;
    &quot;Lots fwrdanu&quot;
    \`\`\`
22. delete

    \u5220\u6389\u5730\u4E00\u4E2A\u5339\u914D\u7684\u5143\u7D20

    \`\`\`haskell
    -- delete takes an element and a list and deletes the first occurence of that element in the list.

    ghci&gt; delete &#39;h&#39; &quot;hey there ghang!&quot;
    &quot;ey there ghang!&quot;
    ghci&gt; delete &#39;h&#39; . delete &#39;h&#39; $ &quot;hey there ghang!&quot;
    &quot;ey tere ghang!&quot;
    ghci&gt; delete &#39;h&#39; . delete &#39;h&#39; . delete &#39;h&#39; $ &quot;hey there ghang!&quot;
    &quot;ey tere gang!&quot;
    \`\`\`
23. \\\\\\\\

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><p>\u5220\u6389\u66F4\u591A</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \\\\ is the list difference function. It acts like a set difference, basically. For every element in the right-hand list, it removes a matching element in the left one.</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token operator">..</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">\\\\</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token string">&quot;Im a big baby&quot;</span> <span class="token operator">\\\\</span> <span class="token string">&quot;big&quot;</span>
<span class="token string">&quot;Im a  baby&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>
24. union

    \u6C42\u5E76\u96C6

    \`\`\`haskell
    ghci&gt; &quot;hey man&quot; \`union\` &quot;man what&#39;s up&quot;
    &quot;hey manwt&#39;sup&quot;
    ghci&gt; [1..7] \`union\` [5..10]
    [1,2,3,4,5,6,7,8,9,10]
    \`\`\`
25. intersect

    \u6C42\u4EA4\u96C6

    \`\`\`haskell
    ghci&gt; [1..7] \`intersect\` [5..10]
    [5,6,7]
    \`\`\`
26. insert

    \u63D2\u5165\u5457

    \`\`\`haskell
    ghci&gt; insert 4 [3,5,1,2,8,2]
    [3,4,5,1,2,8,2]
    ghci&gt; insert 4 [1,3,4,4,1]
    [1,3,4,4,4,1]
    \`\`\`
27. deleteBy, unionBy, intersectBy and groupBy

    \u4EE5\u4E00\u4E2A\u6570\u5F00\u59CB\uFF0C \u4EE5\u6B64\u6BD4\u8F83\u4ED6\u540E\u9762\u7684\u6570\uFF0C\u77E5\u9053\u4E0D\u5339\u914D\uFF0C \u7EC4\u6210\u6570\u7EC4

    \u63A5\u7740\u4EE5\u7B2C\u4E00\u4E2A\u4E0D\u5339\u914D\u7684\u6570\u5F00\u59CB\uFF0C\u91CD\u590D\u6BD4\u8F83

    \`\`\`haskell
    ghci&gt; let values = [-4.3, -2.4, -1.2, 0.4, 2.3, 5.9, 10.5, 29.1, 5.3, -2.4, -14.5, 2.9, 2.3]
    ghci&gt; groupBy (\\x y -&gt; (x &gt; 0) == (y &gt; 0)) values
    -- \u4E5F\u53EF\u4EE5\u5199\u6210 \\x y -&gt; (x &gt; 0) &amp;&amp; (y &gt; 0) || (x &lt;= 0) &amp;&amp; (y &lt;= 0)
    [[-4.3,-2.4,-1.2],[0.4,2.3,5.9,10.5,29.1,5.3],[-2.4,-14.5],[2.9,2.3]]
    ghci&gt; groupBy (\\x y -&gt; (x&gt;0) == (y&lt;0)) values
    -- \u7B2C\u4E00\u4E2A\u6570\u548C\u540E\u9762\u7684\u7B26\u53F7\u90FD\u4E0D\u540C
    [[-4.3],[-2.4],[-1.2,0.4,2.3,5.9,10.5,29.1,5.3],[-2.4],[-14.5,2.9,2.3]]
    \`\`\`
28. on

    \u8FD8\u6709\u66F4\u597D\u7684\u65B9\u6CD5\u5199\u4E0A\u9762\u7684 lambada \u8868\u8FBE\u5F0F

    on \u9700\u8981\u4ECE Data.Function \u5BFC\u5165

    on\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u4F1A\u5BF9\u53C2\u6570\u505A\u7684\u8FD0\u7B97\uFF0C \u7B2C\u4E00\u4E2A\u662F\u51FD\u6570\u4F1A\u6BD4\u8F83\u4E24\u4E2A\u8FD0\u7B97\u540E\u7ED3\u679C

    \`\`\`haskell
    on :: (b -&gt; b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; a -&gt; c
    f \`on\` g = \\x y -&gt; f (g x) (g y)
    \`\`\`

### 6.3 Data.Char

Data.Char \u63D0\u4F9B\u4E86\u4E00\u7CFB\u5217\u5904\u7406\u5B57\u7B26\u7684\u51FD\u6570\uFF0C\u914D\u5408 map \u548C filter \u4F7F\u7528\u4E5F\u53EF\u4EE5\u7528\u6765\u5904\u7406\u5B57\u7B26\u4E32

**1. \u5224\u65AD\u7C7B**

1. isControl checks whether a character is a control character.
2. isSpace checks whether a character is a white-space characters. That includes spaces, tab characters, newlines, etc.
3. isLower checks whether a character is lower-cased.
4. isUpper checks whether a character is upper-cased.
5. isAlpha checks whether a character is a letter.
6. isAlphaNum checks whether a character is a letter or a number.
7. isPrint checks whether a character is printable. Control characters, for instance, are not printable.
8. isDigit checks whether a character is a digit.
9. isOctDigit checks whether a character is an octal digit.
10. isHexDigit checks whether a character is a hex digit.
11. isLetter checks whether a character is a letter.
12. isMark checks for Unicode mark characters. Those are characters that combine with preceding letters to form latters with accents. Use this if you are French.
13. isNumber checks whether a character is numeric.
14. isPunctuation checks whether a character is punctuation.
15. isSymbol checks whether a character is a fancy mathematical or currency symbol.
16. isSeparator checks for Unicode spaces and separators.
17. isAscii checks whether a character falls into the first 128 characters of the Unicode character set.
18. isLatin1 checks whether a character falls into the first 256 characters of Unicode.
19. isAsciiUpper checks whether a character is ASCII and upper-case.
20. isAsciiLower checks whether a character is ASCII and lower-case.

**2. \u8F6C\u6362\u7C7B**

1. toUpper converts a character to upper-case. Spaces, numbers, and the like remain unchanged.
2. toLower converts a character to lower-case.
3. toTitle converts a character to title-case. For most characters, title-case is the same as upper-case.
4. digitToInt converts a character to an Int. To succeed, the character must be in the ranges &#39;0&#39;..&#39;9&#39;, &#39;a&#39;..&#39;f&#39; or &#39;A&#39;..&#39;F&#39;.
5. intToDigit is the inverse function of digitToInt. It takes an Int in the range of 0..15 and converts it to a lower-case character.
6. ord and chr convert characters to their corresponding numbers and vice versa:

   \`\`\`haskell
   ghci&gt; ord &#39;a&#39;
   97
   ghci&gt; chr 97
   &#39;a&#39;
   ghci&gt; map ord &quot;abcdefgh&quot;
   [97,98,99,100,101,102,103,104]
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br></div></div><ol start="7"><li><p>encode</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u4E00\u79CD\u7F16\u7801\u65B9\u5F0F</span>
<span class="token hvariable">encode</span> <span class="token operator">::</span> <span class="token constant">Int</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">encode</span> <span class="token hvariable">shift</span> <span class="token hvariable">msg</span> <span class="token operator">=</span>
	<span class="token keyword">let</span> <span class="token hvariable">ords</span> <span class="token operator">=</span> <span class="token builtin">map</span> <span class="token builtin">ord</span> <span class="token hvariable">msg</span>
		<span class="token hvariable">shifted</span> <span class="token operator">=</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">+</span> <span class="token hvariable">shift</span><span class="token punctuation">)</span> <span class="token hvariable">ords</span>
	<span class="token keyword">in</span>  <span class="token builtin">map</span> <span class="token builtin">chr</span> <span class="token hvariable">shifted</span>
<span class="token comment">-- \u53E6\u4E00\u79CD\u5B9E\u73B0</span>
<span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token builtin">chr</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token operator">+</span> <span class="token hvariable">shift</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token builtin">ord</span><span class="token punctuation">)</span> <span class="token hvariable">msg</span><span class="token punctuation">.</span>
<span class="token comment">-- \u5B9E\u4F8B\u4EE3\u7801</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">encode</span> <span class="token number">3</span> <span class="token string">&quot;Heeeeey&quot;</span>
<span class="token string">&quot;Khhhhh|&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">encode</span> <span class="token number">4</span> <span class="token string">&quot;Heeeeey&quot;</span>
<span class="token string">&quot;Liiiii}&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">encode</span> <span class="token number">1</span> <span class="token string">&quot;abcd&quot;</span>
<span class="token string">&quot;bcde&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">encode</span> <span class="token number">5</span> <span class="token string">&quot;Marry Christmas! Ho ho ho!&quot;</span>
<span class="token string">&quot;Rfww~%Hmwnxyrfx&amp;%Mt%mt%mt&amp;&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li></ol><h3 id="_6-4-data-map" tabindex="-1"><a class="header-anchor" href="#_6-4-data-map" aria-hidden="true">#</a> 6.4 Data.Map</h3><p>\u4E0B\u9762\u7ED9\u51FA\u4E86\u51E0\u79CD\u5199map\u7684\u65B9\u6CD5</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u7B2C\u4E00\u79CD filter\u5B9E\u73B0</span>
<span class="token hvariable">findKey</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">k</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span> <span class="token hvariable">v</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token hvariable">v</span>
<span class="token hvariable">findKey</span> <span class="token hvariable">key</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">snd</span> <span class="token operator">.</span> <span class="token builtin">head</span> <span class="token operator">.</span> <span class="token builtin">filter</span> <span class="token punctuation">(</span><span class="token operator">\\</span> <span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span> <span class="token hvariable">v</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">key</span> <span class="token operator">==</span> <span class="token hvariable">k</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token hvariable">xs</span>

<span class="token comment">-- \u7B2C\u4E8C\u79CD Maybe\u975E\u7A7A\u6821\u9A8C</span>
<span class="token hvariable">findKey</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">k</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span> <span class="token hvariable">v</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Maybe</span> <span class="token hvariable">v</span>
<span class="token hvariable">findKey</span> <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">Nothing</span>
<span class="token hvariable">findKey</span> <span class="token hvariable">key</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span> <span class="token hvariable">v</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token hvariable">k</span> <span class="token operator">==</span> <span class="token hvariable">key</span>
                                                        <span class="token keyword">then</span> <span class="token constant">Just</span> <span class="token hvariable">v</span>
                                                        <span class="token keyword">else</span> <span class="token hvariable">findKey</span> <span class="token hvariable">key</span> <span class="token hvariable">xs</span>

<span class="token comment">-- \u7B2C\u4E09\u79CD \u4F7F\u7528foldr\u800C\u975E\u9012\u5F52\uFF0C\u56E0\u4E3A\u6BD4\u9012\u5F52\u7684\u53EF\u8BFB\u6027\u66F4\u597D</span>
<span class="token comment">-- Note: It&#39;s usually better to use folds for this standard list recursion pattern instead of explicitly writing the recursion because they&#39;re easier to read and identify. Everyone knows it&#39;s a fold when they see the foldr call, but it takes some more thinking to read explicit recursion.</span>
<span class="token hvariable">findKey</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">k</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span><span class="token hvariable">v</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Maybe</span> <span class="token hvariable">v</span>
<span class="token hvariable">findKey</span> <span class="token hvariable">key</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">foldr</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span><span class="token hvariable">v</span><span class="token punctuation">)</span> <span class="token hvariable">acc</span> <span class="token operator">-&gt;</span> <span class="token keyword">if</span> <span class="token hvariable">key</span> <span class="token operator">==</span> <span class="token hvariable">k</span> <span class="token keyword">then</span> <span class="token constant">Just</span> <span class="token hvariable">v</span> <span class="token keyword">else</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token constant">Nothing</span> <span class="token hvariable">xs</span>

<span class="token hvariable">main</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
        <span class="token keyword">let</span> <span class="token hvariable">phoneBook</span> <span class="token operator">=</span>
                <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;111&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;222&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;ccc&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;333&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">]</span>
        <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">findKey</span> <span class="token string">&quot;bbb&quot;</span> <span class="token hvariable">phoneBook</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u4E0B\u9762\u662F\u4E00\u5806\u51FD\u6570</p><ol><li><p>fromList</p><p>\u521B\u5EFA\u4E00\u4E2AMap</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;betty&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;555-2938&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;bonnie&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;452-2928&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;lucille&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;205-2928&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;betty&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;555-2938&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;bonnie&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;452-2928&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;lucille&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;205-2928&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u81EA\u5DF1\u5B9E\u73B0</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- We can implement our own fromList by using the empty map, insert and a fold. Watch:</span>

<span class="token hvariable">fromList&#39;</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span><span class="token hvariable">v</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Map<span class="token punctuation">.</span>Map</span> <span class="token hvariable">k</span> <span class="token hvariable">v</span>
<span class="token hvariable">fromList&#39;</span> <span class="token operator">=</span> <span class="token builtin">foldr</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span><span class="token hvariable">v</span><span class="token punctuation">)</span> <span class="token hvariable">acc</span> <span class="token operator">-&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token hvariable">k</span> <span class="token hvariable">v</span> <span class="token hvariable">acc</span><span class="token punctuation">)</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>empty</p><p>\u8FD4\u56DE\u4E00\u4E2A\u7A7AMap</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span> 
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>insert</p><p>\u63D2\u5165\u4E00\u5BF9k\uFF0C v</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">3</span> <span class="token number">100</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">5</span> <span class="token number">600</span> <span class="token punctuation">(</span><span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">4</span> <span class="token number">200</span> <span class="token punctuation">(</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">3</span> <span class="token number">100</span>  <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">5</span> <span class="token number">600</span> <span class="token operator">.</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">4</span> <span class="token number">200</span> <span class="token operator">.</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">3</span> <span class="token number">100</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>null</p><p>\u68C0\u67E5\u662F\u5426\u4E3A\u7A7A</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">null</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">null</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>size</p><p>\u8FD4\u56DEmap\u7684\u5927\u5C0F</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>size</span> <span class="token hvariable">Map<span class="token punctuation">.</span>empty</span>
<span class="token number">0</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>size</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token number">5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>singleton</p><p>\u91CD\u5EFA\u53EA\u6709\u4E00\u5BF9kv\u7684Map</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>singleton</span> <span class="token number">3</span> <span class="token number">9</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">5</span> <span class="token number">9</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>singleton</span> <span class="token number">3</span> <span class="token number">9</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>lookup</p><p>\u5C31\u662Fget</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token constant">Prelude</span> <span class="token constant">Map</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">lookup</span> <span class="token number">4</span> <span class="token hvariable">a</span>
<span class="token constant">Just</span> <span class="token number">200</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>member</p><p>\u5C31\u662Fin</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>member</span> <span class="token number">3</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token constant">True</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>member</span> <span class="token number">3</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>map and filter</p><p>\u53EA\u4F5C\u7528\u4E8E v</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">900</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">filter</span> <span class="token builtin">isUpper</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token char string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token char string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token char string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token char string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token char string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token char string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>toList</p><p>\u5982\u5176\u540D</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>toList</span> <span class="token operator">.</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insert</span> <span class="token number">9</span> <span class="token number">2</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>singleton</span> <span class="token number">4</span> <span class="token number">3</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>keys and elems</p><p>\u8FD4\u56DE keys \u548C values</p></li><li><p>fromListWith</p><p>\u7C7B\u4F3C\u4E0EfromList\uFF0C \u4E0D\u8FC7\u6709\u4E00\u4E2A\u51FD\u6570\u51B3\u5B9A\u91CD\u590D\u7684key\u5E94\u8BE5\u600E\u4E48\u529E</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u6709\u91CD\u590D\u7684\u952E</span>
<span class="token hvariable">phoneBook</span> <span class="token operator">=</span>
    <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">&quot;betty&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;555-2938&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;betty&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;342-2492&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;bonnie&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;452-2928&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;patsy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;493-2928&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;patsy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;943-2929&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;patsy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;827-9162&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;lucille&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;205-2928&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;wendy&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;939-8282&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;penny&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;853-2492&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&quot;penny&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;555-2111&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span>
<span class="token comment">-- \u91CD\u590D\u7684\u952E\u7684\u503C\u4F1A\u88AB\u52A0\u4E00\u8D77</span>
<span class="token hvariable">phoneBookToMap</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token hvariable">k</span><span class="token punctuation">,</span> <span class="token constant">String</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Map<span class="token punctuation">.</span>Map</span> <span class="token hvariable">k</span> <span class="token constant">String</span>
<span class="token hvariable">phoneBookToMap</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromListWith</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">number1</span> <span class="token hvariable">number2</span> <span class="token operator">-&gt;</span> <span class="token hvariable">number1</span> <span class="token operator">++</span> <span class="token string">&quot;, &quot;</span> <span class="token operator">++</span> <span class="token hvariable">number2</span><span class="token punctuation">)</span> <span class="token hvariable">xs</span>

<span class="token comment">-- \u67E5\u770B</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">lookup</span> <span class="token string">&quot;patsy&quot;</span> <span class="token operator">$</span> <span class="token hvariable">phoneBookToMap</span> <span class="token hvariable">phoneBook</span>
<span class="token string">&quot;827-9162, 943-2929, 493-2928&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">lookup</span> <span class="token string">&quot;wendy&quot;</span> <span class="token operator">$</span> <span class="token hvariable">phoneBookToMap</span> <span class="token hvariable">phoneBook</span>
<span class="token string">&quot;939-8282&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">lookup</span> <span class="token string">&quot;betty&quot;</span> <span class="token operator">$</span> <span class="token hvariable">phoneBookToMap</span> <span class="token hvariable">phoneBook</span>
<span class="token string">&quot;342-2492, 555-2938&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u4E0B\u9762\u662F\u53E6\u5916\u4E24\u4E2A\u4F8B\u5B50</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromListWith</span> <span class="token builtin">max</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromListWith</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">37</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>insertWith</p><p>\u5DEE\u4E0D\u591A\uFF0C \u6761\u4EF6\u63D2\u5165</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Map<span class="token punctuation">.</span>insertWith</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token number">3</span> <span class="token number">100</span> <span class="token operator">$</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">339</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">fromList</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">104</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">103</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">339</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ol><h3 id="_6-5-data-set" tabindex="-1"><a class="header-anchor" href="#_6-5-data-set" aria-hidden="true">#</a> 6.5 Data.Set</h3><ol><li><p>fromList</p><p>\u53BB\u91CD</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">text1</span> <span class="token operator">=</span> <span class="token string">&quot;I just had an anime dream. Anime... Reality... Are they so different?&quot;</span>
<span class="token hvariable">text2</span> <span class="token operator">=</span> <span class="token string">&quot;The old man left his garbage can out and now his trash is all over my lawn!&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">set1</span> <span class="token operator">=</span> <span class="token hvariable">Set<span class="token punctuation">.</span>fromList</span> <span class="token hvariable">text1</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">set2</span> <span class="token operator">=</span> <span class="token hvariable">Set<span class="token punctuation">.</span>fromList</span> <span class="token hvariable">text2</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">set1</span>
<span class="token hvariable">fromList</span> <span class="token string">&quot; .?AIRadefhijlmnorstuy&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">set2</span>
<span class="token hvariable">fromList</span> <span class="token string">&quot; !Tabcdefghilmnorstuvwy&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li><li><p>intersection</p><p>\u6C42\u4EA4\u96C6</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Set<span class="token punctuation">.</span>intersection</span> <span class="token hvariable">set1</span> <span class="token hvariable">set2</span>
<span class="token hvariable">fromList</span> <span class="token string">&quot; adefhilmnorstuy&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>difference</p><p>\u6C42\u7B2C\u4E00\u4E2A\u96C6\u5408\u6709\u7B2C\u4E8C\u4E2A\u6CA1\u6709</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Set<span class="token punctuation">.</span>difference</span> <span class="token hvariable">set1</span> <span class="token hvariable">set2</span>
<span class="token hvariable">fromList</span> <span class="token string">&quot;.?AIRj&quot;</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Set<span class="token punctuation">.</span>difference</span> <span class="token hvariable">set2</span> <span class="token hvariable">set1</span>
<span class="token hvariable">fromList</span> <span class="token string">&quot;!Tbcgvw&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>union</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">Set<span class="token punctuation">.</span>union</span> <span class="token hvariable">set1</span> <span class="token hvariable">set2</span>
<span class="token hvariable">fromList</span> <span class="token string">&quot; !.?AIRTabcdefghijlmnorstuvwy&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>\u5176\u4ED6</p><p>null, size, member, empty, singleton, insert and delete \u5C31\u548C\u4F60\u60F3\u7684\u4E00\u6837</p></li></ol><h2 id="_7-\u81EA\u5B9A\u4E49\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_7-\u81EA\u5B9A\u4E49\u7C7B\u578B" aria-hidden="true">#</a> 7. \u81EA\u5B9A\u4E49\u7C7B\u578B</h2><p>\u4F7F\u7528 data \u5173\u952E\u5B57\u5B9A\u4E49</p><p>\u7B49\u53F7\u5DE6\u8FB9\u7684\u662F <strong>type name</strong>\uFF0C \u7B49\u597D\u53F3\u8FB9\u7684\u662F <strong>value constructors</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Bool</span> <span class="token operator">=</span> <span class="token constant">False</span> <span class="token operator">|</span> <span class="token constant">True</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Int \u7C7B\u578B\u53EF\u80FD\u6709\u4E0B\u9762\u7684\u5B9A\u4E49</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u771F\u5B9E\u4E0D\u662F\u8FD9\u6837\u7684\uFF0C\u53EA\u662F\u4E3A\u4E86\u8BF4\u660E\u95EE\u9898</span>
<span class="token keyword">data</span> <span class="token constant">Int</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2147483648</span> <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">2147483647</span> <span class="token operator">|</span> <span class="token operator">...</span> <span class="token operator">|</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">|</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token operator">...</span> <span class="token operator">|</span> <span class="token number">2147483647</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_7-1-\u57FA\u672C\u7C7B\u578B\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_7-1-\u57FA\u672C\u7C7B\u578B\u5B9A\u4E49" aria-hidden="true">#</a> 7.1 \u57FA\u672C\u7C7B\u578B\u5B9A\u4E49</h3><p>\u4E0B\u9762\u8BA9\u6211\u4EEC\u8FDB\u884C\u4E00\u4E2A\u5F62\u72B6\u7684\u5B9A\u4E49</p><p>\u4E00\u4E2A\u5706\u7684\u5B9A\u4E49\u53EF\u80FD\u9700\u8981\u4E09\u4E2A\u53C2\u6570\uFF0C \u524D\u4E24\u4E2A\u662F\u5706\u7684\u5750\u6807\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u662F\u534A\u5F84\uFF0C \u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u60F3 <code>(43.1, 55.0, 10.4)</code>\u8FD9\u6837\u5B9A\u4E49\u4E00\u4E2A\u5706\uFF0C \u4F46\u662F\u8FD9\u4E09\u4E2A\u53C2\u6570\u4E5F\u80FD\u8868\u793A\u4E00\u4E2A 3D vector\u6216\u8005\u662F\u522B\u7684\u4EC0\u4E48\u4E1C\u897F\uFF0C \u6240\u4EE5\u6211\u4EEC\u6700\u597D\u5B9A\u4E49\u4E00\u4E2A\u53EB\u505A Shape \u7684\u65B0\u7C7B\u578B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Shape</span> <span class="token operator">=</span> <span class="token constant">Circle</span> <span class="token constant">Float</span> <span class="token constant">Float</span> <span class="token constant">Float</span> <span class="token operator">|</span> <span class="token constant">Rectangle</span> <span class="token constant">Float</span> <span class="token constant">Float</span> <span class="token constant">Float</span> <span class="token constant">Float</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token constant">Circle</span>
<span class="token constant">Circle</span> <span class="token operator">::</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Shape</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token constant">Rectangle</span>
<span class="token constant">Rectangle</span> <span class="token operator">::</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Shape</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>new \u4E00\u4E2A\u5B9E\u4F8B</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Circle</span> <span class="token number">10</span> <span class="token number">20</span> <span class="token number">5</span>
<span class="token constant">Circle</span> <span class="token number">10.0</span> <span class="token number">20.0</span> <span class="token number">5.0</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Rectangle</span> <span class="token number">50</span> <span class="token number">230</span> <span class="token number">60</span> <span class="token number">90</span>
<span class="token constant">Rectangle</span> <span class="token number">50.0</span> <span class="token number">230.0</span> <span class="token number">60.0</span> <span class="token number">90.0</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>type name \u548C value constructor \u9996\u5B57\u6BCD\u9700\u8981\u5927\u5199</p><p>\u4E0B\u9762\u5B9A\u4E49\u4E86\u4E00\u4E2A\u5B8C\u6574\u7684Shape\u6A21\u5757</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- Shape(..) \u4F1A\u5C06\u6240\u6709\u7684\u6784\u9020\u5668\u66B4\u9732\u7ED9\u5916\u90E8</span>
<span class="token comment">-- \u7B49\u540C\u4E8E Shape (Rectangle, Circle)</span>
<span class="token keyword">module</span> <span class="token constant">Shapes</span>
<span class="token punctuation">(</span> <span class="token constant">Point</span><span class="token punctuation">(</span><span class="token operator">..</span><span class="token punctuation">)</span>
<span class="token punctuation">,</span> <span class="token constant">Shape</span><span class="token punctuation">(</span><span class="token operator">..</span><span class="token punctuation">)</span>
<span class="token punctuation">,</span> <span class="token hvariable">surface</span>
<span class="token punctuation">,</span> <span class="token hvariable">nudge</span>
<span class="token punctuation">,</span> <span class="token hvariable">baseCircle</span>
<span class="token punctuation">,</span> <span class="token hvariable">baseRect</span>
<span class="token punctuation">)</span> <span class="token keyword">where</span>

<span class="token comment">-- deriving (Show) \u81EA\u52A8\u5B9E\u73B0Show</span>
<span class="token keyword">data</span> <span class="token constant">Point</span> <span class="token operator">=</span> <span class="token constant">Point</span> <span class="token constant">Float</span> <span class="token constant">Float</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
<span class="token keyword">data</span> <span class="token constant">Shape</span> <span class="token operator">=</span> <span class="token constant">Circle</span> <span class="token constant">Point</span> <span class="token constant">Float</span> <span class="token operator">|</span> <span class="token constant">Rectangle</span> <span class="token constant">Point</span> <span class="token constant">Point</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
<span class="token hvariable">surface</span> <span class="token operator">::</span> <span class="token constant">Shape</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span>
<span class="token hvariable">surface</span> <span class="token punctuation">(</span><span class="token constant">Circle</span> <span class="token hvariable">_</span> <span class="token hvariable">r</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token builtin">pi</span> <span class="token operator">*</span> <span class="token hvariable">r</span> <span class="token operator">^</span> <span class="token number">2</span>
<span class="token hvariable">surface</span> <span class="token punctuation">(</span><span class="token constant">Rectangle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token hvariable">x1</span> <span class="token hvariable">y1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token hvariable">x2</span> <span class="token hvariable">y2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">abs</span> <span class="token operator">$</span> <span class="token hvariable">x2</span> <span class="token operator">-</span> <span class="token hvariable">x1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">abs</span> <span class="token operator">$</span> <span class="token hvariable">y2</span> <span class="token operator">-</span> <span class="token hvariable">y1</span><span class="token punctuation">)</span>

<span class="token hvariable">nudge</span> <span class="token operator">::</span> <span class="token constant">Shape</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Shape</span>
<span class="token hvariable">nudge</span> <span class="token punctuation">(</span><span class="token constant">Circle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token hvariable">x</span> <span class="token hvariable">y</span><span class="token punctuation">)</span> <span class="token hvariable">r</span><span class="token punctuation">)</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token constant">Circle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">+</span><span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token hvariable">y</span><span class="token operator">+</span><span class="token hvariable">b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token hvariable">r</span>
<span class="token hvariable">nudge</span> <span class="token punctuation">(</span><span class="token constant">Rectangle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token hvariable">x1</span> <span class="token hvariable">y1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token hvariable">x2</span> <span class="token hvariable">y2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token constant">Rectangle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token punctuation">(</span><span class="token hvariable">x1</span><span class="token operator">+</span><span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token hvariable">y1</span><span class="token operator">+</span><span class="token hvariable">b</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token punctuation">(</span><span class="token hvariable">x2</span><span class="token operator">+</span><span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token hvariable">y2</span><span class="token operator">+</span><span class="token hvariable">b</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token hvariable">baseCircle</span> <span class="token operator">::</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Shape</span>
<span class="token hvariable">baseCircle</span> <span class="token hvariable">r</span> <span class="token operator">=</span> <span class="token constant">Circle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token hvariable">r</span>

<span class="token hvariable">baseRect</span> <span class="token operator">::</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span> <span class="token operator">-&gt;</span> <span class="token constant">Shape</span>
<span class="token hvariable">baseRect</span> <span class="token hvariable">width</span> <span class="token hvariable">height</span> <span class="token operator">=</span> <span class="token constant">Rectangle</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Point</span> <span class="token hvariable">width</span> <span class="token hvariable">height</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4E0D\u66B4\u9732Shape\uFF0C\u8BA9\u7528\u6237\u53EA\u80FD\u901A\u8FC7 baseCircle\uFF0C baseRect \u6784\u9020\uFF0C\u8BA9\u6211\u4EEC\u7684\u63A5\u53E3\u66F4\u52A0\u62BD\u8C61</p><h3 id="_7-2-record-syntax-\u5B9A\u4E49\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_7-2-record-syntax-\u5B9A\u4E49\u7C7B\u578B" aria-hidden="true">#</a> 7.2 record syntax \u5B9A\u4E49\u7C7B\u578B</h3><p>\u7B2C\u4E00\u79CD\u65B9\u5F0F</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Person</span> <span class="token operator">=</span> <span class="token constant">Person</span> <span class="token constant">String</span> <span class="token constant">String</span> <span class="token constant">Int</span> <span class="token constant">Float</span> <span class="token constant">String</span> <span class="token constant">String</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
<span class="token hvariable">firstName</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">firstName</span> <span class="token punctuation">(</span><span class="token constant">Person</span> <span class="token hvariable">firstname</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">firstname</span>

<span class="token hvariable">lastName</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">lastName</span> <span class="token punctuation">(</span><span class="token constant">Person</span> <span class="token hvariable">_</span> <span class="token hvariable">lastname</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">lastname</span>

<span class="token hvariable">age</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">Int</span>
<span class="token hvariable">age</span> <span class="token punctuation">(</span><span class="token constant">Person</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">age</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">age</span>

<span class="token hvariable">height</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">Float</span>
<span class="token hvariable">height</span> <span class="token punctuation">(</span><span class="token constant">Person</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">height</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">height</span>

<span class="token hvariable">phoneNumber</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">phoneNumber</span> <span class="token punctuation">(</span><span class="token constant">Person</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">number</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">number</span>

<span class="token hvariable">flavor</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">flavor</span> <span class="token punctuation">(</span><span class="token constant">Person</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">_</span> <span class="token hvariable">flavor</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token hvariable">flavor</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u4F7F\u7528 record syntax \u5B9A\u4E49Person</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Person</span> <span class="token operator">=</span> <span class="token constant">Person</span> <span class="token punctuation">{</span> <span class="token hvariable">firstName</span> <span class="token operator">::</span> <span class="token constant">String</span>
                     <span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">::</span> <span class="token constant">String</span>
                     <span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">::</span> <span class="token constant">Int</span>
                     <span class="token punctuation">,</span> <span class="token hvariable">height</span> <span class="token operator">::</span> <span class="token constant">Float</span>
                     <span class="token punctuation">,</span> <span class="token hvariable">phoneNumber</span> <span class="token operator">::</span> <span class="token constant">String</span>
                     <span class="token punctuation">,</span> <span class="token hvariable">flavor</span> <span class="token operator">::</span> <span class="token constant">String</span>
                     <span class="token punctuation">}</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>haskell\u4F1A\u81EA\u52A8\u751F\u6210\u4E0A\u9762\u7684\u51FD\u6570</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token hvariable">flavor</span>
<span class="token hvariable">flavor</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token hvariable">firstName</span>
<span class="token hvariable">firstName</span> <span class="token operator">::</span> <span class="token constant">Person</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>new \u4E00\u4E2A\u5B9E\u4F8B</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Car</span> <span class="token punctuation">{</span><span class="token hvariable">company</span><span class="token operator">=</span><span class="token string">&quot;Ford&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">model</span><span class="token operator">=</span><span class="token string">&quot;Mustang&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">year</span><span class="token operator">=</span><span class="token number">1967</span><span class="token punctuation">}</span>
<span class="token constant">Car</span> <span class="token punctuation">{</span><span class="token hvariable">company</span> <span class="token operator">=</span> <span class="token string">&quot;Ford&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">model</span> <span class="token operator">=</span> <span class="token string">&quot;Mustang&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">year</span> <span class="token operator">=</span> <span class="token number">1967</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_7-3-\u7C7B\u578B\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_7-3-\u7C7B\u578B\u53C2\u6570" aria-hidden="true">#</a> 7.3 \u7C7B\u578B\u53C2\u6570</h3><h4 id="_7-3-1-maybe" tabindex="-1"><a class="header-anchor" href="#_7-3-1-maybe" aria-hidden="true">#</a> 7.3.1 Maybe</h4><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Maybe</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Nothing</span> <span class="token operator">|</span> <span class="token constant">Just</span> <span class="token hvariable">a</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>\u7C7B\u578B\u6784\u9020\u5668</strong></p><p>a \u662F\u4E00\u4E2A\u7C7B\u578B\u53C2\u6570\uFF0C \u56E0\u4E3A\u8FD9\u4E2A\u7C7B\u578B a\uFF0C \u6240\u4EE5\u6211\u4EEC\u79F0 Maybe\u662F\u4E00\u4E2A type constructor\uFF08\u7C7B\u578B\u6784\u9020\u5668\uFF09\uFF08\u6CE8\u610F\uFF1A\u548C\u4E4B\u524D\u7684 value constructor \u4E0D\u4E00\u6837\uFF09\uFF0C \u6240\u4EE5 Maybe \u4E0D\u662F\u4E00\u4E2A\u7C7B\u578B</p><p>\u6211\u4EEC\u80FD\u591F\u4F20\u5165 Char \u6216\u8005 Int\uFF0C \u5C31\u80FD\u7684\u5230\u4E00\u4E2A Maybe Char \u6216\u8005 Maybe Int \u7C7B\u578B</p><h4 id="_7-3-2-car" tabindex="-1"><a class="header-anchor" href="#_7-3-2-car" aria-hidden="true">#</a> 7.3.2 Car</h4><p>\u4E0B\u9762\u4E3E\u4E86\u4E00\u4E2A Car \u7684\u4F8B\u5B50\uFF0C\u4ED6\u5C31\u53EF\u80FD\u662F (Car String String Int) \u7C7B\u578B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token keyword">data</span> <span class="token constant">Car</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token hvariable">c</span> <span class="token operator">=</span> <span class="token constant">Car</span> <span class="token punctuation">{</span> <span class="token hvariable">company</span> <span class="token operator">::</span> <span class="token hvariable">a</span>
                         <span class="token punctuation">,</span> <span class="token hvariable">model</span> <span class="token operator">::</span> <span class="token hvariable">b</span>
                         <span class="token punctuation">,</span> <span class="token hvariable">year</span> <span class="token operator">::</span> <span class="token hvariable">c</span>
                         <span class="token punctuation">}</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4F46\u662F\u7528\u8FD9\u79CD\u5F62\u5F0F\u58F0\u660E\u5E76\u6CA1\u6709\u592A\u591A\u597D\u5904\uFF0C\u5927\u90E8\u5206\u60C5\u51B5\u4E0B\u6211\u4EEC\u53EA\u9700\u8981\u4E00\u79CD\u72B6\u6001 <code>Car String String Int</code> \u5C31\u591F\u4E86</p><p>\u6240\u4EE5\u6211\u4EEC\u4F1A\u7528\u4E0B\u9762\u7684\u65B9\u5F0F</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Car</span> <span class="token operator">=</span> <span class="token constant">Car</span> <span class="token punctuation">{</span> <span class="token hvariable">company</span> <span class="token operator">::</span> <span class="token constant">String</span>
               <span class="token punctuation">,</span> <span class="token hvariable">model</span> <span class="token operator">::</span> <span class="token constant">String</span>
               <span class="token punctuation">,</span> <span class="token hvariable">year</span> <span class="token operator">::</span> <span class="token constant">Int</span>
               <span class="token punctuation">}</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
<span class="token hvariable">tellCar</span> <span class="token operator">::</span> <span class="token constant">Car</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">tellCar</span> <span class="token punctuation">(</span><span class="token constant">Car</span> <span class="token punctuation">{</span><span class="token hvariable">company</span> <span class="token operator">=</span> <span class="token hvariable">c</span><span class="token punctuation">,</span> <span class="token hvariable">model</span> <span class="token operator">=</span> <span class="token hvariable">m</span><span class="token punctuation">,</span> <span class="token hvariable">year</span> <span class="token operator">=</span> <span class="token hvariable">y</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&quot;This &quot;</span> <span class="token operator">++</span> <span class="token hvariable">c</span> <span class="token operator">++</span> <span class="token string">&quot; &quot;</span> <span class="token operator">++</span> <span class="token hvariable">m</span> <span class="token operator">++</span> <span class="token string">&quot; was made in &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">y</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u6211\u4EEC\u4E4B\u524D\u4E5F\u89C1\u8FC7\u4E00\u4E2A\u4F7F\u7528\u7C7B\u578B\u53C2\u6570\u7684\u4F8B\u5B50\uFF0C\u5C31\u662F Map\uFF0C k\uFF0C v \u5206\u522B\u662Fkey\u548Cvalue\u7684\u7C7B\u578B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">Map</span> <span class="token hvariable">k</span> <span class="token hvariable">v</span> <span class="token operator">=</span> <span class="token operator">...</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_7-3-3-vector" tabindex="-1"><a class="header-anchor" href="#_7-3-3-vector" aria-hidden="true">#</a> 7.3.3 Vector</h4><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Vector2</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Vector2</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>
<span class="token hvariable">vplus</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Char</span> <span class="token hvariable">t</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">Vector2</span> <span class="token hvariable">t</span> <span class="token operator">-&gt;</span> <span class="token constant">Vector2</span> <span class="token hvariable">t</span> <span class="token operator">-&gt;</span> <span class="token constant">Vector2</span> <span class="token hvariable">t</span>
<span class="token punctuation">(</span><span class="token constant">Vector2</span> <span class="token hvariable">a1</span> <span class="token hvariable">a2</span> <span class="token hvariable">a3</span><span class="token punctuation">)</span> <span class="token operator">\`vplus\`</span> <span class="token punctuation">(</span><span class="token constant">Vector2</span> <span class="token hvariable">b1</span> <span class="token hvariable">b2</span> <span class="token hvariable">b3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">Vector2</span> <span class="token hvariable">a1</span><span class="token operator">++</span><span class="token hvariable">b1</span> <span class="token hvariable">a2</span><span class="token operator">++</span><span class="token hvariable">b2</span> <span class="token hvariable">a3</span><span class="token operator">++</span><span class="token hvariable">b3</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_7-4-\u6D3E\u751F\u5B9E\u4F8B" tabindex="-1"><a class="header-anchor" href="#_7-4-\u6D3E\u751F\u5B9E\u4F8B" aria-hidden="true">#</a> 7.4 \u6D3E\u751F\u5B9E\u4F8B</h3><p><strong>Derived instances</strong></p><h4 id="_7-4-1-derive" tabindex="-1"><a class="header-anchor" href="#_7-4-1-derive" aria-hidden="true">#</a> 7.4.1 derive</h4><p>Typeclasses \u66F4\u50CF\u662F\u63A5\u53E3\uFF0C \u6211\u4EEC\u4F7F\u7528 <code>derive</code> \u5173\u952E\u5B57\u53EF\u4EE5\u81EA\u52A8\u6D3E\u751F\u51FA\u884C\u4E3A</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>    <span class="token keyword">data</span> <span class="token constant">Person</span> <span class="token operator">=</span> <span class="token constant">Person</span> <span class="token punctuation">{</span> <span class="token hvariable">firstName</span> <span class="token operator">::</span> <span class="token constant">String</span>
                         <span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">::</span> <span class="token constant">String</span>
                         <span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">::</span> <span class="token constant">Int</span>
                         <span class="token punctuation">}</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Eq</span><span class="token punctuation">,</span> <span class="token constant">Show</span><span class="token punctuation">,</span> <span class="token constant">Read</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8BE5\u7C7B\u578B\u6D3E\u751F\u81EAEq\uFF0C\u6240\u4EE5\u5B9E\u73B0\u4E86 <code>==</code> \u548C <code>/=</code>, \u8FD8\u80FD\u591F\u5E94\u7528\u5728\u4EFB\u4F55\u5728\u7C7B\u578B\u7B7E\u540D\u4E0A\u5177\u6709 <code>Eq a</code> \u7684\u51FD\u6570</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">mikeD</span> <span class="token operator">=</span> <span class="token constant">Person</span> <span class="token punctuation">{</span><span class="token hvariable">firstName</span> <span class="token operator">=</span> <span class="token string">&quot;Michael&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">=</span> <span class="token string">&quot;Diamond&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">=</span> <span class="token number">43</span><span class="token punctuation">}</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">adRock</span> <span class="token operator">=</span> <span class="token constant">Person</span> <span class="token punctuation">{</span><span class="token hvariable">firstName</span> <span class="token operator">=</span> <span class="token string">&quot;Adam&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">=</span> <span class="token string">&quot;Horovitz&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">=</span> <span class="token number">41</span><span class="token punctuation">}</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token keyword">let</span> <span class="token hvariable">mca</span> <span class="token operator">=</span> <span class="token constant">Person</span> <span class="token punctuation">{</span><span class="token hvariable">firstName</span> <span class="token operator">=</span> <span class="token string">&quot;Adam&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">=</span> <span class="token string">&quot;Yauch&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">=</span> <span class="token number">44</span><span class="token punctuation">}</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">mca</span> <span class="token operator">==</span> <span class="token hvariable">adRock</span>
<span class="token constant">False</span>
<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token hvariable">mikeD</span> <span class="token operator">==</span> <span class="token constant">Person</span> <span class="token punctuation">{</span><span class="token hvariable">firstName</span> <span class="token operator">=</span> <span class="token string">&quot;Michael&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">=</span> <span class="token string">&quot;Diamond&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">=</span> <span class="token number">43</span><span class="token punctuation">}</span>
<span class="token constant">True</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Read \u548C Show\u80FD\u5B9E\u73B0\u7C7B\u578B\u548C\u5B57\u7B26\u4E32\u95F4\u7684\u76F8\u4E92\u8F6C\u5316\uFF0C \u5F53\u6211\u4EEC\u4F7F\u7528 Read \u65F6\uFF0C\u9700\u8981\u6307\u5B9A\u7ED3\u679C\u7684\u7C7B\u578B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token builtin">read</span> <span class="token string">&quot;Person {firstName =\\&quot;Michael\\&quot;, lastName =\\&quot;Diamond\\&quot;, age = 43}&quot;</span> <span class="token operator">::</span> <span class="token constant">Person</span>
<span class="token constant">Person</span> <span class="token punctuation">{</span><span class="token hvariable">firstName</span> <span class="token operator">=</span> <span class="token string">&quot;Michael&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">lastName</span> <span class="token operator">=</span> <span class="token string">&quot;Diamond&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">age</span> <span class="token operator">=</span> <span class="token number">43</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5076\u4EEC\u4E5F\u80FD\u591F\u8BFB\u53D6\u53C2\u6570\u5316\u7C7B\u578B\uFF08parameterized types\uFF09\uFF0C\u4F46\u662F\u5FC5\u987B\u586B\u4E0A\u7C7B\u578B</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- So we can&#39;t do</span>
<span class="token builtin">read</span> <span class="token string">&quot;Just &#39;t&#39;&quot;</span> <span class="token operator">::</span> <span class="token constant">Maybe</span> <span class="token hvariable">a</span>
<span class="token comment">-- but we can do</span>
<span class="token builtin">read</span> <span class="token string">&quot;Just &#39;t&#39;&quot;</span> <span class="token operator">::</span> <span class="token constant">Maybe</span> <span class="token constant">Char</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_7-4-2-\u5B9E\u73B0\u4E00\u4E9Btypeclasses" tabindex="-1"><a class="header-anchor" href="#_7-4-2-\u5B9E\u73B0\u4E00\u4E9Btypeclasses" aria-hidden="true">#</a> 7.4.2 \u5B9E\u73B0\u4E00\u4E9BTypeclasses</h4><ol><li><p>Ord \u7684\u6BD4\u8F83\u89C4\u5219\uFF0C\u5728\u524D\u9762\u7684\u6BD4\u8F83\u5C0F\uFF0C\u4E0EChar\u6BD4\u8F83\u65E0\u5173</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">Day</span> <span class="token operator">=</span> <span class="token constant">Monday</span> <span class="token operator">|</span> <span class="token constant">Tuesday</span> <span class="token operator">|</span> <span class="token constant">Wednesday</span> <span class="token operator">|</span> <span class="token constant">Thursday</span> <span class="token operator">|</span> <span class="token constant">Friday</span> <span class="token operator">|</span> <span class="token constant">Saturday</span> <span class="token operator">|</span> <span class="token constant">Sunday</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Eq</span><span class="token punctuation">,</span> <span class="token constant">Ord</span><span class="token punctuation">,</span> <span class="token constant">Show</span><span class="token punctuation">,</span> <span class="token constant">Read</span><span class="token punctuation">,</span> <span class="token constant">Bounded</span><span class="token punctuation">,</span> <span class="token constant">Enum</span><span class="token punctuation">)</span>

<span class="token hvariable">ghci</span><span class="token operator">&gt;</span> <span class="token constant">Saturday</span> <span class="token operator">&gt;</span> <span class="token constant">Friday</span>
<span class="token constant">True</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ol><h4 id="_7-4-3-\u7C7B\u578B\u540C\u4E49\u8BCD" tabindex="-1"><a class="header-anchor" href="#_7-4-3-\u7C7B\u578B\u540C\u4E49\u8BCD" aria-hidden="true">#</a> 7.4.3 \u7C7B\u578B\u540C\u4E49\u8BCD</h4><p><strong>Type synonyms</strong></p><p>\u5C31\u662F\u6362\u4E2A\u540D\u800C\u5DF2</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u4E0B\u9762\u662FString\u7684\u5B9A\u4E49</span>
<span class="token keyword">type</span> <span class="token constant">String</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">Char</span><span class="token punctuation">]</span>

<span class="token keyword">type</span> <span class="token constant">IntMap</span> <span class="token hvariable">v</span> <span class="token operator">=</span> <span class="token constant">Map</span> <span class="token constant">Int</span> <span class="token hvariable">v</span>
<span class="token keyword">type</span> <span class="token constant">IntMap</span> <span class="token operator">=</span> <span class="token constant">Map</span> <span class="token constant">Int</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u9700\u8981\u5206\u6E05\u7C7B\u578B\u6784\u9020\u5668\u548C\u503C\u6784\u9020\u5668\uFF08 type constructors and value constructors\uFF09\u7684\u533A\u522B</p><h4 id="_7-4-4-either" tabindex="-1"><a class="header-anchor" href="#_7-4-4-either" aria-hidden="true">#</a> 7.4.4 Either</h4><p>\u4E0B\u9762\u6211\u4EEC\u5728\u4ECB\u7ECD\u4E00\u79CD\u7C7B\u578B Either</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u5B9A\u4E49</span>
<span class="token keyword">data</span> <span class="token constant">Either</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token constant">Left</span> <span class="token hvariable">a</span> <span class="token operator">|</span> <span class="token constant">Right</span> <span class="token hvariable">b</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Eq</span><span class="token punctuation">,</span> <span class="token constant">Ord</span><span class="token punctuation">,</span> <span class="token constant">Read</span><span class="token punctuation">,</span> <span class="token constant">Show</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>So far, we&#39;ve seen that Maybe a was mostly used to represent the results of computations that could have either failed or not. But somtimes, Maybe a isn&#39;t good enough because Nothing doesn&#39;t really convey much information other than that something has failed. That&#39;s cool for functions that can fail in only one way or if we&#39;re just not interested in how and why they failed. A Data.Map lookup fails only if the key we were looking for wasn&#39;t in the map, so we know exactly what happened. However, when we&#39;re interested in how some function failed or why, we usually use the result type of Either a b, where a is some sort of type that can tell us something about the possible failure and b is the type of a successful computation. Hence, errors use the Left value constructor while results use Right.</p></blockquote><p>Maybe \u4E0D\u80FD\u6EE1\u8DB3\u6240\u6709\u7684\u9700\u8981\uFF0C Either \u901A\u5E38\u7528\u4E8E\u9519\u8BEF\u5904\u7406\uFF0C \u5DE6\u503C\u4E00\u822C\u8868\u793A\u9519\u8BEF\u539F\u56E0\uFF0C \u53F3\u503C\u4E00\u822C\u662F\u6B63\u786E\u7684\u7ED3\u679C</p><p>\u4E0B\u9762\u7ED9\u9664\u4E86\u4E00\u4E2A\u4F8B\u5B50</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> <span class="token keyword">qualified</span> Data<span class="token punctuation">.</span>Map <span class="token keyword">as</span> Map</span>

<span class="token comment">-- declear LockerMap</span>
<span class="token keyword">data</span> <span class="token constant">LockerState</span> <span class="token operator">=</span> <span class="token constant">Taken</span> <span class="token operator">|</span> <span class="token constant">Free</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">,</span> <span class="token constant">Eq</span><span class="token punctuation">)</span>
<span class="token keyword">type</span> <span class="token constant">Code</span> <span class="token operator">=</span> <span class="token constant">String</span>
<span class="token keyword">type</span> <span class="token constant">LockerMap</span> <span class="token operator">=</span> <span class="token constant">Map<span class="token punctuation">.</span>Map</span> <span class="token constant">Int</span> <span class="token punctuation">(</span><span class="token constant">LockerState</span><span class="token punctuation">,</span> <span class="token constant">Code</span><span class="token punctuation">)</span>

<span class="token comment">-- give a LoockerLookUp function</span>
<span class="token hvariable">lockerLookUp</span> <span class="token operator">::</span> <span class="token constant">Int</span> <span class="token operator">-&gt;</span> <span class="token constant">LockerMap</span> <span class="token operator">-&gt;</span> <span class="token constant">Either</span> <span class="token constant">String</span> <span class="token constant">Code</span>
<span class="token hvariable">lockerLookUp</span> <span class="token hvariable">lockerNum</span> <span class="token builtin">map</span> <span class="token operator">=</span> <span class="token keyword">case</span> <span class="token constant">Map</span><span class="token punctuation">.</span><span class="token builtin">lookup</span> <span class="token hvariable">lockerNum</span> <span class="token builtin">map</span> <span class="token keyword">of</span>
        <span class="token constant">Nothing</span>  <span class="token operator">-&gt;</span> <span class="token constant">Left</span> <span class="token operator">$</span> <span class="token string">&quot;Locker Number&quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">lockerNum</span> <span class="token operator">++</span> <span class="token string">&quot;doesn&#39;t exist&quot;</span>
        <span class="token constant">Just</span> <span class="token punctuation">(</span><span class="token hvariable">lockerState</span><span class="token punctuation">,</span> <span class="token hvariable">code</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">if</span> <span class="token hvariable">lockerState</span> <span class="token operator">==</span> <span class="token constant">Taken</span>
                                 <span class="token keyword">then</span> <span class="token constant">Left</span> <span class="token operator">$</span> <span class="token string">&quot;Locker Number&quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">lockerNum</span> <span class="token operator">++</span> <span class="token string">&quot;is already taken!&quot;</span>
                                 <span class="token keyword">else</span> <span class="token constant">Right</span> <span class="token hvariable">code</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token keyword">let</span> <span class="token hvariable">lockers</span> <span class="token operator">=</span> <span class="token hvariable">Map<span class="token punctuation">.</span>fromList</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token constant">Taken</span><span class="token punctuation">,</span> <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token constant">Free</span><span class="token punctuation">,</span> <span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token constant">Taken</span><span class="token punctuation">,</span> <span class="token string">&quot;ccc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">lockerLookUp</span> <span class="token number">1</span> <span class="token hvariable">lockers</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">lockerLookUp</span> <span class="token number">2</span> <span class="token hvariable">lockers</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">lockerLookUp</span> <span class="token number">3</span> <span class="token hvariable">lockers</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">lockerLookUp</span> <span class="token number">4</span> <span class="token hvariable">lockers</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_7-4-5-\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#_7-4-5-\u9012\u5F52" aria-hidden="true">#</a> 7.4.5 \u9012\u5F52</h4><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u5B9E\u73B0\u4E86\u4E00\u4E2AList \u548C\u4E00\u4E2A Tree</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">infixr</span> <span class="token number">5</span> <span class="token operator">:-:</span>
<span class="token keyword">data</span> <span class="token constant">List</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Empty</span> <span class="token operator">|</span> <span class="token hvariable">a</span> <span class="token operator">:-:</span> <span class="token punctuation">(</span><span class="token constant">List</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">,</span> <span class="token constant">Read</span><span class="token punctuation">,</span> <span class="token constant">Ord</span><span class="token punctuation">,</span> <span class="token constant">Eq</span><span class="token punctuation">)</span>
<span class="token comment">-- \u6216\u8005\u662Frecord syntex</span>
<span class="token comment">-- data Lsit = Empty | Cons {listHead :: a, listTail :: List a} deriving (Show, Read, Eq, Ord)</span>

<span class="token comment">-- infixr 5 ++</span>
<span class="token comment">-- (++) :: [a] -&gt; [a] -&gt; [a]</span>
<span class="token comment">-- [] ++ ys = ys</span>
<span class="token comment">-- (x:xs) ++ ys = x:(xs ++ ys)</span>
<span class="token keyword">infixr</span> <span class="token number">5</span> <span class="token operator">.++</span>
<span class="token punctuation">(</span><span class="token operator">.++</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token constant">List</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">List</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">List</span> <span class="token hvariable">a</span>
<span class="token constant">Empty</span> <span class="token operator">.++</span> <span class="token hvariable">ys</span> <span class="token operator">=</span> <span class="token hvariable">ys</span>
<span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">:-:</span> <span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token operator">.++</span> <span class="token hvariable">ys</span> <span class="token operator">=</span> <span class="token hvariable">x</span> <span class="token operator">:-:</span> <span class="token punctuation">(</span><span class="token hvariable">xs</span> <span class="token operator">.++</span> <span class="token hvariable">ys</span><span class="token punctuation">)</span>

<span class="token keyword">data</span> <span class="token constant">Tree</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">EmptyTree</span> <span class="token operator">|</span> <span class="token constant">Node</span> <span class="token hvariable">a</span> <span class="token punctuation">(</span><span class="token constant">Tree</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Tree</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">,</span> <span class="token constant">Read</span><span class="token punctuation">,</span> <span class="token constant">Eq</span><span class="token punctuation">,</span> <span class="token constant">Ord</span><span class="token punctuation">)</span>

<span class="token hvariable">singleton</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Tree</span> <span class="token hvariable">a</span>
<span class="token hvariable">singleton</span> <span class="token hvariable">x</span> <span class="token operator">=</span> <span class="token constant">Node</span> <span class="token hvariable">x</span> <span class="token constant">EmptyTree</span> <span class="token constant">EmptyTree</span>

<span class="token hvariable">treeInsert</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Tree</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Tree</span> <span class="token hvariable">a</span>
<span class="token hvariable">treeInsert</span> <span class="token hvariable">x</span> <span class="token constant">EmptyTree</span> <span class="token operator">=</span> <span class="token hvariable">singleton</span> <span class="token hvariable">x</span>
<span class="token hvariable">treeInsert</span> <span class="token hvariable">x</span> <span class="token punctuation">(</span><span class="token constant">Node</span> <span class="token hvariable">a</span> <span class="token hvariable">left</span> <span class="token hvariable">right</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Node</span> <span class="token hvariable">x</span> <span class="token hvariable">left</span> <span class="token hvariable">right</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span>  <span class="token operator">&lt;</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Node</span> <span class="token hvariable">a</span> <span class="token punctuation">(</span><span class="token hvariable">treeInsert</span> <span class="token hvariable">x</span> <span class="token hvariable">left</span><span class="token punctuation">)</span> <span class="token hvariable">right</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span>  <span class="token operator">&gt;</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Node</span> <span class="token hvariable">a</span> <span class="token hvariable">left</span> <span class="token punctuation">(</span><span class="token hvariable">treeInsert</span> <span class="token hvariable">x</span> <span class="token hvariable">right</span><span class="token punctuation">)</span>

<span class="token hvariable">treeElem</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Ord</span><span class="token punctuation">)</span> <span class="token hvariable">a</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Tree</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>
<span class="token hvariable">treeElem</span> <span class="token hvariable">x</span> <span class="token constant">EmptyTree</span> <span class="token operator">=</span> <span class="token constant">False</span>
<span class="token hvariable">treeElem</span> <span class="token hvariable">x</span> <span class="token punctuation">(</span><span class="token constant">Node</span> <span class="token hvariable">a</span> <span class="token hvariable">left</span> <span class="token hvariable">right</span><span class="token punctuation">)</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span> <span class="token operator">&lt;</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token hvariable">treeElem</span> <span class="token hvariable">x</span> <span class="token hvariable">left</span>
    <span class="token operator">|</span> <span class="token hvariable">x</span> <span class="token operator">&gt;</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token hvariable">treeElem</span> <span class="token hvariable">x</span> <span class="token hvariable">right</span>


<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;start...&quot;</span>
    <span class="token keyword">let</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">:-:</span> <span class="token number">4</span> <span class="token operator">:-:</span> <span class="token number">5</span> <span class="token operator">:-:</span> <span class="token constant">Empty</span>
    <span class="token builtin">print</span> <span class="token hvariable">a</span>
    <span class="token keyword">let</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">:-:</span> <span class="token number">7</span> <span class="token operator">:-:</span> <span class="token constant">Empty</span>
    <span class="token builtin">print</span><span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">.++</span> <span class="token hvariable">b</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> <span class="token hvariable">nums</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> <span class="token hvariable">numsTree</span> <span class="token operator">=</span> <span class="token builtin">foldr</span> <span class="token hvariable">treeInsert</span> <span class="token constant">EmptyTree</span> <span class="token hvariable">nums</span>
    <span class="token builtin">print</span> <span class="token hvariable">numsTree</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">treeElem</span> <span class="token number">4</span> <span class="token hvariable">numsTree</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;end...&quot;</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h4 id="_7-4-6-typeclasses-102" tabindex="-1"><a class="header-anchor" href="#_7-4-6-typeclasses-102" aria-hidden="true">#</a> 7.4.6 Typeclasses 102</h4><blockquote><p>A quick recap on typeclasses: typeclasses are like interfaces. A typeclass defines some behavior (like comparing for equality, comparing for ordering, enumeration) and then types that can behave in that way are made instances of that typeclass. The behavior of typeclasses is achieved by defining functions or just type declarations that we then implement. So when we say that a type is an instance of a typeclass, we mean that we can use the functions that the typeclass defines with that type.</p></blockquote><p>\u5BF9typeclasses\u7684\u7B80\u8981\u56DE\u987E\uFF1Atypeclasses\u5C31\u50CF\u63A5\u53E3\u3002\u4E00\u4E2Atypeclasses\u5B9A\u4E49\u4E86\u4E00\u4E9B\u884C\u4E3A\uFF08\u6BD4\u5982\u6BD4\u8F83\uFF0C\u6392\u5E8F\uFF09\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u8FD9\u4E9B\u884C\u4E3A\u7684\u7C7B\u578B\u5C31\u662F\u8FD9\u4E9Btypeclass\u7684\u5B9E\u4F8B\uFF0C\u901A\u8FC7\u5B9A\u4E49\u51FD\u6570\u6216\u8005\u58F0\u660E\u53BB\u5B9E\u73B0\u8FD9\u4E9B\u884C\u4E3A\uFF0C\u56E0\u6B64\uFF0C\u5F53\u6211\u4EEC\u8BF4\u7C7B\u578B\u662F\u7C7B\u578B\u7684\u4E00\u4E2A\u7C7B\u578B\u7684\u5B9E\u4F8B\u65F6\uFF0C\u6211\u4EEC\u7684\u610F\u601D\u662F\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528TypeClass\u5B9A\u4E49\u8BE5\u7C7B\u578B\u7684\u51FD\u6570\u3002</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- \u4F7F\u7528 :info Num \u53EF\u4EE5\u67E5\u770B typeclass\u5B9A\u4E49</span>
<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">info</span> <span class="token constant">Num</span>
<span class="token keyword">type</span> <span class="token constant">Num</span> <span class="token operator">::</span> <span class="token operator">*</span> <span class="token operator">-&gt;</span> <span class="token constant">Constraint</span>
<span class="token keyword">class</span> <span class="token constant">Num</span> <span class="token hvariable">a</span> <span class="token keyword">where</span>
  <span class="token punctuation">(</span><span class="token operator">+</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token builtin">negate</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token builtin">abs</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token builtin">signum</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token builtin">fromInteger</span> <span class="token operator">::</span> <span class="token constant">Integer</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
  <span class="token comment">{-# MINIMAL (+), (*), abs, signum, fromInteger, (negate | (-)) #-}</span>
        <span class="token comment">-- Defined in \u2018GHC.Num\u2019</span>
<span class="token keyword">instance</span> <span class="token constant">Num</span> <span class="token constant">Word</span> <span class="token comment">-- Defined in \u2018GHC.Num\u2019</span>
<span class="token keyword">instance</span> <span class="token constant">Num</span> <span class="token constant">Integer</span> <span class="token comment">-- Defined in \u2018GHC.Num\u2019</span>
<span class="token keyword">instance</span> <span class="token constant">Num</span> <span class="token constant">Int</span> <span class="token comment">-- Defined in \u2018GHC.Num\u2019</span>
<span class="token keyword">instance</span> <span class="token constant">Num</span> <span class="token constant">Float</span> <span class="token comment">-- Defined in \u2018GHC.Float\u2019</span>
<span class="token keyword">instance</span> <span class="token constant">Num</span> <span class="token constant">Double</span> <span class="token comment">-- Defined in \u2018GHC.Float\u2019</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><strong>1. \u5B9A\u4E49typeclasses</strong></p><p>\u4E0B\u9762\u662FEq\u5728\u6807\u51C6\u5E93\u7684\u5B9A\u4E49</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">class</span> <span class="token constant">Eq</span> <span class="token hvariable">a</span> <span class="token keyword">where</span>
    <span class="token punctuation">(</span><span class="token operator">==</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>
    <span class="token punctuation">(</span><span class="token operator">/=</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>
    <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token hvariable">y</span> <span class="token operator">=</span> <span class="token builtin">not</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">/=</span> <span class="token hvariable">y</span><span class="token punctuation">)</span>
    <span class="token hvariable">x</span> <span class="token operator">/=</span> <span class="token hvariable">y</span> <span class="token operator">=</span> <span class="token builtin">not</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token hvariable">y</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>class\u5B9A\u4E49\u4E86\u4E00\u4E2Atypeclass\uFF0C Eq\u662F\u540D\u5B57\uFF0C a\u662F\u5B9E\u4F8B\uFF0Ca\u53EA\u8981\u662F\u4E00\u4E2A\u5C0F\u5199\u7684\u5355\u8BCD\u5C31\u884C</p><p>\u63A5\u7740\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E9B\u51FD\u6570\uFF0C\u5728class\u91CC\u5B9E\u73B0\u51FD\u6570\u4E0D\u662F\u5F3A\u5236\u7684\uFF0C\u53EA\u9700\u8981\u4E00\u4E2A\u5B9A\u4E49\u5C31\u591F\u4E86</p><blockquote><p>Some people might understand this better if we wrote class Eq equatable where and then specified the type declarations like <code>(==) :: equatable -&gt; equatable -&gt; Bool</code>.</p><p>\u8FD9\u79CD\u5199\u6CD5\u53EF\u80FD\u66F4\u597D\u7406\u89E3\uFF1A<code>(==) :: equatable -&gt; equatable -&gt; Bool</code></p></blockquote><blockquote><p>If we have say class Eq a where and then define a type declaration within that class like (==) :: a -&gt; -a -&gt; Bool, then when we examine the type of that function later on, it will have the type of <code>(Eq a) =&gt; a -&gt; a -&gt; Bool</code>.</p><p>\u5F53\u6211\u4EEC\u5728class\u4E2D\u5B9A\u4E49\u8FD9\u4E2A\u51FD\u6570\u540E\uFF0C\u5728\u67E5\u770B\u8FD9\u4E2A\u51FD\u6570\u7684\u7C7B\u578B\u65F6\uFF0C\u5C31\u4F1A\u663E\u793A\u51FAtypeclasses</p></blockquote><p><strong>2. \u5B9E\u73B0 typeclass</strong></p><p>\u4E0B\u9762\u6211\u4EEC\u5B9E\u73B0\u4E00\u4E2A <code>TrafficLight</code></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">data</span> <span class="token constant">TrafficLight</span> <span class="token operator">=</span> <span class="token constant">Red</span> <span class="token operator">|</span> <span class="token constant">Yellow</span> <span class="token operator">|</span> <span class="token constant">Green</span>
<span class="token comment">-- \u5B9E\u73B0\u6BD4\u8F83</span>
<span class="token keyword">instance</span> <span class="token constant">Eq</span> <span class="token constant">TrafficLight</span> <span class="token keyword">where</span>
    <span class="token constant">Red</span> <span class="token operator">==</span> <span class="token constant">Red</span> <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token constant">Green</span> <span class="token operator">==</span> <span class="token constant">Green</span> <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token constant">Yellow</span> <span class="token operator">==</span> <span class="token constant">Yellow</span> <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token hvariable">_</span> <span class="token operator">==</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token constant">False</span>
<span class="token comment">-- \u624B\u52A8\u5B9E\u73B0\u5B57\u7B26\u4E32\u8F6C\u6362</span>
<span class="token keyword">instance</span> <span class="token constant">Show</span> <span class="token constant">TrafficLight</span> <span class="token keyword">where</span>
    <span class="token builtin">show</span> <span class="token constant">Red</span> <span class="token operator">=</span> <span class="token string">&quot;Red light&quot;</span>
    <span class="token builtin">show</span> <span class="token constant">Yellow</span> <span class="token operator">=</span> <span class="token string">&quot;Yellow light&quot;</span>
    <span class="token builtin">show</span> <span class="token constant">Green</span> <span class="token operator">=</span> <span class="token string">&quot;Green light&quot;</span>
<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;start...&quot;</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token constant">Red</span> <span class="token operator">==</span> <span class="token constant">Red</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token builtin">show</span> <span class="token punctuation">[</span><span class="token constant">Red</span><span class="token punctuation">,</span> <span class="token constant">Yellow</span><span class="token punctuation">,</span> <span class="token constant">Green</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><strong>3. subtypeclasses</strong></p><p>\u4E0B\u9762\u662F Num \u5728\u6807\u51C6\u5E93\u4E2D\u7684\u5B9A\u4E49\uFF08\u7B2C\u4E00\u884C\uFF09</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">class</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">Num</span> <span class="token hvariable">a</span> <span class="token keyword">where</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u5728\u5B9E\u73B0Num\u524D\uFF0C\u5FC5\u987B\u4FDD\u8BC1 a \u5B9E\u73B0\u4E86 Eq</p><p><strong>\u5BF9\u4E8E\u591A\u6001\u7C7B\u578B</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">instance</span> <span class="token constant">Eq</span> <span class="token punctuation">(</span><span class="token constant">Maybe</span> <span class="token hvariable">m</span><span class="token punctuation">)</span> <span class="token keyword">where</span>
    <span class="token constant">Just</span> <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token constant">Just</span> <span class="token hvariable">y</span> <span class="token operator">=</span> <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token hvariable">y</span>
    <span class="token constant">Nothing</span> <span class="token operator">==</span> <span class="token constant">Nothing</span> <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token hvariable">_</span> <span class="token operator">==</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token constant">False</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u597D\u50CF\u89E3\u51B3\u4E86\u95EE\u9898\uFF0C \u4F46\u662F\u4E0D\u80FD\u786E\u5B9A m \u7684\u7C7B\u578B\u5B9E\u73B0\u4E86 Eq\uFF0C\u6240\u4EE5\u6211\u4EEC\u5E94\u8BE5\u4FEE\u6539\u4E0A\u9762\u7684\u58F0\u660E\uFF1A</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">instance</span> <span class="token punctuation">(</span><span class="token constant">Eq</span> <span class="token hvariable">m</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">Eq</span> <span class="token punctuation">(</span><span class="token constant">Maybe</span> <span class="token hvariable">m</span><span class="token punctuation">)</span> <span class="token keyword">where</span>
	<span class="token constant">Just</span> <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token constant">Just</span> <span class="token hvariable">y</span> <span class="token operator">=</span> <span class="token hvariable">x</span> <span class="token operator">==</span> <span class="token hvariable">y</span>
	<span class="token constant">Nothing</span> <span class="token operator">==</span> <span class="token constant">Nothing</span> <span class="token operator">=</span> <span class="token constant">True</span>
	<span class="token hvariable">_</span> <span class="token operator">==</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token constant">False</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u8FD9\u6B21\u6211\u4EEC\u589E\u52A0\u4E86\u4E00\u4E2A\u7C7B\u578B\u9650\u5B9A\uFF0C\u6211\u4EEC\u9650\u5B9A\u4E86\u6240\u6709Maybe m\u7C7B\u578B\u90FD\u662FEq\uFF0C\u9664\u975E m \u4E5F\u662F Eq</p><p>\u{1F34F}</p><blockquote><p>Take into account that the type you&#39;re trying to make an instance of will replace the parameter in the <em>class</em> declaration. The a from class Eq a where will be replaced with a real type when you make an instance, so try mentally putting your type into the function type declarations as well. (==) :: Maybe -&gt; Maybe -&gt; Bool doesn&#39;t make much sense but (==) :: (Eq m) =&gt; Maybe m -&gt; Maybe m -&gt; Bool does. But this is just something to think about, because == will always have a type of (==) :: (Eq a) =&gt; a -&gt; a -&gt; Bool, no matter what instances we make.</p><p>\u4E00\u5B9A\u8981 \u6CE8\u610F &#39;a&#39; \u5728\u5B9E\u73B0\u65F6\u9700\u8981\u88AB\u66FF\u6362\u4E3Aconcrete type</p></blockquote><p><strong>4. \u5B9E\u73B0\u4E00\u4E2A\u73A9\u5177</strong></p><p>\u5728 js \u4E2D\uFF0C\u4EFB\u4F55\u975E\u7A7A\u7C7B\u578B\u90FD\u88AB\u5F53\u6210\u662F true</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;YEAH!&quot;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;NO!&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token function">alert</span> <span class="token punctuation">(</span><span class="token string">&quot;YEAH!&quot;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;NO!&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;YEAH&quot;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token function">alert</span><span class="token punctuation">(</span>&quot;<span class="token constant">NO</span><span class="token operator">!</span><span class="token punctuation">)</span>
<span class="token comment">//etc. and all of these will throw an alert of NO!. If you do</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;WHAT&quot;</span><span class="token punctuation">)</span> <span class="token function">alert</span> <span class="token punctuation">(</span><span class="token string">&quot;YEAH&quot;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;NO!&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// it will alert a &quot;YEAH!&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><em>A yesno typeclass</em></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">class</span> <span class="token constant">YesNo</span> <span class="token hvariable">a</span> <span class="token keyword">where</span>
    <span class="token hvariable">yesno</span> <span class="token operator">::</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token constant">Bool</span>

<span class="token keyword">instance</span> <span class="token constant">YesNo</span> <span class="token constant">Int</span> <span class="token keyword">where</span>
    <span class="token hvariable">yesno</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token constant">False</span>
    <span class="token hvariable">yesno</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token constant">True</span>

<span class="token keyword">instance</span> <span class="token constant">YesNo</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token keyword">where</span>
    <span class="token hvariable">yesno</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token constant">False</span>
    <span class="token hvariable">yesno</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token constant">True</span>

<span class="token comment">-- Bool \u4E5F\u4E0D\u8981\u5FD8\u4E86</span>
<span class="token keyword">instance</span> <span class="token constant">YesNo</span> <span class="token constant">Bool</span> <span class="token keyword">where</span>
    <span class="token hvariable">yesno</span> <span class="token operator">=</span> <span class="token builtin">id</span>

<span class="token comment">-- \u56E0\u4E3A\u6211\u4EEC\u5E76\u4E0D\u5173\u5FC3Maybe \u5305\u542B\u4EC0\u4E48\u7C7B\u578B\uFF0C\u53EA\u8981\u4ED6\u6709\u4E1C\u897F\u5C31\u884C\u4E86\uFF0C\u6240\u4EE5\u6CA1\u6709\u52A0\u7C7B\u578B\u9650\u5B9A</span>
<span class="token keyword">instance</span> <span class="token constant">YesNo</span> <span class="token punctuation">(</span><span class="token constant">Maybe</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token keyword">where</span>
    <span class="token hvariable">yesno</span> <span class="token punctuation">(</span><span class="token constant">Just</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">True</span>
    <span class="token hvariable">yesno</span> <span class="token constant">Nothing</span> <span class="token operator">=</span> <span class="token constant">False</span>

<span class="token comment">-- \u4EFF\u7167\u7740\u5199\u4E00\u4E2A if</span>
<span class="token hvariable">yesnoIf</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">YesNo</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span>
<span class="token hvariable">yesnoIf</span> <span class="token hvariable">a</span> <span class="token hvariable">onyes</span> <span class="token hvariable">onno</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token hvariable">yesno</span> <span class="token hvariable">a</span> <span class="token keyword">then</span> <span class="token hvariable">onyes</span> <span class="token keyword">else</span> <span class="token hvariable">onno</span>

<span class="token hvariable">main</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;start...&quot;</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token builtin">length</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">yesno</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">yesno</span> <span class="token constant">Nothing</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">yesno</span> <span class="token constant">True</span>
    <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token hvariable">yesnoIf</span> <span class="token punctuation">(</span><span class="token constant">Just</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;yes !&quot;</span> <span class="token string">&quot;No -_-&quot;</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h4 id="_7-4-7-functor-\u548C-kinds" tabindex="-1"><a class="header-anchor" href="#_7-4-7-functor-\u548C-kinds" aria-hidden="true">#</a> 7.4.7 Functor \u548C Kinds</h4><p><strong>1. \u4EC0\u4E48\u662F Kind</strong></p><blockquote><p>We used :k on a type to get its kind, just like we can use :t on a value to get its type. Like we said, types are the labels of values and kinds are the labels of types and there are parallels between the two.</p></blockquote><p>\u6211\u4EEC\u80FD\u7528 <code>:t</code> \u67E5\u770B\u4E00\u4E2A\u503C(value)\u7684\u7C7B\u578B(type)</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- &#39;=&gt;&#39;\u662F\u7C7B\u578B\u9650\u5B9A !!!</span>
<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token number">1</span>
<span class="token number">1</span> <span class="token operator">::</span> <span class="token constant">Num</span> <span class="token hvariable">p</span> <span class="token operator">=&gt;</span> <span class="token hvariable">p</span>

<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">::</span> <span class="token constant">Num</span> <span class="token hvariable">a</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span>

<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">t</span> <span class="token constant">Just</span> <span class="token number">1</span>
<span class="token constant">Just</span> <span class="token number">1</span> <span class="token operator">::</span> <span class="token constant">Num</span> <span class="token hvariable">a</span> <span class="token operator">=&gt;</span> <span class="token constant">Maybe</span> <span class="token hvariable">a</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E5F\u80FD\u7528 <code>:k</code> \u67E5\u770B\u4E00\u4E2A\u7C7B\u578B(type)\u7684Kind</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">k</span> <span class="token constant">Int</span>
<span class="token constant">Int</span> <span class="token operator">::</span> <span class="token operator">*</span>

<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">k</span> <span class="token constant">Num</span>
<span class="token constant">Num</span> <span class="token operator">::</span> <span class="token operator">*</span> <span class="token operator">-&gt;</span> <span class="token constant">Constraint</span>

<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">k</span> <span class="token constant">Maybe</span>
<span class="token constant">Maybe</span> <span class="token operator">::</span> <span class="token operator">*</span> <span class="token operator">-&gt;</span> <span class="token operator">*</span>

<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">k</span> <span class="token constant">Either</span>
<span class="token constant">Either</span> <span class="token operator">::</span> <span class="token operator">*</span> <span class="token operator">-&gt;</span> <span class="token operator">*</span> <span class="token operator">-&gt;</span> <span class="token operator">*</span>

<span class="token constant">Prelude</span><span class="token operator">&gt;</span> <span class="token operator">:</span><span class="token hvariable">k</span> <span class="token constant">Functor</span>
<span class="token constant">Functor</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token operator">*</span> <span class="token operator">-&gt;</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token constant">Constraint</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>&#39;*&#39; \u662F\u4EC0\u4E48</strong></p><blockquote><p>A * means that the type is a concrete type. A concrete type is a type that doesn&#39;t take any type parameters and values can only have types that are concrete types. If I had to read * out loud (I haven&#39;t had to do that so far), I&#39;d say <em>star</em> or just <em>type</em>.</p></blockquote><p><code>*</code> \u5C31\u662F\u4E00\u4E2A\u56FA\u5B9A\u7684\u7C7B\u578B, \u4E0D\u80FD\u643A\u5E26Type parameter</p><p><code>* -&gt; *</code> \u5C31\u662F\u63A5\u53D7\u4E00\u4E2Atype parameter, \u8FD4\u56DE\u4E00\u4E2A\u7C7B\u578B, \u6BD4\u5982 Maybe \u548C Maybe Int</p><p><code>* -&gt; * -&gt; *</code> \u540C\u7406</p><p>\u6240\u4EE5Functor\u7684\u7C7B\u578B\u5C31\u597D\u7406\u89E3\u4E86</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">class</span> <span class="token constant">Functor</span> <span class="token hvariable">f</span> <span class="token keyword">where</span>
    <span class="token builtin">fmap</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token hvariable">b</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>2. \u4EC0\u4E48\u662FFunctor</strong></p><p>\u770B\u4E00\u773Cfmap\u7684\u5B9A\u4E49, \u5B9E\u73B0\u4E86Functor\u7684\u7C7B\u578B,fmap \u80FD\u591F\u628A\u8FD9\u4E9B\u7C7B\u578B<em>\u91CC\u9762</em>\u7684\u4E1C\u897F\u8F6C\u6362\u5230\u53E6\u4E00\u79CD\u4E1C\u897F, \u5C31\u662F\u8BF4fmap\u53EA\u4F5C\u7528\u4E8Ebox\u91CC\u9762\u7684\u4E1C\u897F</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">class</span> <span class="token constant">Functor</span> <span class="token hvariable">f</span> <span class="token keyword">where</span>
    <span class="token builtin">fmap</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">f</span> <span class="token hvariable">b</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u8FD9\u4E2A\u662Fmap\u7684\u5B9A\u4E49</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">map</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">b</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>map\u5C31\u662F\u7279\u6B8A\u5316\u7684 fmap ,\u53EA\u80FD\u7528\u4E8E [],\u4E0D\u80FD\u7528\u4E8E Maybe, Ehther\u7B49\u7C7B\u578B</p><blockquote><p>anything like a box that can hold something can impl Functor, lsuch as Maybe, [], Tree = Empty | Tree a left rght, Either</p></blockquote><p>\u6240\u6709\u80FD\u591F\u627F\u8F7D\u5176\u4ED6\u7C7B\u578B\u7684\u4E1C\u897F\u90FD\u80FD\u5B9E\u73B0Functor,\u6BD4\u5982Maybe, [], Tree, Either</p><p>\u4E0B\u9762\u662F\u5173\u4E8EEither\u7684Functor\u5B9E\u73B0</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">instance</span> <span class="token constant">Functor</span> <span class="token punctuation">(</span><span class="token constant">Either</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token keyword">where</span>
    <span class="token builtin">fmap</span> <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token constant">Right</span> <span class="token hvariable">x</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">Right</span> <span class="token punctuation">(</span><span class="token hvariable">f</span> <span class="token hvariable">x</span><span class="token punctuation">)</span>
    <span class="token builtin">fmap</span> <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token constant">Left</span> <span class="token hvariable">x</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">Left</span> <span class="token hvariable">x</span>
<span class="token comment">-- (b -&gt; c) -&gt; Either a b -&gt; Ether a c</span>
<span class="token comment">-- \u548C\u4E0B\u9762\u7684\u4E00\u6837</span>
<span class="token comment">-- (b -&gt; c) -&gt; (Either a) b -&gt; (Either a) c</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>-- in this case, we only mapped the right value constructor, -- well, if we look at the define of Either: -- data Either a b = Left a | Right b -- we can&#39;t make sure f can handle both type a and type b -- Another example is Map.Map, where fmap just map a function v -&gt; v&#39; over a Map k v, and return Map k v&#39;</p></blockquote><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u91CC,\u6211\u4EEC\u53EAmap\u4E86Either\u7684\u53F3\u503C,\u56E0\u4E3A\u4E0D\u80FD\u4FDD\u8BC1Either a b\u7684\u7C7B\u578B\u76F8\u540C, Map.Map\u4E5F\u662F,\u53EA\u6709value\u6539\u53D8</p><p><strong>3. \u5B9E\u73B0\u4E00\u4E2A Tofu</strong></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">class</span> <span class="token constant">Tofu</span> <span class="token hvariable">t</span> <span class="token keyword">where</span>
    <span class="token hvariable">tofu</span> <span class="token operator">::</span> <span class="token hvariable">j</span> <span class="token hvariable">a</span> <span class="token operator">-&gt;</span> <span class="token hvariable">t</span> <span class="token hvariable">a</span> <span class="token hvariable">j</span>

<span class="token keyword">data</span> <span class="token constant">Frank</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token constant">Frank</span> <span class="token punctuation">{</span><span class="token hvariable">frankField</span> <span class="token operator">::</span> <span class="token hvariable">b</span> <span class="token hvariable">a</span><span class="token punctuation">}</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>

<span class="token keyword">instance</span> <span class="token constant">Tofu</span> <span class="token constant">Frank</span> <span class="token keyword">where</span>
    <span class="token hvariable">tofu</span> <span class="token hvariable">x</span> <span class="token operator">=</span> <span class="token constant">Frank</span> <span class="token hvariable">x</span>

<span class="token keyword">data</span> <span class="token constant">Barry</span> <span class="token hvariable">t</span> <span class="token hvariable">k</span> <span class="token hvariable">p</span> <span class="token operator">=</span> <span class="token constant">Barry</span> <span class="token punctuation">{</span> <span class="token hvariable">yabba</span> <span class="token operator">::</span> <span class="token hvariable">p</span><span class="token punctuation">,</span> <span class="token hvariable">dabba</span> <span class="token operator">::</span> <span class="token hvariable">t</span> <span class="token hvariable">k</span> <span class="token punctuation">}</span>

<span class="token keyword">instance</span> <span class="token constant">Functor</span> <span class="token punctuation">(</span><span class="token constant">Barry</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token keyword">where</span>
    <span class="token builtin">fmap</span> <span class="token hvariable">f</span> <span class="token punctuation">(</span><span class="token constant">Barry</span> <span class="token punctuation">{</span> <span class="token hvariable">yabba</span> <span class="token operator">=</span> <span class="token hvariable">x</span><span class="token punctuation">,</span> <span class="token hvariable">dabba</span> <span class="token operator">=</span> <span class="token hvariable">y</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">Barry</span> <span class="token punctuation">{</span><span class="token hvariable">yabba</span> <span class="token operator">=</span> <span class="token hvariable">f</span> <span class="token hvariable">x</span><span class="token punctuation">,</span> <span class="token hvariable">dabba</span> <span class="token operator">=</span> <span class="token hvariable">y</span> <span class="token punctuation">}</span>

<span class="token hvariable">main</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token keyword">let</span> <span class="token hvariable">a</span> <span class="token operator">=</span> <span class="token constant">Frank</span> <span class="token punctuation">{</span> <span class="token hvariable">frankField</span> <span class="token operator">=</span> <span class="token constant">Just</span> <span class="token char string">&#39;c&#39;</span> <span class="token punctuation">}</span>
    <span class="token builtin">print</span> <span class="token hvariable">a</span>
    <span class="token keyword">let</span> <span class="token hvariable">b</span> <span class="token operator">=</span> <span class="token hvariable">tofu</span> <span class="token punctuation">(</span><span class="token constant">Just</span> <span class="token char string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token constant">Frank</span> <span class="token constant">Char</span> <span class="token constant">Maybe</span>
    <span class="token builtin">print</span> <span class="token hvariable">b</span>
    <span class="token keyword">let</span> <span class="token hvariable">c</span> <span class="token operator">=</span> <span class="token hvariable">tofu</span> <span class="token punctuation">[</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">]</span> <span class="token operator">::</span> <span class="token constant">Frank</span> <span class="token punctuation">[</span><span class="token constant">Char</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token builtin">print</span> <span class="token hvariable">c</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;start...&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="_8-io" tabindex="-1"><a class="header-anchor" href="#_8-io" aria-hidden="true">#</a> 8. IO</h2><h3 id="_8-1-cmd-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_8-1-cmd-\u53C2\u6570" aria-hidden="true">#</a> 8.1 cmd \u53C2\u6570</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>Environment</span>
<span class="token import-statement"><span class="token keyword">import</span> Data<span class="token punctuation">.</span>List</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token comment">-- \u83B7\u53D6\u53C2\u6570</span>
    <span class="token hvariable">args</span> <span class="token operator">&lt;-</span> <span class="token hvariable">getArgs</span>
    <span class="token comment">-- \u83B7\u53D6\u540D\u5B57</span>
    <span class="token hvariable">progName</span> <span class="token operator">&lt;-</span> <span class="token hvariable">getProgName</span>
    <span class="token builtin">putStrLn</span> <span class="token hvariable">progName</span>
    <span class="token builtin">mapM_</span> <span class="token builtin">putStrLn</span> <span class="token hvariable">args</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_8-2-\u8F93\u5165" tabindex="-1"><a class="header-anchor" href="#_8-2-\u8F93\u5165" aria-hidden="true">#</a> 8.2 \u8F93\u5165</h3><ol><li><p>\u83B7\u53D6\u8F93\u5165</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;start...&quot;</span>
    <span class="token comment">-- \u83B7\u53D6\u8F93\u5165\u6570\u636E</span>
    <span class="token hvariable">line</span> <span class="token operator">&lt;-</span> <span class="token builtin">getLine</span>
    <span class="token comment">-- \u5224\u65AD\u4E0D\u4E3A\u7A7A\u5C31\u53CD\u8F6C</span>
    <span class="token keyword">if</span> <span class="token builtin">null</span> <span class="token hvariable">line</span>
        <span class="token keyword">then</span> <span class="token builtin">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span> <span class="token keyword">do</span>
            <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token hvariable">reverseWords</span> <span class="token hvariable">line</span>
            <span class="token hvariable">main</span>
<span class="token hvariable">reverseWords</span> <span class="token operator">::</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token constant">String</span>
<span class="token hvariable">reverseWords</span> <span class="token operator">=</span> <span class="token builtin">unwords</span> <span class="token operator">.</span> <span class="token builtin">map</span> <span class="token builtin">reverse</span> <span class="token operator">.</span> <span class="token builtin">words</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></li><li><p>\u6587\u4EF6\u4EA4\u4E92</p></li></ol><ul><li>openFile (fileName, openMode): \u6253\u5F00\u6587\u4EF6\u8FD4\u56DEhandle\u5BF9\u8C61</li><li>hGetContents (handle)\uFF1A\u8BFB\u53D6\u6587\u4EF6\u5185\u5BB9</li><li>with \u8BED\u6CD5</li><li>appendFile(fileName, content)\uFF1A\u8FFD\u52A0\u5185\u5BB9</li><li>readBuffer: \u8BBE\u7F6E\u7F13\u51B2\u533A</li></ul><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>IO</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token hvariable">handle</span> <span class="token operator">&lt;-</span> <span class="token hvariable">openFile</span> <span class="token string">&quot;haiku.txt&quot;</span> <span class="token constant">ReadMode</span>
    <span class="token comment">-- Lazy, don&#39;t read and stored in memory an once</span>
    <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token hvariable">hGetContents</span> <span class="token hvariable">handle</span>
    <span class="token builtin">putStrLn</span> <span class="token hvariable">contents</span>
    <span class="token hvariable">hClose</span> <span class="token hvariable">handle</span>

    <span class="token hvariable">withFile</span> <span class="token string">&quot;haiku.txt&quot;</span> <span class="token constant">ReadMode</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">handle</span> <span class="token operator">-&gt;</span> <span class="token keyword">do</span>
    <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token hvariable">hGetContents</span> <span class="token hvariable">handle</span>
    <span class="token builtin">putStrLn</span> <span class="token hvariable">contents</span><span class="token punctuation">)</span>

    <span class="token comment">-- withOpen&#39;s define</span>
    <span class="token comment">-- openFle :: FilePath -&gt; IOMode -&gt; (Handle -&gt; IO a) -&gt; IO a</span>
    <span class="token comment">-- openFile path mode f = do</span>
    <span class="token comment">--     handle &lt;- openFile path mode</span>
    <span class="token comment">--     result &lt;- f handle</span>
    <span class="token comment">--     hClose f</span>
    <span class="token comment">--     return result</span>

    <span class="token comment">-- More function</span>
    <span class="token comment">-- hGetLine hPutStr hPutStrLn hGetChar</span>
    <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token builtin">readFile</span> <span class="token string">&quot;todo.txt&quot;</span>
    <span class="token builtin">putStrLn</span> <span class="token hvariable">contents</span>

    <span class="token hvariable">todo</span> <span class="token operator">&lt;-</span> <span class="token builtin">getLine</span>
    <span class="token builtin">appendFile</span> <span class="token string">&quot;todo.txt&quot;</span> <span class="token operator">$</span> <span class="token hvariable">todo</span> <span class="token operator">++</span> <span class="token string">&quot;\\n&quot;</span>

    <span class="token comment">-- set buffering manualy</span>
    <span class="token comment">-- BufferMode = NoBuffering | LineBuffering | BlockBuffering (Maybe Int)</span>
    <span class="token hvariable">withFile</span> <span class="token string">&quot;todo.txt&quot;</span> <span class="token constant">ReadMode</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">handle</span> <span class="token operator">-&gt;</span> <span class="token keyword">do</span>
        <span class="token hvariable">hSetBuffering</span> <span class="token hvariable">handle</span> <span class="token operator">$</span> <span class="token constant">BlockBuffering</span> <span class="token punctuation">(</span><span class="token constant">Just</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token hvariable">hGetContents</span> <span class="token hvariable">handle</span>
        <span class="token builtin">putStrLn</span> <span class="token hvariable">contents</span><span class="token punctuation">)</span>
    <span class="token comment">-- read file in big chunks can help to minimize disk access or when our file is actually a slow network resource</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="_8-3-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_8-3-\u5FAA\u73AF" aria-hidden="true">#</a> 8.3. \u5FAA\u73AF</h3><ol><li>forever(loop)</li></ol><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> Control<span class="token punctuation">.</span>Monad</span>
<span class="token import-statement"><span class="token keyword">import</span> Data<span class="token punctuation">.</span>Char</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token hvariable">forever</span> <span class="token operator">$</span> <span class="token keyword">do</span>
    <span class="token builtin">putStr</span> <span class="token string">&quot;Give a input: &quot;</span>
    <span class="token hvariable">l</span> <span class="token operator">&lt;-</span> <span class="token builtin">getLine</span>
    <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token builtin">toUpper</span> <span class="token hvariable">l</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="2"><li>when(while)</li></ol><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> Control<span class="token punctuation">.</span>Monad</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token builtin">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token comment">-- aaa &lt;- return &quot;aaavvv&quot;</span>
  <span class="token comment">-- putStrLn aaa</span>

  <span class="token hvariable">c</span> <span class="token operator">&lt;-</span> <span class="token builtin">getChar</span>
  <span class="token hvariable">when</span> <span class="token punctuation">(</span><span class="token hvariable">c</span> <span class="token operator">/=</span> <span class="token char string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token operator">$</span> <span class="token keyword">do</span>
    <span class="token builtin">putChar</span> <span class="token hvariable">c</span>
    <span class="token hvariable">main</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_8-4-map-io-action" tabindex="-1"><a class="header-anchor" href="#_8-4-map-io-action" aria-hidden="true">#</a> 8.4 map IO action</h3><p>mapM &amp; mapM_ &amp; sequence</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token comment">-- 1.1 sequence can run erery IO action in it, and return their result as a list</span>
  <span class="token comment">-- rs &lt;- sequence [getLine, getLine, getLine]</span>
  <span class="token comment">-- print rs</span>

  <span class="token comment">-- 1.2</span>
  <span class="token comment">-- map print [1, 2, 3]</span>
  <span class="token comment">-- [print 1, print 2, print 3]</span>
  <span class="token hvariable">res</span> <span class="token operator">&lt;-</span> <span class="token builtin">sequence</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token builtin">print</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
  <span class="token comment">-- \`print 1\` just return a \`()\`</span>
  <span class="token comment">-- so res is [(), (), ()]</span>
  <span class="token builtin">print</span> <span class="token hvariable">res</span>

  <span class="token comment">-- 2.1 mapM can be used to map a function that return IO action</span>
  <span class="token hvariable">mapm</span> <span class="token operator">&lt;-</span> <span class="token builtin">mapM</span> <span class="token builtin">print</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
  <span class="token builtin">print</span> <span class="token hvariable">mapm</span>
  <span class="token comment">-- 2.2 mapM_ just abundon the results</span>
  <span class="token hvariable">mapm_</span> <span class="token operator">&lt;-</span> <span class="token builtin">mapM_</span> <span class="token builtin">print</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
  <span class="token builtin">print</span> <span class="token hvariable">mapm_</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_8-6-todo-list" tabindex="-1"><a class="header-anchor" href="#_8-6-todo-list" aria-hidden="true">#</a> 8.6 todo list</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> Data<span class="token punctuation">.</span>List</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>Directory</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>Environment</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>IO</span>

<span class="token hvariable">dispatch</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token constant">String</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token constant">String</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token hvariable">dispatch</span> <span class="token operator">=</span>
  <span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">add</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&quot;view&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">view</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&quot;remove&quot;</span><span class="token punctuation">,</span> <span class="token hvariable">remove</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token punctuation">(</span><span class="token hvariable">command</span> <span class="token operator">:</span> <span class="token hvariable">args</span><span class="token punctuation">)</span> <span class="token operator">&lt;-</span> <span class="token hvariable">getArgs</span>
  <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token constant">Just</span> <span class="token hvariable">action</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token builtin">lookup</span> <span class="token hvariable">command</span> <span class="token hvariable">dispatch</span>
  <span class="token hvariable">action</span> <span class="token hvariable">args</span>

<span class="token hvariable">add</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token constant">String</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">add</span> <span class="token punctuation">[</span><span class="token hvariable">fileName</span><span class="token punctuation">,</span> <span class="token hvariable">todoItem</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">appendFile</span> <span class="token hvariable">fileName</span> <span class="token punctuation">(</span><span class="token hvariable">todoItem</span> <span class="token operator">++</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token hvariable">add</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token builtin">putStrLn</span> <span class="token string">&quot;Plz input [filename, todoItem]&quot;</span>

<span class="token hvariable">view</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token constant">String</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">view</span> <span class="token punctuation">[</span><span class="token hvariable">fileName</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token builtin">readFile</span> <span class="token hvariable">fileName</span>
  <span class="token keyword">let</span> <span class="token hvariable">todoTasks</span> <span class="token operator">=</span> <span class="token builtin">lines</span> <span class="token hvariable">contents</span>
      <span class="token hvariable">numberedTasks</span> <span class="token operator">=</span> <span class="token builtin">zipWith</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token hvariable">n</span> <span class="token hvariable">line</span> <span class="token operator">-&gt;</span> <span class="token builtin">show</span> <span class="token hvariable">n</span> <span class="token operator">++</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">++</span> <span class="token hvariable">line</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">..</span><span class="token punctuation">]</span> <span class="token hvariable">todoTasks</span>
  <span class="token builtin">putStr</span> <span class="token operator">$</span> <span class="token builtin">unlines</span> <span class="token hvariable">numberedTasks</span>
<span class="token hvariable">view</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token builtin">putStrLn</span> <span class="token string">&quot;Plz input [filename]&quot;</span>

<span class="token hvariable">remove</span> <span class="token operator">::</span> <span class="token punctuation">[</span><span class="token constant">String</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">remove</span> <span class="token punctuation">[</span><span class="token hvariable">fileName</span><span class="token punctuation">,</span> <span class="token hvariable">numberString</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token hvariable">handle</span> <span class="token operator">&lt;-</span> <span class="token hvariable">openFile</span> <span class="token hvariable">fileName</span> <span class="token constant">ReadMode</span>
  <span class="token punctuation">(</span><span class="token hvariable">tempName</span><span class="token punctuation">,</span> <span class="token hvariable">tempHandle</span><span class="token punctuation">)</span> <span class="token operator">&lt;-</span> <span class="token hvariable">openTempFile</span> <span class="token string">&quot;.&quot;</span> <span class="token string">&quot;temp&quot;</span>
  <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token hvariable">hGetContents</span> <span class="token hvariable">handle</span>
  <span class="token keyword">let</span> <span class="token hvariable">number</span> <span class="token operator">=</span> <span class="token builtin">read</span> <span class="token hvariable">numberString</span>
      <span class="token hvariable">todoTasks</span> <span class="token operator">=</span> <span class="token builtin">lines</span> <span class="token hvariable">contents</span>
      <span class="token hvariable">newTodoItems</span> <span class="token operator">=</span> <span class="token hvariable">delete</span> <span class="token punctuation">(</span><span class="token hvariable">todoTasks</span> <span class="token operator">!!</span> <span class="token hvariable">number</span><span class="token punctuation">)</span> <span class="token hvariable">todoTasks</span>
  <span class="token hvariable">hPutStr</span> <span class="token hvariable">tempHandle</span> <span class="token operator">$</span> <span class="token builtin">unlines</span> <span class="token hvariable">newTodoItems</span>
  <span class="token hvariable">hClose</span> <span class="token hvariable">handle</span>
  <span class="token hvariable">hClose</span> <span class="token hvariable">tempHandle</span>
  <span class="token hvariable">removeFile</span> <span class="token hvariable">fileName</span>
  <span class="token hvariable">renameFile</span> <span class="token hvariable">tempName</span> <span class="token hvariable">fileName</span>
<span class="token hvariable">remove</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token builtin">putStrLn</span> <span class="token string">&quot;Plz input [filename, numberString]&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="_8-7-error-handle" tabindex="-1"><a class="header-anchor" href="#_8-7-error-handle" aria-hidden="true">#</a> 8.7 Error Handle</h3><ol><li>try &amp; catch</li></ol><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> Control<span class="token punctuation">.</span>Exception</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>Environment</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>IO</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Error</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token hvariable">toTry</span> <span class="token operator">\`catch\`</span> <span class="token hvariable">handler</span>

<span class="token hvariable">toTry</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">toTry</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token punctuation">(</span><span class="token hvariable">fileName</span> <span class="token operator">:</span> <span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">&lt;-</span> <span class="token hvariable">getArgs</span>
  <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token builtin">readFile</span> <span class="token hvariable">fileName</span>
  <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token string">&quot;The file has &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token punctuation">(</span><span class="token builtin">length</span> <span class="token punctuation">(</span><span class="token builtin">lines</span> <span class="token hvariable">contents</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">++</span> <span class="token string">&quot; lines!&quot;</span>

<span class="token hvariable">handler</span> <span class="token operator">::</span> <span class="token constant">IOError</span> <span class="token operator">-&gt;</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">handler</span> <span class="token hvariable">e</span> <span class="token operator">=</span> <span class="token builtin">putStrLn</span> <span class="token string">&quot;Whoops, had some trouble!&quot;</span>

<span class="token comment">-- main = do</span>
<span class="token comment">--   toTry \`catch\` handler1</span>
<span class="token comment">--   thenTryThis \`catch\` handler2</span>
<span class="token comment">--   launchRockets</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ol start="2"><li>error kind</li></ol><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>Environment</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>IO</span>
<span class="token import-statement"><span class="token keyword">import</span> System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Error</span>
<span class="token import-statement"><span class="token keyword">import</span> Control<span class="token punctuation">.</span>Exception</span>

<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token hvariable">toTry</span> <span class="token operator">\`catch\`</span> <span class="token hvariable">handler</span>

<span class="token hvariable">toTry</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">toTry</span> <span class="token operator">=</span> <span class="token keyword">do</span> <span class="token punctuation">(</span><span class="token hvariable">fileName</span><span class="token operator">:</span><span class="token hvariable">_</span><span class="token punctuation">)</span> <span class="token operator">&lt;-</span> <span class="token hvariable">getArgs</span>
           <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token builtin">readFile</span> <span class="token hvariable">fileName</span>
           <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token string">&quot;The file has &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token punctuation">(</span><span class="token builtin">length</span> <span class="token punctuation">(</span><span class="token builtin">lines</span> <span class="token hvariable">contents</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">++</span> <span class="token string">&quot; lines!&quot;</span>

<span class="token hvariable">handler</span> <span class="token operator">::</span> <span class="token constant">IOError</span> <span class="token operator">-&gt;</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">handler</span> <span class="token hvariable">e</span>
    <span class="token operator">|</span> <span class="token hvariable">isDoesNotExistError</span> <span class="token hvariable">e</span> <span class="token operator">=</span> <span class="token builtin">putStrLn</span> <span class="token string">&quot;The file doesn&#39;t exist!&quot;</span>
    <span class="token operator">|</span> <span class="token builtin">otherwise</span> <span class="token operator">=</span> <span class="token builtin">ioError</span> <span class="token hvariable">e</span>

<span class="token comment">-- isAlreadyExistsError</span>
<span class="token comment">-- isDoesNotExistError</span>
<span class="token comment">-- isAlreadyInUseError</span>
<span class="token comment">-- isFullError</span>
<span class="token comment">-- isEOFError</span>
<span class="token comment">-- isIllegalOperation</span>
<span class="token comment">-- isPermissionError</span>
<span class="token comment">-- isUserError</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="_9-solve-some-problems" tabindex="-1"><a class="header-anchor" href="#_9-solve-some-problems" aria-hidden="true">#</a> 9. Solve Some Problems</h2><h3 id="_9-1\u8BA1\u7B97\u540E\u7F00\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_9-1\u8BA1\u7B97\u540E\u7F00\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 9.1\u8BA1\u7B97\u540E\u7F00\u8868\u8FBE\u5F0F</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token import-statement"><span class="token keyword">import</span> Data<span class="token punctuation">.</span>List</span>

<span class="token hvariable">solveRPN</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">a</span><span class="token punctuation">,</span> <span class="token constant">Read</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token hvariable">solveRPN</span> <span class="token operator">=</span> <span class="token builtin">head</span> <span class="token operator">.</span> <span class="token builtin">foldl</span> <span class="token hvariable">foldingFunction</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token builtin">words</span>
    <span class="token keyword">where</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;*&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">*</span> <span class="token hvariable">y</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;+&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">+</span> <span class="token hvariable">y</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">-</span> <span class="token hvariable">y</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token hvariable">xs</span> <span class="token hvariable">numString</span> <span class="token operator">=</span> <span class="token builtin">read</span> <span class="token hvariable">numString</span><span class="token operator">:</span><span class="token hvariable">xs</span>

<span class="token hvariable">solveRPN2</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Num</span> <span class="token hvariable">a</span><span class="token punctuation">,</span> <span class="token constant">Read</span> <span class="token hvariable">a</span><span class="token punctuation">,</span> <span class="token constant">Floating</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">String</span> <span class="token operator">-&gt;</span> <span class="token hvariable">a</span>
<span class="token hvariable">solveRPN2</span> <span class="token operator">=</span> <span class="token builtin">head</span> <span class="token operator">.</span> <span class="token builtin">foldl</span> <span class="token hvariable">foldingFunction</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token builtin">words</span>
    <span class="token keyword">where</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;*&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">*</span> <span class="token hvariable">y</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;+&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">+</span> <span class="token hvariable">y</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">-</span> <span class="token hvariable">y</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;/&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">y</span> <span class="token operator">/</span> <span class="token hvariable">x</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">y</span><span class="token operator">:</span><span class="token hvariable">ys</span><span class="token punctuation">)</span> <span class="token string">&quot;^&quot;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token hvariable">y</span> <span class="token operator">**</span> <span class="token hvariable">x</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token hvariable">ys</span>
        <span class="token hvariable">foldingFunction</span> <span class="token punctuation">(</span><span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span><span class="token punctuation">)</span> <span class="token string">&quot;ln&quot;</span> <span class="token operator">=</span> <span class="token builtin">log</span> <span class="token hvariable">x</span><span class="token operator">:</span><span class="token hvariable">xs</span>
        <span class="token hvariable">foldingFunction</span> <span class="token hvariable">xs</span> <span class="token string">&quot;sum&quot;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">sum</span> <span class="token hvariable">xs</span><span class="token punctuation">]</span>
        <span class="token hvariable">foldingFunction</span> <span class="token hvariable">xs</span> <span class="token hvariable">numString</span> <span class="token operator">=</span> <span class="token builtin">read</span> <span class="token hvariable">numString</span><span class="token operator">:</span><span class="token hvariable">xs</span>


<span class="token hvariable">main</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;start...&quot;</span>
    <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">solveRPN</span> <span class="token string">&quot;90 34 12 33 55 66 + * - + -&quot;</span>
    <span class="token builtin">putStrLn</span> <span class="token string">&quot;end...&quot;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_9-2-\u8BA1\u7B97\u6700\u77ED\u8DEF" tabindex="-1"><a class="header-anchor" href="#_9-2-\u8BA1\u7B97\u6700\u77ED\u8DEF" aria-hidden="true">#</a> 9.2 \u8BA1\u7B97\u6700\u77ED\u8DEF</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token comment">-- newtype Road = Road Int Node</span>
<span class="token comment">-- newtype Node = Node Road Road | EndNode Road</span>

<span class="token comment">-- newtype Road = Road Int Node</span>
<span class="token comment">-- newtype Node = Node Road (Maybe Road)</span>

<span class="token keyword">data</span> <span class="token constant">Section</span> <span class="token operator">=</span> <span class="token constant">Section</span>
  <span class="token punctuation">{</span> <span class="token hvariable">getA</span> <span class="token operator">::</span> <span class="token constant">Int</span><span class="token punctuation">,</span>
    <span class="token hvariable">getB</span> <span class="token operator">::</span> <span class="token constant">Int</span><span class="token punctuation">,</span>
    <span class="token hvariable">getC</span> <span class="token operator">::</span> <span class="token constant">Int</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> <span class="token constant">RoadSystem</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">Section</span><span class="token punctuation">]</span>

<span class="token hvariable">headthrowToLondon</span> <span class="token operator">::</span> <span class="token constant">RoadSystem</span>
<span class="token hvariable">headthrowToLondon</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token constant">Section</span> <span class="token number">50</span> <span class="token number">10</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token constant">Section</span> <span class="token number">5</span> <span class="token number">90</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token constant">Section</span> <span class="token number">40</span> <span class="token number">2</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token constant">Section</span> <span class="token number">10</span> <span class="token number">8</span> <span class="token number">0</span><span class="token punctuation">]</span>

<span class="token keyword">data</span> <span class="token constant">Label</span> <span class="token operator">=</span> <span class="token constant">A</span> <span class="token operator">|</span> <span class="token constant">B</span> <span class="token operator">|</span> <span class="token constant">C</span> <span class="token keyword">deriving</span> <span class="token punctuation">(</span><span class="token constant">Show</span><span class="token punctuation">)</span>

<span class="token keyword">type</span> <span class="token constant">Path</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token constant">Label</span><span class="token punctuation">,</span> <span class="token constant">Int</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

<span class="token hvariable">roadStep</span> <span class="token operator">::</span> <span class="token punctuation">(</span><span class="token constant">Path</span><span class="token punctuation">,</span> <span class="token constant">Path</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token constant">Section</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token constant">Path</span><span class="token punctuation">,</span> <span class="token constant">Path</span><span class="token punctuation">)</span>
<span class="token hvariable">roadStep</span> <span class="token punctuation">(</span><span class="token hvariable">pathA</span><span class="token punctuation">,</span> <span class="token hvariable">pathB</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Section</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">=</span>
  <span class="token keyword">let</span> <span class="token hvariable">priceA</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token builtin">snd</span> <span class="token hvariable">pathA</span>
      <span class="token hvariable">priceB</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token builtin">snd</span> <span class="token hvariable">pathB</span>
      <span class="token hvariable">forwardPriceToA</span> <span class="token operator">=</span> <span class="token hvariable">priceA</span> <span class="token operator">+</span> <span class="token hvariable">a</span>
      <span class="token hvariable">crossPriceToA</span> <span class="token operator">=</span> <span class="token hvariable">priceB</span> <span class="token operator">+</span> <span class="token hvariable">b</span> <span class="token operator">+</span> <span class="token hvariable">c</span>
      <span class="token hvariable">forwardPriceToB</span> <span class="token operator">=</span> <span class="token hvariable">priceB</span> <span class="token operator">+</span> <span class="token hvariable">b</span>
      <span class="token hvariable">crossPriceToB</span> <span class="token operator">=</span> <span class="token hvariable">priceA</span> <span class="token operator">+</span> <span class="token hvariable">a</span> <span class="token operator">+</span> <span class="token hvariable">c</span>
      <span class="token hvariable">newPathToA</span> <span class="token operator">=</span>
        <span class="token keyword">if</span> <span class="token hvariable">forwardPriceToA</span> <span class="token operator">&lt;=</span> <span class="token hvariable">crossPriceToA</span>
          <span class="token keyword">then</span> <span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token hvariable">pathA</span>
          <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token hvariable">pathB</span>
      <span class="token hvariable">newPathToB</span> <span class="token operator">=</span>
        <span class="token keyword">if</span> <span class="token hvariable">forwardPriceToB</span> <span class="token operator">&lt;=</span> <span class="token hvariable">crossPriceToB</span>
          <span class="token keyword">then</span> <span class="token punctuation">(</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token hvariable">b</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token hvariable">pathB</span>
          <span class="token keyword">else</span> <span class="token punctuation">(</span><span class="token constant">C</span><span class="token punctuation">,</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> <span class="token hvariable">a</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token hvariable">pathA</span>
   <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token hvariable">newPathToA</span><span class="token punctuation">,</span> <span class="token hvariable">newPathToB</span><span class="token punctuation">)</span>

<span class="token hvariable">optimalPath</span> <span class="token operator">::</span> <span class="token constant">RoadSystem</span> <span class="token operator">-&gt;</span> <span class="token constant">Path</span>
<span class="token hvariable">optimalPath</span> <span class="token hvariable">roadSystem</span> <span class="token operator">=</span>
  <span class="token keyword">let</span> <span class="token punctuation">(</span><span class="token hvariable">bestAPath</span><span class="token punctuation">,</span> <span class="token hvariable">bestBPath</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token builtin">foldl</span> <span class="token hvariable">roadStep</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token hvariable">roadSystem</span>
   <span class="token keyword">in</span> <span class="token keyword">if</span> <span class="token builtin">sum</span> <span class="token punctuation">(</span><span class="token builtin">map</span> <span class="token builtin">snd</span> <span class="token hvariable">bestAPath</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token builtin">sum</span> <span class="token punctuation">(</span><span class="token builtin">map</span> <span class="token builtin">snd</span> <span class="token hvariable">bestBPath</span><span class="token punctuation">)</span>
        <span class="token keyword">then</span> <span class="token builtin">reverse</span> <span class="token hvariable">bestAPath</span>
        <span class="token keyword">else</span> <span class="token builtin">reverse</span> <span class="token hvariable">bestBPath</span>

<span class="token hvariable">main</span> <span class="token operator">::</span> <span class="token constant">IO</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token keyword">do</span>
  <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">roadStep</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">head</span> <span class="token hvariable">headthrowToLondon</span><span class="token punctuation">)</span>
  <span class="token builtin">print</span> <span class="token operator">$</span> <span class="token hvariable">optimalPath</span> <span class="token hvariable">headthrowToLondon</span>


  <span class="token hvariable">contents</span> <span class="token operator">&lt;-</span> <span class="token builtin">getContents</span>
  <span class="token keyword">let</span> <span class="token hvariable">threes</span> <span class="token operator">=</span> <span class="token hvariable">groupOf</span> <span class="token number">3</span> <span class="token punctuation">(</span><span class="token builtin">map</span> <span class="token builtin">read</span> <span class="token operator">$</span> <span class="token builtin">lines</span> <span class="token hvariable">contents</span><span class="token punctuation">)</span>
      <span class="token hvariable">roadSystem</span> <span class="token operator">=</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token operator">\\</span><span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">,</span><span class="token hvariable">b</span><span class="token punctuation">,</span><span class="token hvariable">c</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token constant">Section</span> <span class="token hvariable">a</span> <span class="token hvariable">b</span> <span class="token hvariable">c</span><span class="token punctuation">)</span> <span class="token hvariable">threes</span>
      <span class="token hvariable">path</span> <span class="token operator">=</span> <span class="token hvariable">optimalPath</span> <span class="token hvariable">roadSystem</span>
      <span class="token hvariable">pathString</span> <span class="token operator">=</span> <span class="token builtin">concat</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token punctuation">(</span><span class="token builtin">show</span> <span class="token operator">.</span> <span class="token builtin">fst</span><span class="token punctuation">)</span> <span class="token hvariable">path</span>
      <span class="token hvariable">pathPrice</span> <span class="token operator">=</span> <span class="token builtin">sum</span> <span class="token operator">$</span> <span class="token builtin">map</span> <span class="token builtin">snd</span> <span class="token hvariable">path</span>
  <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token string">&quot;The best path to take is: &quot;</span> <span class="token operator">++</span> <span class="token hvariable">pathString</span>
  <span class="token builtin">putStrLn</span> <span class="token operator">$</span> <span class="token string">&quot;The price is: &quot;</span> <span class="token operator">++</span> <span class="token builtin">show</span> <span class="token hvariable">pathPrice</span>


<span class="token hvariable">groupOf</span> <span class="token operator">::</span> <span class="token constant">Int</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token hvariable">a</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token hvariable">groupOf</span> <span class="token number">0</span> <span class="token hvariable">_</span> <span class="token operator">=</span> <span class="token builtin">undefined</span>
<span class="token hvariable">groupOf</span> <span class="token hvariable">_</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token hvariable">groupOf</span> <span class="token hvariable">n</span> <span class="token hvariable">xs</span> <span class="token operator">=</span> <span class="token builtin">take</span> <span class="token hvariable">n</span> <span class="token hvariable">xs</span> <span class="token operator">:</span> <span class="token hvariable">groupOf</span> <span class="token hvariable">n</span> <span class="token punctuation">(</span><span class="token builtin">drop</span> <span class="token hvariable">n</span> <span class="token hvariable">xs</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><h2 id="_10-functors-applicative-functors-and-monoids" tabindex="-1"><a class="header-anchor" href="#_10-functors-applicative-functors-and-monoids" aria-hidden="true">#</a> 10. Functors, Applicative Functors and Monoids</h2>`,333),d=n("\u6781\u5EA6\u5EFA\u8BAE\u53C2\u8003\u4E0B\u9762\u7684\u6587\u7AE0\uFF0C\u56FE\u6587\u89E3\u91CA\u5341\u5206\u76F4\u89C2 "),v={href:"https://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html",target:"_blank",rel:"noopener noreferrer"},g=n("Functors, Applicatives, And Monads In Pictures"),q=e(`<h3 id="_10-1-functor" tabindex="-1"><a class="header-anchor" href="#_10-1-functor" aria-hidden="true">#</a> 10.1 Functor</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token builtin">fmap</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token constant">Just</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202202022316684.png" alt=""></p><h3 id="_10-2-applicatives" tabindex="-1"><a class="header-anchor" href="#_10-2-applicatives" aria-hidden="true">#</a> 10.2 Applicatives</h3><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token constant">Just</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;*&gt;</span> <span class="token constant">Just</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token constant">Just</span> <span class="token number">5</span>

<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;*&gt;</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202202022317350.png" alt=""></p><h3 id="_10-3-monads" tabindex="-1"><a class="header-anchor" href="#_10-3-monads" aria-hidden="true">#</a> 10.3 Monads</h3><p>\u5224\u65AD\u4E00\u4E2A\u6570\u7684\u5947\u5076</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token hvariable">half</span> <span class="token hvariable">x</span> <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token builtin">even</span> <span class="token hvariable">x</span>
           <span class="token keyword">then</span> <span class="token constant">Just</span> <span class="token punctuation">(</span><span class="token hvariable">x</span> <span class="token operator">\`div\`</span> <span class="token number">2</span><span class="token punctuation">)</span>
           <span class="token keyword">else</span> <span class="token constant">Nothing</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u52A0\u5165x\u73B0\u5728\u662F\u4E00\u4E2Awrapped\u7684\u6BD4\u5982\u8BF4Maybe, \u8FD9\u91CC\u5F15\u5165\u4E00\u4E2A\u65B0\u7684\u64CD\u4F5C\u7B26 <code>&gt;&gt;=</code></p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token operator">&gt;</span> <span class="token constant">Just</span> <span class="token number">3</span> <span class="token operator">&gt;&gt;=</span> <span class="token hvariable">half</span>
<span class="token constant">Nothing</span>
<span class="token operator">&gt;</span> <span class="token constant">Just</span> <span class="token number">4</span> <span class="token operator">&gt;&gt;=</span> <span class="token hvariable">half</span>
<span class="token constant">Just</span> <span class="token number">2</span>
<span class="token operator">&gt;</span> <span class="token constant">Nothing</span> <span class="token operator">&gt;&gt;=</span> <span class="token hvariable">half</span>
<span class="token constant">Nothing</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4E4B\u6240\u4EE5\u80FD\u50CF\u4E0A\u9762\u4E00\u6837\u64CD\u4F5C\u662F\u56E0\u4E3A\uFF0CMaybe\u662F\u4E2AMonad</p><div class="language-haskell ext-haskell line-numbers-mode"><pre class="language-haskell"><code><span class="token keyword">instance</span> <span class="token constant">Monad</span> <span class="token constant">Maybe</span> <span class="token keyword">where</span>
    <span class="token constant">Nothing</span> <span class="token operator">&gt;&gt;=</span> <span class="token hvariable">func</span> <span class="token operator">=</span> <span class="token constant">Nothing</span>
    <span class="token constant">Just</span> <span class="token hvariable">val</span> <span class="token operator">&gt;&gt;=</span> <span class="token hvariable">func</span>  <span class="token operator">=</span> <span class="token hvariable">func</span> <span class="token hvariable">val</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Just <img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202202022324827.png" alt=""> Nothing <img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202202022324432.png" alt=""></p><h3 id="_10-4-\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#_10-4-\u603B\u7ED3" aria-hidden="true">#</a> 10.4 \u603B\u7ED3</h3><p><img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202202022325497.png" alt=""></p>`,16);function y(f,w){const a=t("ExternalLinkIcon");return o(),l(c,null,[u,s("p",null,[k,s("a",b,[h,p(a)])]),m,s("p",null,[d,s("a",v,[g,p(a)])]),q],64)}var S=r(i,[["render",y]]);export{S as default};
