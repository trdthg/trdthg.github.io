import{r as a,o as p,c as t,a as n,b as e,F as o,e as c,d as l}from"./app.cefaa7da.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=c(`<h1 id="go-\u8BED\u8A00" tabindex="-1"><a class="header-anchor" href="#go-\u8BED\u8A00" aria-hidden="true">#</a> go \u8BED\u8A00</h1><p>###./ \u57FA\u7840</p><h4 id="\u683C\u5F0F\u5316" tabindex="-1"><a class="header-anchor" href="#\u683C\u5F0F\u5316" aria-hidden="true">#</a> \u683C\u5F0F\u5316</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;type %T value %v \\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#\u5FAA\u73AF" aria-hidden="true">#</a> \u5FAA\u73AF</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">if</span> num <span class="token operator">:=</span> <span class="token number">10</span><span class="token punctuation">;</span> num <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">3</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

finger <span class="token operator">:=</span> <span class="token number">2</span>
<span class="token keyword">switch</span> finger <span class="token punctuation">{</span>
<span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">fallthrough</span>
<span class="token keyword">default</span><span class="token punctuation">:</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;sss&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

dd <span class="token operator">:=</span> <span class="token number">1</span>
<span class="token keyword">switch</span> <span class="token punctuation">{</span>
<span class="token keyword">case</span> dd <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">case</span> dd <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h4><p>\u6570\u7EC4\u6709\u56FA\u5B9A\u5927\u5C0F\uFF0C\u6570\u7EC4\u7684\u5927\u5C0F\u662F\u7C7B\u578B\u7684\u4E00\u90E8\u5206\uFF0C\u56E0\u6B64 [5]int \u548C [25]int \u662F\u4E0D\u540C\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span>
a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

<span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span>
b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>

veggies <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;potatoes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tomatoes&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;brinjal&quot;</span><span class="token punctuation">}</span>
fruits <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;oranges&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;apples&quot;</span><span class="token punctuation">}</span>
food <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>veggies<span class="token punctuation">,</span> fruits<span class="token operator">...</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;food:&quot;</span><span class="token punctuation">,</span> veggies<span class="token punctuation">,</span> fruits<span class="token punctuation">,</span> food<span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;food:&quot;</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>veggies<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>food<span class="token punctuation">)</span><span class="token punctuation">)</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;food:&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>veggies<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>fruits<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>food<span class="token punctuation">)</span><span class="token punctuation">)</span>
nums <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span>
<span class="token function">change</span><span class="token punctuation">(</span>nums<span class="token operator">...</span><span class="token punctuation">)</span>
<span class="token function">pln</span><span class="token punctuation">(</span>nums<span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> map</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// map \u7684\u96F6\u503C\u4E3A nil\uFF0C\u5FC5\u987B\u4F7F\u7528 make \u521D\u59CB\u5316</span>
<span class="token comment">// map \u662F \u5F15\u7528\u7C7B\u578B\uFF0C\u5F53 map \u88AB\u8D4B\u503C\u7ED9\u53E6\u4E00\u4E2A\u53D8\u91CF\u662F\u540E\uFF0C\u4ED6\u4EEC\u5171\u4EAB\u4E00\u4E2A</span>
<span class="token comment">// map \u4E0D\u80FD\u4F7F\u7528==\u5224\u65AD\uFF0C==\u53EA\u80FD\u7528\u6765\u5224\u65AD map \u662F\u5426\u4E3A nil\uFF0C\u5E94\u8BE5\u904D\u5386\u5B57\u5178\u5143\u7D20\u53BB\u6BD4\u8F83\u4E24\u4E2A\u5B57\u5178</span>
<span class="token keyword">var</span> mm <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token comment">// mm[&quot;s&quot;] = 1                    // \u56DE\u62A5\u9519\uFF0Cmap is nil</span>
<span class="token comment">// fmt.Printf(&quot;%T %v \\n&quot;, mm, mm) // \u8FD9\u91CC\u867D\u7136\u80FD\u6253\u5370\u51FA map[]\uFF0C\u4F46\u662F\u65E0\u6D4E\u4E8E\u4E8B</span>
<span class="token keyword">if</span> mm <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    mm <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    mm<span class="token punctuation">[</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%T %v \\n&quot;</span><span class="token punctuation">,</span> mm<span class="token punctuation">,</span> mm<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
mmm <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
    <span class="token string">&quot;aaa&quot;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> mmm<span class="token punctuation">[</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token function">delete</span><span class="token punctuation">(</span>mmm<span class="token punctuation">,</span> <span class="token string">&quot;aa&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;no such key&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>mmm<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> mmm <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="\u5B57\u7B26\u4E32-\u4E0E-\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32-\u4E0E-\u5207\u7247" aria-hidden="true">#</a> \u5B57\u7B26\u4E32 \u4E0E \u5207\u7247</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u5B57\u7B26\u4E32</span>
name <span class="token operator">:=</span> <span class="token string">&quot;Se\xF1or&quot;</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> name <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
name_ <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>name_<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> name_<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5F53\u5BF9\u5207\u7247\u8C03\u7528<code>append(slice, ...elems)</code>\u662F\uFF0C\u5982\u679C\u8D85\u51FA\u5207\u7247\u7684 cap\uFF0C\u5C31\u4F1A\u91CD\u65B0\u5206\u914D\u5185\u5B58\u7A7A\u95F4\uFF0C\u56E0\u6B64\u5FC5\u987B\u9700\u8981\u7528\u53D8\u91CF\u63A5\u53D7\u8FD4\u56DE\u503C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//\u5173\u4E8E\u5207\u7247</span>
<span class="token comment">// a[x] \u662F (*a)[x] \u7684\u7B80\u5199\u5F62\u5F0F</span>
<span class="token comment">// arr := [3]int{1, 2, 3}</span>
<span class="token comment">// modify(&amp;arr)</span>
<span class="token comment">// modify(arr[:]) \u8FD9\u79CD\u66F4\u5E38\u7528</span>
<span class="token comment">// arr++ \u8FD9\u79CD\u76F4\u63A5\u8FDB\u884C\u6307\u9488\u64CD\u4F5C\u4E0D\u88AB\u5141\u8BB8</span>
<span class="token keyword">func</span> <span class="token function">modify1</span><span class="token punctuation">(</span>arr <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">(</span><span class="token operator">*</span>arr<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">90</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">modify2</span><span class="token punctuation">(</span>arr <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">90</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">change</span><span class="token punctuation">(</span>elems <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> elems <span class="token punctuation">{</span>
		v <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment">// \u65E0\u6548</span>
		elems<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span> <span class="token comment">// \u6709\u6548</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">pln</span><span class="token punctuation">(</span>elems <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> elems <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;index: %v value %v\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="\u7ED3\u6784\u4F53" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53" aria-hidden="true">#</a> \u7ED3\u6784\u4F53</h3><ul><li>\u7ED3\u6784\u4F53\u662F\u503C\u7C7B\u578B\u3002\u5982\u679C\u5B83\u7684\u6BCF\u4E00\u4E2A\u5B57\u6BB5\u90FD\u662F\u53EF\u6BD4\u8F83\u7684\uFF0C\u5219\u8BE5\u7ED3\u6784\u4F53\u4E5F\u662F\u53EF\u6BD4\u8F83\u7684\u3002\u5982\u679C\u4E24\u4E2A\u7ED3\u6784\u4F53\u53D8\u91CF\u7684\u5BF9\u5E94\u5B57\u6BB5\u76F8\u7B49\uFF0C\u5219\u8FD9\u4E24\u4E2A\u53D8\u91CF\u4E5F\u662F\u76F8\u7B49\u7684\u3002</li><li>\u5982\u679C\u7ED3\u6784\u4F53\u5305\u542B\u4E0D\u53EF\u6BD4\u8F83\u7684\u5B57\u6BB5\uFF0C\u5219\u7ED3\u6784\u4F53\u53D8\u91CF\u4E5F\u4E0D\u53EF\u6BD4\u8F83\u3002</li></ul><h4 id="\u4E66\u5199" tabindex="-1"><a class="header-anchor" href="#\u4E66\u5199" aria-hidden="true">#</a> \u4E66\u5199</h4><ul><li><p>\u533F\u540D\u7ED3\u6784\u4F53: string,int \u5C31\u662F\u5B57\u6BB5\u540D\uFF0C\u5B57\u6BB5\u4E0D\u80FD\u91CD\u590D</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token builtin">string</span>
    <span class="token builtin">int</span>
<span class="token punctuation">}</span>
person <span class="token operator">:=</span> Person<span class="token punctuation">{</span><span class="token string">&quot;aa&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span><span class="token builtin">int</span><span class="token punctuation">,</span> person<span class="token punctuation">.</span><span class="token builtin">string</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>\u63D0\u5347\u5B57\u6BB5\uFF1A\u5D4C\u5165\u7684\u7ED3\u6784\u4F53\uFF0C\u53EF\u4EE5\u76F4\u63A5\u8C03\u7528\u91CC\u9762\u7684\u5B57\u6BB5</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Group <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token builtin">string</span>
    <span class="token builtin">int</span>
    Person
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>\u533F\u540D + \u63D0\u5347\uFF0C\u5411\u4E0A\u9762\u7684\u60C5\u51B5</p><p>\u533F\u540D\u7684\u7C7B\u578B\u53EF\u4EE5\u91CD\u590D\uFF0C\u4F46\u662F\u4F1A\u4EE5\u81EA\u8EAB\u7684\u4E3A\u51C6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>group <span class="token operator">:=</span> Group<span class="token punctuation">{</span><span class="token string">&quot;bb&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> person<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token builtin">string</span><span class="token punctuation">,</span> group<span class="token punctuation">.</span><span class="token builtin">string</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><h4 id="\u7ED3\u6784\u4F53-tag" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53-tag" aria-hidden="true">#</a> \u7ED3\u6784\u4F53 Tag</h4><p><strong>\u683C\u5F0F</strong> \u7A7A\u683C\u5206\u5272\u7684\u952E\u503C\u5BF9</p><p><strong>\u4F7F\u7528</strong> \u793A\u4F8B: json \u5E93\u80FD\u591F\u53CD\u5E8F\u5217\u5316\u7ED3\u6784\u4F53</p><ul><li>\u5982\u679C\u52A0\u4E0A omitepty\uFF0C\u5F53\u7ED3\u6784\u4F53\u4E3A\u7A7A\u662F\u5C31\u4F1A\u88AB\u5FFD\u7565</li><li>\u5982\u679C\u4E0D\u52A0\uFF0C\u4E3A\u7A7A\u7684\u5B57\u6BB5\u4F1A\u88AB\u89E3\u6790\u4E3A\u7A7A\u5B57\u7B26\u4E32&quot;&quot;</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name <span class="token builtin">string</span> <span class="token string">\`json:&quot;name&quot;\`</span>
	Age  <span class="token builtin">int</span>    <span class="token string">\`json:&quot;age&quot;\`</span>
	Addr <span class="token builtin">string</span> <span class="token string">\`json:&quot;addr&quot;\`</span> <span class="token comment">// ,omitempty</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    p1 <span class="token operator">:=</span> Person<span class="token punctuation">{</span>
		Name<span class="token punctuation">:</span> <span class="token string">&quot;Jack&quot;</span><span class="token punctuation">,</span>
		Age<span class="token punctuation">:</span>  <span class="token number">22</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	data1<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\n&quot;</span><span class="token punctuation">,</span> data1<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><strong>\u53EF\u4EE5\u901A\u8FC7\u53CD\u5C04\u8BFB\u53D6 tag</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u4E09\u79CD\u83B7\u53D6 field</span>
field <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">FieldByName</span><span class="token punctuation">(</span><span class="token string">&quot;Name&quot;</span><span class="token punctuation">)</span>
field <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token comment">// i \u8868\u793A\u7B2C\u51E0\u4E2A\u5B57\u6BB5</span>
field <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Elem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token comment">// i \u8868\u793A\u7B2C\u51E0\u4E2A\u5B57\u6BB5</span>

<span class="token comment">// \u83B7\u53D6 Tag</span>
tag <span class="token operator">:=</span> field<span class="token punctuation">.</span>Tag

<span class="token comment">// \u83B7\u53D6\u952E\u503C\u5BF9</span>
labelValue <span class="token operator">:=</span> tag<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span>  <span class="token comment">// \u83B7\u53D6\u4E0D\u5230\u5C31\u4F1A\u8FD4\u56DE &quot;&quot;</span>
labelValue<span class="token punctuation">,</span>ok <span class="token operator">:=</span> tag<span class="token punctuation">.</span><span class="token function">Lookup</span><span class="token punctuation">(</span><span class="token string">&quot;label&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>\u83B7\u53D6\u952E\u503C\u5BF9\uFF0C\u6709 Get \u548C Lookup \u4E24\u79CD\u65B9\u6CD5\uFF0C\u4F46\u5176\u5B9E Get \u53EA\u662F\u5BF9 Lookup \u51FD\u6570\u7684\u7B80\u5355\u5C01\u88C5\u800C\u5DF2\uFF0C\u5F53\u6CA1\u6709\u83B7\u53D6\u5230\u5BF9\u5E94 tag \u7684\u5185\u5BB9\uFF0C\u4F1A\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32\u3002<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>tag StructTag<span class="token punctuation">)</span> <span class="token function">Get</span><span class="token punctuation">(</span>key <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    v<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> tag<span class="token punctuation">.</span><span class="token function">Lookup</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> v
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li>\u7A7A Tag \u548C\u4E0D\u8BBE\u7F6E Tag \u6548\u679C\u662F\u4E00\u6837\u7684</li></ul><h3 id="\u65B9\u6CD5-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u65B9\u6CD5-\u51FD\u6570" aria-hidden="true">#</a> \u65B9\u6CD5 &amp; \u51FD\u6570</h3><h4 id="\u7ED3\u6784\u4F53\u4E0A\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7ED3\u6784\u4F53\u4E0A\u7684\u65B9\u6CD5" aria-hidden="true">#</a> \u7ED3\u6784\u4F53\u4E0A\u7684\u65B9\u6CD5</h4><ul><li>\u7ED3\u6784\u4F53\u65B9\u6CD5\uFF1A\u4E0D\u7BA1\u662F\u4E00\u4E2A\u503C\uFF0C\u8FD8\u662F\u4E00\u4E2A\u53EF\u4EE5\u89E3\u5F15\u7528\u7684\u6307\u9488\uFF0C\u8C03\u7528\u8FD9\u6837\u7684\u65B9\u6CD5\u90FD\u662F\u5408\u6CD5\u7684\u3002 \u6216\u8005\u8BF4\uFF1A\u7528<strong>\u4E00\u4E2A\u6307\u9488</strong>\u6216\u8005<strong>\u4E00\u4E2A\u53EF\u53D6\u5F97\u5730\u5740\u7684\u503C</strong>\u6765\u8C03\u7528\u90FD\u662F\u5408\u6CD5\u7684</li><li>\u533F\u540D\u5B57\u6BB5\u7684\u65B9\u6CD5\uFF1A\u5C5E\u4E8E\u7ED3\u6784\u4F53\u7684\u533F\u540D\u5B57\u6BB5\u7684\u65B9\u6CD5\u53EF\u4EE5\u88AB\u76F4\u63A5\u8C03\u7528\uFF0C\u5C31\u597D\u50CF\u8FD9\u4E9B\u65B9\u6CD5\u662F\u5C5E\u4E8E\u5B9A\u4E49\u4E86\u533F\u540D\u5B57\u6BB5\u7684\u7ED3\u6784\u4F53\u4E00\u6837\u3002</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> rectangle <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	length <span class="token builtin">int</span>
	width  <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>r <span class="token operator">*</span>rectangle<span class="token punctuation">)</span> <span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r<span class="token punctuation">.</span>length <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token comment">// func (r rectangle) area() {</span>
<span class="token comment">// 	r.length += 1</span>
<span class="token comment">// }</span>

r <span class="token operator">:=</span> rectangle<span class="token punctuation">{</span>
    length<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span>  <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

r<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token operator">&amp;</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// {12, 5}</span>
<span class="token comment">// \u5982\u679C\u6539\u4E3A \u4E0D\u5E26*\u7684\u65B9\u6CD5\uFF0C{10, 5}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u90A3\u4E48\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u6307\u9488\u63A5\u6536\u5668\uFF0C\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528\u503C\u63A5\u6536\u5668\uFF1F</p><ul><li>\u4E00\u822C\u6765\u8BF4\uFF0C\u6307\u9488\u63A5\u6536\u5668\u53EF\u4EE5\u4F7F\u7528\u5728\uFF1A\u5BF9\u65B9\u6CD5\u5185\u90E8\u7684\u63A5\u6536\u5668\u6240\u505A\u7684\u6539\u53D8\u5E94\u8BE5\u5BF9\u8C03\u7528\u8005\u53EF\u89C1\u65F6\u3002</li><li>\u6307\u9488\u63A5\u6536\u5668\u4E5F\u53EF\u4EE5\u88AB\u4F7F\u7528\u5728\u5982\u4E0B\u573A\u666F\uFF1A\u5F53\u62F7\u8D1D\u4E00\u4E2A\u7ED3\u6784\u4F53\u7684\u4EE3\u4EF7\u8FC7\u4E8E\u6602\u8D35\u65F6\u3002\u8003\u8651\u4E0B\u4E00\u4E2A\u7ED3\u6784\u4F53\u6709\u5F88\u591A\u7684\u5B57\u6BB5\u3002\u5728\u65B9\u6CD5\u5185\u4F7F\u7528\u8FD9\u4E2A\u7ED3\u6784\u4F53\u505A\u4E3A\u503C\u63A5\u6536\u5668\u9700\u8981\u62F7\u8D1D\u6574\u4E2A\u7ED3\u6784\u4F53\uFF0C\u8FD9\u662F\u5F88\u6602\u8D35\u7684\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4F7F\u7528\u6307\u9488\u63A5\u6536\u5668\uFF0C\u7ED3\u6784\u4F53\u4E0D\u4F1A\u88AB\u62F7\u8D1D\uFF0C\u53EA\u4F1A\u4F20\u9012\u4E00\u4E2A\u6307\u9488\u5230\u65B9\u6CD5\u5185\u90E8\u4F7F\u7528\u3002</li><li>\u5728\u5176\u4ED6\u7684\u6240\u6709\u60C5\u51B5\uFF0C\u503C\u63A5\u6536\u5668\u90FD\u53EF\u4EE5\u88AB\u4F7F\u7528\u3002</li></ul><h4 id="\u5B64\u513F\u89C4\u5219\u{1F436}" tabindex="-1"><a class="header-anchor" href="#\u5B64\u513F\u89C4\u5219\u{1F436}" aria-hidden="true">#</a> \u5B64\u513F\u89C4\u5219\u{1F436}</h4><p>\u4E0B\u9762\u7684\u4E0D\u5141\u8BB8\uFF0C\u56E0\u4E3A int \u7C7B\u578B\u548C\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u4E0D\u518D\u540C\u4E00\u4E2A\u5305\u91CC</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u89E3\u51B3\u65B9\u6CD5</p><ul><li>\u5B9A\u4E49\u7C7B\u578B\u522B\u540D</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> myInt <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>a myInt<span class="token punctuation">)</span> <span class="token function">add</span><span class="token punctuation">(</span>b myInt<span class="token punctuation">)</span> myInt <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>wrapper \u5305\u88C5</li></ul><h4 id="\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570" aria-hidden="true">#</a> \u51FD\u6570</h4><p><strong>\u533F\u540D\u51FD\u6570</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">func</span><span class="token punctuation">(</span>n <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token string">&quot;Gophers&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>\u81EA\u5B9A\u4E49\u51FD\u6570\u7C7B\u578B</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> add <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a add <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a <span class="token operator">+</span> b
    <span class="token punctuation">}</span>
    s <span class="token operator">:=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Sum&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>\u9AD8\u9636\u51FD\u6570</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u63A5\u53D7\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">simple</span><span class="token punctuation">(</span>a <span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD4\u56DE\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">simple</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    f <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a <span class="token operator">+</span> b
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> f
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3" aria-hidden="true">#</a> \u63A5\u53E3</h3><p>\u7C7B\u4F3C\u4E8E dyn Train</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> SalaryCalculator <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">CalculateSalary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span>
employees <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>SalaryCalculator<span class="token punctuation">{</span>pemp1<span class="token punctuation">,</span> pemp2<span class="token punctuation">,</span> cemp1<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="\u63A5\u53E3\u7684\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7684\u65AD\u8A00" aria-hidden="true">#</a> \u63A5\u53E3\u7684\u65AD\u8A00</h4><ul><li>\u7C7B\u578B\u65AD\u8A00</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">assert</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> ok<span class="token punctuation">)</span>
    <span class="token comment">// \u5982\u679C\u4E0D\u662F int \u7C7B\u578B\uFF0Cv \u5C31\u4F1A\u88AB\u8D4B\u4E3A T \u7684\u96F6\u503C</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> s <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token number">56</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    <span class="token keyword">var</span> i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token string">&quot;Steven Paul&quot;</span>
    <span class="token function">assert</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>switch type \u6CE8\u610F\uFF1A\u628A\u53D8\u91CF\u4F20\u9012\u5230\u51FD\u6570\u4E2D\u540E\u4F1A\u81EA\u52A8\u8F6C\u6362\u7C7B\u578B\u5230 interface\uFF0C\u56E0\u6B64\u8C03\u7528\u51FD\u6570\u80FD\u884C\uFF0C\u4F46\u662F\u4E0B\u9762\u76F4\u63A5 switch \u5C31\u4E0D\u884C</li><li>\u56DE\u62A5\u9519: a (variable of type int) is not an interface</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">findType</span><span class="token punctuation">(</span>i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token builtin">string</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am a string and my value is %s\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am an int and my value is %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Unknown type\\n&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token number">1</span>
	<span class="token function">findType</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>

	<span class="token keyword">switch</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token builtin">string</span><span class="token punctuation">:</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am a string and my value is %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">case</span> <span class="token builtin">int</span><span class="token punctuation">:</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;I am an int and my value is %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">default</span><span class="token punctuation">:</span>
		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Unknown type\\n&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="\u63A5\u53E3\u7C7B\u578B\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7C7B\u578B\u53D8\u91CF" aria-hidden="true">#</a> \u63A5\u53E3\u7C7B\u578B\u53D8\u91CF</h4><p>\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u662F\u63A5\u53E3\u7C7B\u578B\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u53D8\u91CF\u53EF\u4EE5\u88AB\u8D4B\u503C\u4E3A\uFF0C\u4EFB\u4F55\u5B9E\u73B0\u4E86\u63A5\u53E3\u7684\u7C7B\u578B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Describer <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
    age  <span class="token builtin">int</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> Address <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    state   <span class="token builtin">string</span>
    country <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u73B0\u5728\u8FD8\u4E0D\u80FD\u8D4B\u503C\uFF0C\u63A5\u4E0B\u6765\u4E3A\u4E24\u4E2A struct \u6211\u4EEC\u5B9E\u73B0\u63A5\u53E3</p><p>\u4E3A person \u5B9E\u73B0 describe\uFF0C\u4F7F\u7528<strong>\u503C</strong>\u63A5\u53D7\u8005\uFF0C\u4E0B\u9762\u4E24\u79CD\u8D4B\u503C\u90FD\u53EF\u4EE5\uFF0C\u4E5F\u90FD\u80FD\u8C03\u7528\u65B9\u6CD5</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>p Person<span class="token punctuation">)</span> <span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528\u503C\u63A5\u53D7\u8005\u5B9E\u73B0</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s is %d years old\\n&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>name<span class="token punctuation">,</span> p<span class="token punctuation">.</span>age<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> d1 Describer
p1 <span class="token operator">:=</span> Person<span class="token punctuation">{</span><span class="token string">&quot;Sam&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">}</span>
d1 <span class="token operator">=</span> p1
d1<span class="token punctuation">.</span><span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
p2 <span class="token operator">:=</span> Person<span class="token punctuation">{</span><span class="token string">&quot;James&quot;</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">}</span>
d1 <span class="token operator">=</span> <span class="token operator">&amp;</span>p2
d1<span class="token punctuation">.</span><span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E3A Address \u5B9E\u73B0 describer\uFF0C\u4F7F\u7528<strong>\u6307\u9488</strong>\u63A5\u53D7\u8005\uFF0C\u4E0B\u9762\u5C31\u6BD4\u8F83\u7279\u6B8A d = a\u4E0D\u80FD\u76F4\u63A5\u8D4B\u503C\uFF0C\u5982\u679C\u662F\u5728\u7ED3\u6784\u4F53\u7684\u65B9\u6CD5\u4E2D\uFF0C\u4E0B\u9762\u7684\u4E24\u79CD\u8D4B\u503C\u90FD\u662F\u53EF\u4EE5\u7684\uFF0C\u4F46\u662F\u5728\u63A5\u53E3\u4E2D\u4E0D\u884C</p><p>\u5176\u539F\u56E0\u662F\uFF1A\u5BF9\u4E8E\u4F7F\u7528\u6307\u9488\u63A5\u53D7\u8005\u7684\u65B9\u6CD5\uFF0C\u7528<strong>\u4E00\u4E2A\u6307\u9488</strong>\u6216\u8005<strong>\u4E00\u4E2A\u53EF\u53D6\u5F97\u5730\u5740\u7684\u503C</strong>\u6765\u8C03\u7528\u90FD\u662F\u5408\u6CD5\u7684\u3002\u4F46\u63A5\u53E3\u4E2D\u5B58\u50A8\u7684\u5177\u4F53\u503C\uFF08Concrete Value\uFF09\u5E76\u4E0D\u80FD\u53D6\u5230\u5730\u5740\uFF0C\u56E0\u6B64\u5728\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5BF9\u4E8E\u7F16\u8BD1\u5668\u65E0\u6CD5\u81EA\u52A8\u83B7\u53D6 a \u7684\u5730\u5740\uFF0C\u4E8E\u662F\u7A0B\u5E8F\u62A5\u9519\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>a <span class="token operator">*</span>Address<span class="token punctuation">)</span> <span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528\u6307\u9488\u63A5\u53D7\u8005\u5B9E\u73B0</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;State %s Country %s&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>state<span class="token punctuation">,</span> a<span class="token punctuation">.</span>country<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> d Describer
a <span class="token operator">:=</span> Address<span class="token punctuation">{</span><span class="token string">&quot;Washington&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;USA&quot;</span><span class="token punctuation">}</span>

<span class="token comment">//d = a  // \u8FD9\u662F\u4E0D\u5408\u6CD5\u7684\uFF0C\u4F1A\u62A5\u9519: Address does not implement Describer</span>

d <span class="token operator">=</span> <span class="token operator">&amp;</span>a <span class="token comment">// \u8FD9\u662F\u5408\u6CD5\u7684\uFF0CAddress \u7C7B\u578B\u7684\u6307\u9488\u5B9E\u73B0\u4E86 Describer \u63A5\u53E3</span>
d<span class="token punctuation">.</span><span class="token function">Describe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="\u63A5\u53E3\u53EF\u4EE5\u5D4C\u5957" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u53EF\u4EE5\u5D4C\u5957" aria-hidden="true">#</a> \u63A5\u53E3\u53EF\u4EE5\u5D4C\u5957</h4><p>\u7C7B\u4F3C\u4E8E\u533F\u540D\u7ED3\u6784\u4F53\u7684\u5D4C\u5957 \u4E00\u4E2A\u7ED3\u6784\u4F53\u5B9E\u73B0\u4E86 A\uFF0CB\uFF0C\u90A3\u5C31\u8BF4\u5B83\u4E5F\u5B9E\u73B0\u4E86 C</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> A <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> B <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> C <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    A
    B
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u63A5\u53E3\u7684\u96F6\u503C" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7684\u96F6\u503C" aria-hidden="true">#</a> \u63A5\u53E3\u7684\u96F6\u503C</h4><p>\u63A5\u53E3\u7684\u96F6\u503C\u662F nil\uFF0C\u540C\u65F6\u5176\u5E95\u5C42\u503C\uFF08Underlying Value\uFF09\u548C\u5177\u4F53\u7C7B\u578B\uFF08Concrete Type\uFF09\u90FD\u4E3A nil\u3002\u8C03\u7528\u65B9\u6CD5\u4F1A panic</p><h4 id="\u63A5\u53E3\u7684\u5751" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u7684\u5751" aria-hidden="true">#</a> \u63A5\u53E3\u7684\u5751</h4><ul><li>\u4E0D\u80FD\u628A interface \u8D4B\u503C\u4E3A\u522B\u7684\u7C7B\u578B<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E a \u53D8\u91CF\uFF0C\u7C7B\u578B int\uFF0C\u521D\u59CB\u503C\u4E3A 1</span>
    <span class="token keyword">var</span> a <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span>

    <span class="token comment">// \u58F0\u660E i \u53D8\u91CF\uFF0C\u7C7B\u578B\u4E3A interface{}, \u521D\u59CB\u503C\u4E3A a\uFF0C\u6B64\u65F6 i \u7684\u503C\u53D8\u4E3A 1</span>
    <span class="token keyword">var</span> i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> a

    <span class="token comment">// \u58F0\u660E b \u53D8\u91CF\uFF0C\u5C1D\u8BD5\u8D4B\u503C i</span>
    <span class="token keyword">var</span> b <span class="token builtin">int</span> <span class="token operator">=</span> i
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li>\u5207\u7247\u4E5F\u4E0D\u80FD\u518D\u5206<div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sli <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">}</span>

    <span class="token keyword">var</span> i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    i <span class="token operator">=</span> sli

    g <span class="token operator">:=</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li></ul><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel" aria-hidden="true">#</a> channel</h3><h4 id="\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#\u7279\u6027" aria-hidden="true">#</a> \u7279\u6027</h4><ul><li>go \u7684 channel \u9ED8\u8BA4\u662F\u53CC\u5411\u7684\uFF0C\u65E2\u53EF\u4EE5 send\uFF0C\u4E5F\u53EF\u4EE5 recv</li><li>channel \u5FC5\u987B\u6709\u53D1\u9001\u7AEF\u548C\u63A5\u6536\u7AEF\uFF0C\u5426\u5219\u5C31 panic</li><li>make(chan int, n) n \u8868\u793A\u7F13\u51B2\u533A\u5927\u5C0F\uFF0C\u53EF\u4EE5\u7701\u7565\uFF0C\u9ED8\u8BA4\u4E3A 0 <ul><li>\u800C\u5BF9\u4E8E\u65E0\u7F13\u51B2 channel\uFF0C\u63A5\u53D7\u548C\u53D1\u9001\u90FD\u8981\u5728\u4E0D\u540C\u643A\u7A0B\u4E4B\u95F4\uFF0C\u4E0D\u8BA9\u4E24\u4E2A\u4EBA\u4E92\u76F8\u963B\u585E</li><li>\u5BF9\u4E8E\u6709\u7F13\u51B2\u533A channel\uFF0C\u5728\u7F13\u51B2\u533A\u5927\u5C0F\u5185\uFF0C\u4E24\u4E2A\u4E0D\u4F1A\u4E92\u76F8\u963B\u585E\uFF0C\u53EF\u4EE5\u5728\u540C\u4E00\u534F\u7A0B\u5185</li><li>\u5982\u679C\u8D85\u8FC7\u7F13\u51B2\u533A\u5927\u5C0F\uFF0C\u5C31\u4F1A panic\uFF0C\u6240\u4EE5\u8D85\u8FC7\u7F13\u51B2\u533A\u5927\u5C0F\u7684\u8FD8\u662F\u5FC5\u987B\u5728\u5176\u4ED6\u7684\u534F\u7A0B\u4E2D\u5904\u7406</li></ul></li><li>\u7F13\u51B2\u533A\u4E5F\u6709 len \u548C cap \u7684\u6982\u5FF5</li><li>\u5BF9\u4E8E rust\uFF0C\u5982\u679C\u8D85\u51FA\u7F13\u51B2\u533A\u5927\u5C0F send \u5C31\u4F1A\u8FD4\u56DE Error</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">sendData</span><span class="token punctuation">(</span>sendch <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sendch <span class="token operator">&lt;-</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cha1 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">sendData</span><span class="token punctuation">(</span>cha1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>cha1<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="\u5355\u5411-channel" tabindex="-1"><a class="header-anchor" href="#\u5355\u5411-channel" aria-hidden="true">#</a> \u5355\u5411 channel</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u58F0\u660E\u53C2\u6570\u662F\u4E00\u4E2A\u53EA\u80FD\u53D1\u9001\u7684 ch</span>
<span class="token keyword">func</span> <span class="token function">sendData</span><span class="token punctuation">(</span>sendch <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sendch <span class="token operator">&lt;-</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EA\u80FD\u53D1\u9001\u7684 channel\uFF0C\u4E0B\u9762\u4F7F\u7528\u5B83\u53BB\u63A5\u53D7\u5C31\u4F1A panic</span>
    <span class="token comment">// \u5982\u679C\u58F0\u660E\u4E3A chan int\uFF0C\u4E0B\u9762\u7684\u63A5\u53D7\u4E0D\u4F1A panic\uFF0C\u5728 sendData \u4F1A\u88AB\u8F6C\u6362\u4E3A\u53EA\u80FD\u53D1\u9001\u7684 channel\uFF0C\u800C main \u4E2D\u7684\u4ECD\u7136\u662F\u53CC\u5411\u7684</span>
    sendch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">sendData</span><span class="token punctuation">(</span>sendch<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>sendch<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="\u5173\u95ED-channel" tabindex="-1"><a class="header-anchor" href="#\u5173\u95ED-channel" aria-hidden="true">#</a> \u5173\u95ED channel</h4><p>\u4E0D\u80FD\u4E00\u76F4 send \u6216\u8005\u4E00\u76F4 recv\uFF0C\u5904\u7406\u5B8C\u53CA\u65F6\u628A\u4E00\u7AEF close \u4E86</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">producer</span><span class="token punctuation">(</span>chnl <span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        chnl <span class="token operator">&lt;-</span> i
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53D1\u9001\u5B8C\u6210\u540E\uFF0C\u4F7F\u7528 send \u51FD\u6570\u663E\u5F0F\u5173\u95ED channel</span>
    <span class="token function">close</span><span class="token punctuation">(</span>chnl<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">go</span> <span class="token function">producer</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u901A\u8FC7 ok \u5224\u65AD channel \u662F\u5426\u5173\u95ED</span>
        v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> <span class="token operator">&lt;-</span>ch
        <span class="token keyword">if</span> ok <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Received &quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">,</span> ok<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="waitgroup" tabindex="-1"><a class="header-anchor" href="#waitgroup" aria-hidden="true">#</a> waitGroup</h4><p>\u7B49\u5F85\u4E00\u7FA4\u534F\u7A0B\u7ED3\u675F</p><p>\u6CE8\u610F\u4E00\u5B9A\u8981\u4F7F\u7528\u6307\u9488</p><h4 id="\u5DE5\u4F5C\u6C60" tabindex="-1"><a class="header-anchor" href="#\u5DE5\u4F5C\u6C60" aria-hidden="true">#</a> \u5DE5\u4F5C\u6C60</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u6A21\u62DF\u8017\u65F6\u7684\u8BA1\u7B97</span>
<span class="token keyword">func</span> <span class="token function">calculate</span><span class="token punctuation">(</span>number <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token keyword">return</span> number
<span class="token punctuation">}</span>

<span class="token comment">// \u751F\u4EA7\u8005\uFF0C\u5206\u53D1\u5DE5\u4F5C</span>
<span class="token keyword">func</span> <span class="token function">produceJobs</span><span class="token punctuation">(</span>jobs <span class="token keyword">chan</span><span class="token operator">&lt;-</span> Job<span class="token punctuation">,</span> n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token comment">// fmt.Printf(&quot;sending %d \\n&quot;, i)</span>
		jobs <span class="token operator">&lt;-</span> Job<span class="token punctuation">{</span>
			id<span class="token punctuation">:</span>     i<span class="token punctuation">,</span>
			number<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">close</span><span class="token punctuation">(</span>jobs<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6D88\u8D39\u8005\uFF0C\u63A5\u53D7\u5DE5\u4F5C\uFF0C\u5E72\u5B8C\u6D3B\u5C31\u901A\u77E5\u4EE5\u4E0B\u7BA1\u7406\u5458</span>
<span class="token keyword">func</span> <span class="token function">consumeFunc</span><span class="token punctuation">(</span>jobs <span class="token operator">&lt;-</span><span class="token keyword">chan</span> Job<span class="token punctuation">,</span> results <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">,</span> wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u6BCF\u4E2A worker \u90FD\u5728\u62A2\u5DE5\u4F5C\uFF0C\u771F\u79EF\u6781\u554A</span>
	<span class="token keyword">for</span> job <span class="token operator">:=</span> <span class="token keyword">range</span> jobs <span class="token punctuation">{</span>
		<span class="token comment">// fmt.Printf(&quot;id: %d\\n&quot;, job.id)</span>
		results <span class="token operator">&lt;-</span> <span class="token function">calculate</span><span class="token punctuation">(</span>job<span class="token punctuation">.</span>number<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7BA1\u7406\u5458\uFF0C\u7B49\u5F85\u6240\u6709\u5DE5\u4EBA\u90FD\u901A\u77E5\u4ED6\uFF0C\u6BCF\u6B21\u88AB\u901A\u77E5\uFF0C\u8BA1\u6570\u5668\u5C31\u51CF 1\uFF0C\u5F53\u8BA1\u6570\u5668\u4E3A 0 \u662F\u5C31\u4E0D\u518D\u963B\u585E</span>
<span class="token keyword">func</span> <span class="token function">consumeJobs</span><span class="token punctuation">(</span>jobs <span class="token operator">&lt;-</span><span class="token keyword">chan</span> Job<span class="token punctuation">,</span> results <span class="token keyword">chan</span><span class="token operator">&lt;-</span> <span class="token builtin">int</span><span class="token punctuation">,</span> worker_number <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u7B49\u5F85\u4E00\u6279 goroutine \u7ED3\u675F\uFF0C\u7C7B\u4F3C\u4E8E join</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	<span class="token comment">// \u4E3A\u6BCF\u4E00\u4E2A\u5DE5\u4F5C\u5F00\u542F\u4E00\u4E2A goroutine</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> worker_number<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token function">consumeFunc</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> results<span class="token punctuation">,</span> <span class="token operator">&amp;</span>wg<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u963B\u585E\u5F53\u524D goroutine \u76F4\u5230\u8BA1\u6570\u5668\u5F52 0\uFF0C\u6240\u6709 job \u90FD\u5E94\u8BE5\u505A\u5B8C\u4E86\uFF0Cresult \u5E94\u8BE5\u4E5F\u90FD\u53D1\u9001\u51FA\u53BB\u4E86</span>
	<span class="token function">close</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Job <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	id     <span class="token builtin">int</span>
	number <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	startTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	jobs <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> Job<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
	results <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

	<span class="token comment">// \u53D1\u9001 work, jobs send</span>
	<span class="token keyword">go</span> <span class="token function">produceJobs</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
	<span class="token comment">// jobs recv | results send</span>
	<span class="token keyword">go</span> <span class="token function">consumeJobs</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> results<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
	<span class="token comment">// results recv</span>
	a <span class="token operator">:=</span> <span class="token number">0</span>
	<span class="token keyword">for</span> res <span class="token operator">:=</span> <span class="token keyword">range</span> results <span class="token punctuation">{</span>
		a <span class="token operator">+=</span> res
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token string">&quot;res: &quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>

	endTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	diff <span class="token operator">:=</span> endTime<span class="token punctuation">.</span><span class="token function">Sub</span><span class="token punctuation">(</span>startTime<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;total time taken &quot;</span><span class="token punctuation">,</span> diff<span class="token punctuation">.</span><span class="token function">Seconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;seconds&quot;</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><h4 id="select" tabindex="-1"><a class="header-anchor" href="#select" aria-hidden="true">#</a> select</h4><p>\u7528\u6CD5\u633A\u666E\u901A</p><ul><li>channel \u4E0D\u9650\u5236 send/recv\uFF0C\u53EA\u8981\u662F\u5BF9 channel \u7684\u64CD\u4F5C\u5C31\u884C</li><li>\u5982\u679C\u6709\u591A\u4E2A channel \u51C6\u5907\u5C31\u7EEA\uFF0C\u5C31\u968F\u673A\u9009\u62E9\u4E00\u4E2A\u6267\u884C</li><li>\u6B7B\u9501\u4E0E\u9ED8\u8BA4\u60C5\u51B5\uFF1A\u5982\u679C select \u4E00\u76F4\u6CA1\u6709\u547D\u4E2D\uFF0C\u5C31\u4F1A\u89E6\u53D1\u6B7B\u9501\uFF0C\u5BFC\u81F4 panic\uFF0C\u7A7A select \u4E00\u6837\u4E5F\u4F1A\u5BFC\u81F4 panic</li><li>\u53EF\u4EE5\u51C6\u5907\u4E00\u4E2A timeout chan\uFF0C\u5230\u65F6\u95F4\u5C31 send \u4F5C\u4E3A\u8D85\u65F6\u4FE1\u53F7</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ch <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">string</span><span class="token punctuation">)</span>
    <span class="token keyword">select</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token operator">&lt;-</span>ch<span class="token punctuation">:</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;default case executed&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="\u5E76\u53D1" tabindex="-1"><a class="header-anchor" href="#\u5E76\u53D1" aria-hidden="true">#</a> \u5E76\u53D1</h3><p>goroutine \u4E0D\u80FD\u4FDD\u8BC1\u5E76\u53D1\u5B89\u5168\uFF0C\u4E0B\u9762\u662F\u4E00\u4E9B\u89E3\u51B3\u65B9\u6CD5</p><ul><li>\u603B\u4F53\u8BF4\u6765\uFF0C\u5F53 Go \u534F\u7A0B\u9700\u8981\u4E0E\u5176\u4ED6\u534F\u7A0B\u901A\u4FE1\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 channel\u3002\u800C\u5F53\u53EA\u5141\u8BB8\u4E00\u4E2A\u534F\u7A0B\u8BBF\u95EE\u4E34\u754C\u533A\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528 Mutex\u3002</li><li>\u5C31\u6211\u4EEC\u4E0A\u9762\u89E3\u51B3\u7684\u95EE\u9898\u800C\u8A00\uFF0C\u6211\u66F4\u503E\u5411\u4E8E\u4F7F\u7528 Mutex\uFF0C\u56E0\u4E3A\u8BE5\u95EE\u9898\u5E76\u4E0D\u9700\u8981\u534F\u7A0B\u95F4\u7684\u901A\u4FE1\u3002\u6240\u4EE5 Mutex \u662F\u5F88\u81EA\u7136\u7684\u9009\u62E9\u3002</li></ul><h4 id="mutex" tabindex="-1"><a class="header-anchor" href="#mutex" aria-hidden="true">#</a> mutex</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">aa</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">,</span> m <span class="token operator">*</span>sync<span class="token punctuation">.</span>Mutex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	m<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	x <span class="token operator">+=</span> <span class="token number">1</span>
	m<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
    <span class="token keyword">var</span> m sync<span class="token punctuation">.</span>Mutex
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">go</span> <span class="token function">aa</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="channel-1" tabindex="-1"><a class="header-anchor" href="#channel-1" aria-hidden="true">#</a> channel</h4><p>\u4F7F\u7528\u7F13\u51B2\u4E3A 1 \u7684 channel \u5B9E\u73B0</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">aa</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">,</span> ch <span class="token keyword">chan</span> <span class="token builtin">bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	ch <span class="token operator">&lt;-</span> <span class="token boolean">true</span>
	x <span class="token operator">+=</span> <span class="token number">1</span>
	<span class="token operator">&lt;-</span>ch
	wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	startTime <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">var</span> wg sync<span class="token punctuation">.</span>WaitGroup
	<span class="token keyword">var</span> ch <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token builtin">bool</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		wg<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token function">aa</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>wg<span class="token punctuation">,</span> ch<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	wg<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="defer" tabindex="-1"><a class="header-anchor" href="#defer" aria-hidden="true">#</a> defer</h3><h4 id="\u5B9E\u53C2\u6C42\u503C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u53C2\u6C42\u503C" aria-hidden="true">#</a> \u5B9E\u53C2\u6C42\u503C</h4><p>\u5F53\u6267\u884C defer \u8BED\u53E5\u7684\u65F6\u5019\uFF0C\u5C31\u4F1A\u5BF9\u5EF6\u8FDF\u51FD\u6570\u7684\u5B9E\u53C2\u8FDB\u884C\u6C42\u503C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">printA</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;value of a in deferred function&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token number">5</span>
    <span class="token keyword">defer</span> <span class="token function">printA</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token number">10</span>
<span class="token punctuation">}</span>
<span class="token comment">// value of a in deferred function 5</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="defer-\u6808" tabindex="-1"><a class="header-anchor" href="#defer-\u6808" aria-hidden="true">#</a> defer \u6808</h4><p>\u5F53\u4E00\u4E2A\u51FD\u6570\u5185\u591A\u6B21\u8C03\u7528 defer \u65F6\uFF0CGo \u4F1A\u628A defer \u8C03\u7528\u653E\u5165\u5230\u4E00\u4E2A\u6808\u4E2D\uFF0C\u968F\u540E\u6309\u7167\u540E\u8FDB\u5148\u51FA\uFF08Last In First Out, LIFO\uFF09\u7684\u987A\u5E8F\u6267\u884C\u3002</p><p>\u4E0B\u9762\u7684\u7A0B\u5E8F\uFF0C\u4F7F\u7528 defer \u6808\uFF0C\u5C06\u4E00\u4E2A\u5B57\u7B26\u4E32\u9006\u5E8F\u6253\u5370\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    name <span class="token operator">:=</span> <span class="token string">&quot;Naveen&quot;</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%c&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5012\u53D9\u8F93\u51FA: neevaN</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="defer-\u5728-return-\u540E\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#defer-\u5728-return-\u540E\u6267\u884C" aria-hidden="true">#</a> defer \u5728 return \u540E\u6267\u884C</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">var</span> name <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;go&quot;</span>

<span class="token keyword">func</span> <span class="token function">myfunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        name <span class="token operator">=</span> <span class="token string">&quot;python&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;myfunc \u51FD\u6570\u91CC\u7684 name\uFF1A%s\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token comment">// go</span>
    <span class="token keyword">return</span> name
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    myname <span class="token operator">:=</span> <span class="token function">myfunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;main \u51FD\u6570\u91CC\u7684 name: %s\\n&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token comment">// python</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;main \u51FD\u6570\u91CC\u7684 myname: &quot;</span><span class="token punctuation">,</span> myname<span class="token punctuation">)</span> <span class="token comment">// go</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4F7F\u7528\u573A\u666F</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>r rect<span class="token punctuation">)</span> <span class="token function">area</span><span class="token punctuation">(</span>wg <span class="token operator">*</span>sync<span class="token punctuation">.</span>WaitGroup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// defer wg.Done() // \u4EE3\u66FF\u4E0B\u9762\u7684 3 \u4E2A return \u4E2D\u7684 wg.Done()</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rect %v&#39;s length should be greater than zero\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>width <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rect %v&#39;s width should be greater than zero\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    area <span class="token operator">:=</span> r<span class="token punctuation">.</span>length <span class="token operator">*</span> r<span class="token punctuation">.</span>width
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;rect %v&#39;s area %d\\n&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> area<span class="token punctuation">)</span>
    wg<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u9519\u8BEF\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a> \u9519\u8BEF\u5904\u7406</h3><h4 id="\u9519\u8BEF\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u63A5\u53E3" aria-hidden="true">#</a> \u9519\u8BEF\u63A5\u53E3</h4><p>\u5728\u6807\u51C6\u5E93\u91CC\u7684\u5B9A\u4E49</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">{</span>
    <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>open \u51FD\u6570\u7684\u8BBE\u8BA1</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> PathError <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Op   <span class="token builtin">string</span>
    Path <span class="token builtin">string</span>
    Err  <span class="token builtin">error</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>PathError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> e<span class="token punctuation">.</span>Op <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Path <span class="token operator">+</span> <span class="token string">&quot;: &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>Err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="\u9519\u8BEF\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u9519\u8BEF\u7C7B\u578B\u65AD\u8A00</h4><p>\u901A\u8FC7\u7C7B\u578B\u65AD\u8A00\u62FF\u5230\u9519\u8BEF\u4FE1\u606F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;/test.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>os<span class="token punctuation">.</span>PathError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;File at path&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> <span class="token string">&quot;failed to open&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;opened successfully&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="\u5B50\u9519\u8BEF\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B50\u9519\u8BEF\u7C7B\u578B" aria-hidden="true">#</a> \u5B50\u9519\u8BEF\u7C7B\u578B</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> DNSError <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>DNSError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>DNSError<span class="token punctuation">)</span> <span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>e <span class="token operator">*</span>DNSError<span class="token punctuation">)</span> <span class="token function">Temporary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    addr<span class="token punctuation">,</span> err <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">LookupHost</span><span class="token punctuation">(</span><span class="token string">&quot;golangbot123.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>net<span class="token punctuation">.</span>DNSError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        <span class="token keyword">if</span> err<span class="token punctuation">.</span><span class="token function">Timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;operation timed out&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> err<span class="token punctuation">.</span><span class="token function">Temporary</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;temporary error&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;generic error: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="panic-\u548C-recover" tabindex="-1"><a class="header-anchor" href="#panic-\u548C-recover" aria-hidden="true">#</a> panic \u548C recover</h4><p>\u4E0B\u9762\u4F7F\u7528 recover \u53BB\u6062\u590D panic</p><ul><li>\u6CE8\u610F: Go \u534F\u7A0B\u4E2D\u8C03\u7528 recover \u624D\u7BA1\u7528\u3002recover \u4E0D\u80FD\u6062\u590D\u4E00\u4E2A\u4E0D\u540C\u534F\u7A0B\u7684 panic\u3002</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">recoverName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> r<span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;recovered from &quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">fullName</span><span class="token punctuation">(</span>firstName <span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">,</span> lastName <span class="token operator">*</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token function">recoverName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> firstName <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;runtime error: first name cannot be nil&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> lastName <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;runtime error: last name cannot be nil&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%s %s\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">*</span>firstName<span class="token punctuation">,</span> <span class="token operator">*</span>lastName<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;returned normally from fullName&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="\u6062\u590D\u540E\u83B7\u5F97\u5806\u6808" tabindex="-1"><a class="header-anchor" href="#\u6062\u590D\u540E\u83B7\u5F97\u5806\u6808" aria-hidden="true">#</a> \u6062\u590D\u540E\u83B7\u5F97\u5806\u6808</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;runtime/debug&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> r <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> r <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Recovered&quot;</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span>
        debug<span class="token punctuation">.</span><span class="token function">PrintStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u53CD\u5C04" tabindex="-1"><a class="header-anchor" href="#\u53CD\u5C04" aria-hidden="true">#</a> \u53CD\u5C04</h3><p><strong>\u57FA\u7840</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> order <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ordId      <span class="token builtin">int</span>
	customerId <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">play</span><span class="token punctuation">(</span>q <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	t <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
	k <span class="token operator">:=</span> t<span class="token punctuation">.</span><span class="token function">Kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	v <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
	fieldsNum <span class="token operator">:=</span> v<span class="token punctuation">.</span><span class="token function">NumField</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Type: &quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token string">&quot;Kind: &quot;</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">,</span> <span class="token string">&quot;FieldNum: &quot;</span><span class="token punctuation">,</span> fieldsNum<span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> fieldsNum<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>Name<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">createQuery</span><span class="token punctuation">(</span>q <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u62FF\u5230\u7C7B\u578B</span>
    <span class="token keyword">if</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> reflect<span class="token punctuation">.</span>Struct <span class="token punctuation">{</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
    <span class="token comment">// \u62FF\u5230\u7C7B\u578B\u540D\u79F0</span>
	t <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	query <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;insert into %s values(&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
    <span class="token comment">// \u62FF\u5230\u503C</span>
	v <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>
    <span class="token comment">// \u62FF\u5230\u5B57\u6BB5\u6570\u91CF</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> v<span class="token punctuation">.</span><span class="token function">NumField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u62FF\u5230\u5B57\u6BB5\u7C7B\u578B\uFF0C\u5B57\u6BB5\u540D\u79F0\uFF0C\u5B57\u6BB5\u503C</span>
		<span class="token keyword">switch</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Kind</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">case</span> reflect<span class="token punctuation">.</span>Int<span class="token punctuation">:</span>
			<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s%d&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s, %d&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Int</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token keyword">case</span> reflect<span class="token punctuation">.</span>String<span class="token punctuation">:</span>
			<span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s\\&quot;%s\\&quot;&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s, \\&quot;%s\\&quot;&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">Field</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token keyword">default</span><span class="token punctuation">:</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;unsupported field type&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	query <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s)&quot;</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	o <span class="token operator">:=</span> order<span class="token punctuation">{</span>
		ordId<span class="token punctuation">:</span>      <span class="token number">456</span><span class="token punctuation">,</span>
		customerId<span class="token punctuation">:</span> <span class="token number">56</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	<span class="token function">play</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
	<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----------------------------------------&quot;</span><span class="token punctuation">)</span>
	<span class="token function">createQuery</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>

	<span class="token keyword">var</span> a <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span>
	b <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>reflect<span class="token punctuation">.</span><span class="token function">TypeOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p><strong>\u4FEE\u6539\u7C7B\u578B</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> age <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token number">25</span>
    v <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span>
    <span class="token comment">// \u4ECE\u53CD\u5C04\u5BF9\u8C61\u5230\u63A5\u53E3\u53D8\u91CF</span>
    i <span class="token operator">:=</span> v<span class="token punctuation">.</span><span class="token function">Interface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>\u53EF\u5199\u6027</strong></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> name <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Go \u7F16\u7A0B\u65F6\u5149&quot;</span>
    v1 <span class="token operator">:=</span> reflect<span class="token punctuation">.</span><span class="token function">ValueOf</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>name<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v1 \u53EF\u5199\u6027\u4E3A:&quot;</span><span class="token punctuation">,</span> v1<span class="token punctuation">.</span><span class="token function">CanSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    v2 <span class="token operator">:=</span> v1<span class="token punctuation">.</span><span class="token function">Elem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;v2 \u53EF\u5199\u6027\u4E3A:&quot;</span><span class="token punctuation">,</span> v2<span class="token punctuation">.</span><span class="token function">CanSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="\u8FDB\u9636" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u9636" aria-hidden="true">#</a> \u8FDB\u9636</h2><h3 id="\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u53D8\u91CF" aria-hidden="true">#</a> \u53D8\u91CF</h3><h4 id="make" tabindex="-1"><a class="header-anchor" href="#make" aria-hidden="true">#</a> make</h4><p>make \u51FD\u6570\u521B\u5EFA slice\u3001map \u6216 chan \u7C7B\u578B\u53D8\u91CF</p><p><strong>\u548C new \u7684\u533A\u522B</strong></p><ul><li><p>new\uFF1A\u4E3A\u6240\u6709\u7684\u7C7B\u578B\u5206\u914D\u5185\u5B58\uFF0C\u5E76\u521D\u59CB\u5316\u4E3A\u96F6\u503C\uFF0C\u8FD4\u56DE\u6307\u9488\u3002</p></li><li><p>make\uFF1A\u53EA\u80FD\u4E3A slice\uFF0Cmap\uFF0Cchan \u5206\u914D\u5185\u5B58\uFF0C\u5E76\u521D\u59CB\u5316\uFF0C\u8FD4\u56DE\u7684\u662F\u7C7B\u578B (\u6307\u9488)\u3002\u56E0\u4E3A\u8FD9\u4E09\u4E2A\u672C\u8EAB\u5C31\u662F\u5F15\u7528\u7C7B\u578B</p></li><li><p>slice\u3001map \u548C chan \u662F Go \u4E2D\u7684\u5F15\u7528\u7C7B\u578B\uFF0C\u5B83\u4EEC\u7684\u521B\u5EFA\u548C\u521D\u59CB\u5316\uFF0C\u4E00\u822C\u4F7F\u7528 make\u3002\u7279\u522B\u7684\uFF0Cchan \u53EA\u80FD\u7528 make\u3002slice \u548C map \u8FD8\u53EF\u4EE5\u7B80\u5355\u7684\u65B9\u5F0F\uFF1A</p></li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span>
m <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="\u533F\u540D\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u53D8\u91CF" aria-hidden="true">#</a> \u533F\u540D\u53D8\u91CF</h4><ul><li>\u4E0D\u5206\u914D\u5185\u5B58\uFF0C\u4E0D\u5360\u7528\u5185\u5B58\u7A7A\u95F4</li></ul><h4 id="\u6D6E\u70B9\u6570" tabindex="-1"><a class="header-anchor" href="#\u6D6E\u70B9\u6570" aria-hidden="true">#</a> \u6D6E\u70B9\u6570</h4><p>\u6D6E\u70B9\u6570\u8F6C\u4E8C\u8FDB\u5236\u65F6\u4E22\u5931\u4E86\u7CBE\u5EA6\uFF0C\u8BA1\u7B97\u5B8C\u518D\u8F6C\u56DE\u5341\u8FDB\u5236\u65F6\u548C\u7406\u8BBA\u7ED3\u679C\u4E0D\u540C\u3002</p><ul><li>f32: 1 8</li><li>f64: 1 11</li></ul><h4 id="\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u4F5C\u7528\u57DF</h4><p><strong>\u5206\u7C7B</strong></p><ul><li>\u5185\u7F6E\u4F5C\u7528\u57DF\uFF1A\u4E0D\u9700\u8981\u81EA\u5DF1\u58F0\u660E\uFF0C\u6240\u6709\u7684\u5173\u952E\u5B57\u548C\u5185\u7F6E\u7C7B\u578B\u3001\u51FD\u6570\u90FD\u62E5\u6709\u5168\u5C40\u4F5C\u7528\u57DF</li><li>\u5305\u7EA7\u4F5C\u7528\u57DF\uFF1A\u5FC5\u9808\u51FD\u6570\u5916\u58F0\u660E\uFF0C\u5728\u8BE5\u5305\u5185\u7684\u6240\u6709\u6587\u4EF6\u90FD\u53EF\u4EE5\u8BBF\u95EE</li><li>\u6587\u4EF6\u7EA7\u4F5C\u7528\u57DF\uFF1A\u4E0D\u9700\u8981\u58F0\u660E\uFF0C\u5BFC\u5165\u5373\u53EF\u3002\u4E00\u4E2A\u6587\u4EF6\u4E2D\u901A\u8FC7 import \u5BFC\u5165\u7684\u5305\u540D\uFF0C\u53EA\u5728\u8BE5\u6587\u4EF6\u5185\u53EF\u7528</li><li>\u5C40\u90E8\u4F5C\u7528\u57DF\uFF1A\u5728\u81EA\u5DF1\u7684\u8BED\u53E5\u5757\u5185\u58F0\u660E\uFF0C\u5305\u62EC\u51FD\u6570\uFF0Cfor\u3001if \u7B49\u8BED\u53E5\u5757\uFF0C\u6216\u81EA\u5B9A\u4E49\u7684 {} \u8BED\u53E5\u5757\u5F62\u6210\u7684\u4F5C\u7528\u57DF\uFF0C\u53EA\u5728\u81EA\u5DF1\u7684\u5C40\u90E8\u4F5C\u7528\u57DF\u5185\u53EF\u7528</li></ul><p><strong>\u4F5C\u7528\u89C4\u5219</strong></p><ul><li>\u4F4E\u5C42\u4F5C\u7528\u57DF\uFF0C\u53EF\u4EE5\u8BBF\u95EE\u9AD8\u5C42\u4F5C\u7528\u57DF</li><li>\u540C\u4E00\u5C42\u7EA7\u7684\u4F5C\u7528\u57DF\uFF0C\u662F\u76F8\u4E92\u9694\u79BB\u7684</li><li>\u4F4E\u5C42\u4F5C\u7528\u57DF\u91CC\u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u4F1A\u8986\u76D6\u9AD8\u5C42\u4F5C\u7528\u57DF\u91CC\u58F0\u660E\u7684\u53D8\u91CF</li></ul><p><strong>\u52A8\u6001\u4F5C\u7528\u57DF</strong></p><p>\u4E0B\u9762\u7684 bash \u811A\u672C\u4E2D\uFF0Cfunc02 \u5728 func01 \u5185\u90E8\u53EF\u4EE5\u8BBF\u95EE\u5230 value\uFF0C\u4F46\u5728 func01 \u5916\u9762\u4E0D\u80FD\uFF0C\u5C5E\u4E8E\u52A8\u6001\u4F5C\u7528\u57DF</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token function-name function">func01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">local</span> <span class="token assign-left variable">value</span><span class="token operator">=</span><span class="token number">1</span>
    func02
<span class="token punctuation">}</span>
<span class="token function-name function">func02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;func02 sees value as <span class="token variable">\${value}</span>&quot;</span>
<span class="token punctuation">}</span>

<span class="token comment"># \u6267\u884C\u51FD\u6570</span>
func01
func02
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="\u534F\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B\u6C60" aria-hidden="true">#</a> \u534F\u7A0B\u6C60</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> Pool <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	work <span class="token keyword">chan</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// \u4EFB\u52A1</span>
	sem  <span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u4F7F\u7528\u7F13\u51B2\u533A\u5927\u5C0F\u63A7\u5236\u5DE5\u4EBA\u6570\u91CF</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">New</span><span class="token punctuation">(</span>size <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">*</span>Pool <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>Pool<span class="token punctuation">{</span>
		work<span class="token punctuation">:</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		sem<span class="token punctuation">:</span>  <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Pool<span class="token punctuation">)</span> <span class="token function">worker</span><span class="token punctuation">(</span>task <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>sem <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
		<span class="token function">task</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		task <span class="token operator">=</span> <span class="token operator">&lt;-</span>p<span class="token punctuation">.</span>work
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Pool<span class="token punctuation">)</span> <span class="token function">NewTask</span><span class="token punctuation">(</span>task <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u7B2C\u4E00\u6B21\u52A0\u65B0\u4EFB\u52A1\u65F6\uFF0Cwork \u7F13\u51B2\u533A\u5927\u5C0F\u4E3A 0\uFF0C\u53D1\u51FA\u53BB\u4E5F\u6CA1\u4EBA\u63A5\u53D7\uFF0C\u6240\u4EE5\u4E00\u5B9A\u4F1A\u8D70\u7B2C\u4E8C\u4E2A</span>
	<span class="token comment">// \u76F8\u5F53\u4E8E\u627E\u5230\u4E86\u7B2C\u4E00\u4E2A\u5DE5\u4EBA\u5904\u7406\u4EFB\u52A1\uFF0Cworker \u672C\u8EAB\u662F\u4E2A for \u5FAA\u73AF\uFF0C\u5B83\u5904\u7406\u5B8C\u7B2C\u4E00\u4E2A\u4EFB\u52A1\u540E\u4F1A\u7EE7\u7EED\u63A5\u53D7\u65B0\u4EFB\u52A1</span>
	<span class="token comment">// \u7B2C\u4E8C\u6B21\u52A0\u5165\u65F6\uFF0C\u5C31\u88AB\u7B2C\u4E00\u4E2A\u5DE5\u4EBA\u5904\u7406\u4E86\uFF0C</span>
	<span class="token comment">// \u5982\u679C\u7B2C\u4E09\u4E2A\u52A0\u5165\uFF0C\u56E0\u4E3A sem \u7F13\u51B2\u533A\u5927\u5C0F\u7684\u9650\u5236\uFF0C\u4E0D\u4F1A\u7EE7\u7EED\u4EA7\u751F\u65B0\u7684 worker</span>
	<span class="token keyword">select</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> p<span class="token punctuation">.</span>work <span class="token operator">&lt;-</span> task<span class="token punctuation">:</span>
	<span class="token keyword">case</span> p<span class="token punctuation">.</span>sem <span class="token operator">&lt;-</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">:</span>
		<span class="token keyword">go</span> p<span class="token punctuation">.</span><span class="token function">worker</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	pool <span class="token operator">:=</span> <span class="token function">New</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		pool<span class="token punctuation">.</span><span class="token function">NewTask</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="\u52A8\u6001\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u7C7B\u578B" aria-hidden="true">#</a> \u52A8\u6001\u7C7B\u578B</h3><p>\u63A5\u53E3\u5206\u4E3A\u4E24\u79CD<code>iface</code>\u548C<code>eface</code></p><p>\u6240\u6709\u7684\u53D8\u91CF\u90FD\u5B9E\u73B0\u4E86\u7A7A\u63A5\u53E3 (eface)</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u5B9A\u4E49\u9759\u6001\u7C7B\u578B</span>
i <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
i <span class="token operator">=</span> <span class="token string">&quot;Go \u7F16\u7A0B\u65F6\u5149&quot;</span> <span class="token comment">// \u4F1A\u62A5\u9519</span>

<span class="token comment">// \u5B9A\u4E49\u52A8\u6001\u7C7B\u578B</span>
i <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> i <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
i <span class="token operator">=</span> <span class="token number">18</span>

i <span class="token operator">=</span> <span class="token string">&quot;Go \u7F16\u7A0B\u65F6\u5149&quot;</span> <span class="token comment">// \u4E0A\u9762\u4E09\u79CD\u90FD\u884C\uFF0C\u4E0D\u4F1A\u62A5\u9519</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> reader io<span class="token punctuation">.</span>Reader

tty<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span><span class="token string">&quot;/dev/tty&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_RDWR<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
<span class="token punctuation">}</span>

reader <span class="token operator">=</span> tty
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u7B2C\u4E00\u884C\u4EE3\u7801\u7ED3\u675F\u540E\uFF0Creader \u7684\u9759\u6001\u7C7B\u578B\u4E3A<code>io.Reader</code>\u8FD8\u6CA1\u6709\u52A8\u6001\u7C7B\u578B <img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202203060928375.png" alt=""> \u88AB\u8D4B\u503C\u4E3A tty \u540E\uFF0Creader \u7684\u52A8\u6001\u7C7B\u578B\u53D8\u4E3A<code>*os.File</code><img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202203060936153.png" alt=""></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">//\u4E0D\u5E26\u51FD\u6570\u7684 interface</span>
<span class="token keyword">var</span> empty <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

tty<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">OpenFile</span><span class="token punctuation">(</span><span class="token string">&quot;/dev/tty&quot;</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_RDWR<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
<span class="token punctuation">}</span>

empty <span class="token operator">=</span> tty
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u521A\u5F00\u59CB empty \u662F eface\uFF0C<code>_type</code>\u4E3A nil <img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202203060938295.png" alt=""> \u88AB\u8D4B\u503C\u540E\uFF0C<code>_type</code>\u7684<strong>\u9759\u6001\u7C7B\u578B</strong>\u4E3A<code>*os.File</code><img src="https://trdthg-img-for-md-1306147581.cos.ap-beijing.myqcloud.com/img/202203060938635.png" alt=""></p><h3 id="\u5BFC\u5165" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u5165" aria-hidden="true">#</a> \u5BFC\u5165</h3><p>\u5BFC\u5165\u65B9\u5F0F\uFF1A</p><ul><li>\u7EDD\u5BF9\u5BFC\u5165\uFF1A\u4ECE <code>$GOPATH/src</code> \u6216 <strong><code>$GOROOT</code></strong> \u6216\u8005 <code>$GOPATH/pkg/mod</code> \u76EE\u5F55\u4E0B\u641C\u7D22\u5305\u5E76\u5BFC\u5165</li><li>\u76F8\u5BF9\u5BFC\u5165\uFF1A\u4ECE\u5F53\u524D\u76EE\u5F55\u4E2D\u641C\u7D22\u5305\u5E76\u5F00\u59CB\u5BFC\u5165\u3002\u5C31\u50CF\u4E0B\u9762\u8FD9\u6837</li></ul><p>\u6CE8\u610F\uFF1A</p><ul><li>\u5BFC\u5165\u65F6\uFF0C\u662F\u6309\u7167\u76EE\u5F55\u5BFC\u5165\u3002\u5BFC\u5165\u76EE\u5F55\u540E\uFF0C\u53EF\u4EE5\u4F7F\u7528\u8FD9\u4E2A\u76EE\u5F55\u4E0B\u7684\u6240\u6709\u5305\u3002</li><li>\u53EA\u8981\u4E0D\u662F<code>.</code>\u6216<code>..</code>\u5F00\u5934\uFF0C\u5168\u90FD\u662F\u7EDD\u5BF9\u8DEF\u5F84</li></ul><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context" aria-hidden="true">#</a> context</h3><p>\u5F53\u4E00\u4E2A goutine \u5F00\u542F\u540E\uFF0C\u53EA\u80FD\u901A\u8FC7 channel \u7684\u901A\u77E5\u5B9E\u73B0\u7BA1\u7406\uFF0C\u4F7F\u7528 context \u66F4\u65B9\u4FBF\u4E86</p><p>\u5F53\u4F60\u628A Context \u4F20\u9012\u7ED9\u591A\u4E2A goroutine \u4F7F\u7528\u65F6\uFF0C\u53EA\u8981\u6267\u884C\u4E00\u6B21 cancel \u64CD\u4F5C\uFF0C\u6240\u6709\u7684 goroutine \u5C31\u53EF\u4EE5\u6536\u5230 \u53D6\u6D88\u7684\u4FE1\u53F7\uFF0CContext \u662F\u7EBF\u7A0B\u5B89\u5168\u7684\uFF0C\u53EF\u4EE5\u653E\u5FC3\u5730\u5728\u591A\u4E2A goroutine \u4E2D\u4F7F\u7528\u3002</p><p>context \u521B\u5EFA\u4F9D\u8D56\u4E8E 4 \u4E2A\u51FD\u6570</p><ul><li>withCancel \u6700\u666E\u901A\uFF0C\u53EA\u80FD\u4F7F\u7528 cancel \u53BB\u7ED3\u675F</li><li>withDeadline \u548C WithDeadline \u4F1A\u5728\u8D85\u65F6\u540E\u81EA\u52A8 cancel\uFF0C\u4F20\u9012\u7684\u662F\u7EDD\u5BF9\u65F6\u95F4\u548C\u76F8\u5BF9\u65F6\u95F4</li><li>withValue \u80FD\u591F\u643A\u5E26\u4E00\u4E9B\u952E\u503C\u5BF9 (\u952E\u5E94\u8BE5\u662F\u53EF\u6BD4\u7684\uFF0C\u503C\u5FC5\u987B\u662F\u7EBF\u7A0B\u5B89\u5168\u7684)</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">WithCancel</span><span class="token punctuation">(</span>parent Context<span class="token punctuation">)</span> <span class="token punctuation">(</span>ctx Context<span class="token punctuation">,</span> cancel CancelFunc<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">WithDeadline</span><span class="token punctuation">(</span>parent Context<span class="token punctuation">,</span> deadline time<span class="token punctuation">.</span>Time<span class="token punctuation">)</span> <span class="token punctuation">(</span>Context<span class="token punctuation">,</span> CancelFunc<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">WithTimeout</span><span class="token punctuation">(</span>parent Context<span class="token punctuation">,</span> timeout time<span class="token punctuation">.</span>Duration<span class="token punctuation">)</span> <span class="token punctuation">(</span>Context<span class="token punctuation">,</span> CancelFunc<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">WithValue</span><span class="token punctuation">(</span>parent Context<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val <span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> Context
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">monitor</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> number <span class="token builtin">int</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        <span class="token keyword">select</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token operator">&lt;-</span> ctx<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u76D1\u63A7\u5668%v\uFF0C\u76D1\u63A7\u7ED3\u675F\u3002\\n&quot;</span><span class="token punctuation">,</span> number<span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token keyword">default</span><span class="token punctuation">:</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u76D1\u63A7\u5668%v\uFF0C\u6B63\u5728\u76D1\u63A7\u4E2D...\\n&quot;</span><span class="token punctuation">,</span> number<span class="token punctuation">)</span>
            time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx01<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithCancel</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    ctx02<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithDeadline</span><span class="token punctuation">(</span>ctx01<span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span><span class="token number">1</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token keyword">go</span> <span class="token function">monitor</span><span class="token punctuation">(</span>ctx02<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span>  <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
    <span class="token keyword">if</span> ctx02<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u76D1\u63A7\u5668\u53D6\u6D88\u7684\u539F\u56E0: &quot;</span><span class="token punctuation">,</span> ctx02<span class="token punctuation">.</span><span class="token function">Err</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E3B\u7A0B\u5E8F\u9000\u51FA\uFF01\uFF01&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,176),k={href:"https://mp.weixin.qq.com/s?__biz=MzAxMTA4Njc0OQ==&mid=2651439981&idx=4&sn=b1ad1fd6e9ddf4618b0db904b067f7f6&scene=19#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},b=l("2020 \u91CD\u5B66 Go \u7CFB\u5217\uFF1A34. \u56FE\u89E3\u9759\u6001\u7C7B\u578B\u4E0E\u52A8\u6001\u7C7B\u578B"),m=n("li",null,[n("a",{href:""})],-1);function d(f,g){const s=a("ExternalLinkIcon");return p(),t(o,null,[r,n("ul",null,[n("li",null,[n("a",k,[b,e(s)])]),m])],64)}var w=u(i,[["render",d]]);export{w as default};
