import{r as o,o as e,c,a as n,b as p,F as l,d as s,e as t}from"./app.74a04ce4.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const k={},i=n("p",null,"\u539F\u6587\u94FE\u63A5\uFF1Ahttps://lucumr.pocoo.org/2022/1/6/rust-extension-map/",-1),r=s("\u7FFB\u8BD1\uFF1A"),m={href:"https://github.com/trdthg",target:"_blank",rel:"noopener noreferrer"},b=s("trdthg"),d=s("\u9009\u9898\uFF1A"),f={href:"https://github.com/trdthg",target:"_blank",rel:"noopener noreferrer"},y=s("trdthg"),w=s("\u672C\u6587\u7531 "),g={href:"https://Rustt.org",target:"_blank",rel:"noopener noreferrer"},_=s("Rustt"),h=s(" \u7FFB\u8BD1\uFF0C"),T={href:"https://studyrust.org",target:"_blank",rel:"noopener noreferrer"},x=s("StudyRust"),v=s(" \u8363\u8A89\u63A8\u51FA"),A=t(`<h1 id="\u62D3\u5C55-rust-\u4E2D\u7684-map" tabindex="-1"><a class="header-anchor" href="#\u62D3\u5C55-rust-\u4E2D\u7684-map" aria-hidden="true">#</a> \u62D3\u5C55 Rust \u4E2D\u7684 Map</h1><p>\u5728 Rust \u4E2D\uFF0C\u5982\u679C\u4F60\u60F3\u4E3A\u7528\u6237\u63D0\u4F9B\u4E00\u4E2A\u7075\u6D3B\u7684 API\uFF0C\u4E00\u822C\u53EF\u4EE5\u5F15\u5165\u6CDB\u578B\u53C2\u6570\u3002\u4EE5\u4E00\u4E2A web \u6846\u67B6\u4E3A\u4F8B\uFF0C\u5B83\u53EF\u80FD\u9700\u8981\u4E00\u4E2A\u7A0B\u5E8F\u7C7B\u578B\uFF0C\u5E76\u4E14\u9700\u8981\u4F20\u9012\u7ED9\u5F88\u591A\u51FD\u6570\u3002\u8FD9\u4E2A\u7A0B\u5E8F\u7C7B\u578B\u9700\u8981\u80FD\u591F\u4EE5\u914D\u7F6E\u7684\u5F62\u5F0F\u88AB\u53C2\u6570\u5316\u3002</p><h2 id="\u5F15\u5165-any-\u7279\u5F81" tabindex="-1"><a class="header-anchor" href="#\u5F15\u5165-any-\u7279\u5F81" aria-hidden="true">#</a> \u5F15\u5165 Any \u7279\u5F81</h2><p>\u4E00\u4E2A\u89E3\u51B3\u65B9\u6CD5\u662F\u4F7F\u7528 <code>Any</code> \u7279\u5F81\u3002\u5B83\u9700\u8981\u4E00\u4E2A <code>&#39;static</code> \u7684\u751F\u547D\u5468\u671F\uFF0C\u5F53\u4F60\u4E4B\u540E\u4F7F\u7528\u5B83\u65F6\uFF0C\u8FD8\u9700\u8981\u7528 <code>Box</code> \u8FDB\u884C\u88C5\u7BB1\u3002\u6BD4\u5982\u6211\u4EEC\u53EF\u80FD\u5BF9\u5B83\u8FDB\u884C\u5411\u4E0B\u8F6C\u578B\uFF0C\u5373\u8F6C\u6362\u4E3A\u539F\u59CB\u7684\u7C7B\u578B\u3002\u8FD9\u610F\u5473\u7740\u4F60\u53EF\u4EE5\u5728\u67D0\u4E2A\u5730\u65B9\uFF08\u6BD4\u5982\u6211\u4EEC\u7684 App\uFF09\u4E2D\u5B58\u50A8\u548C\u83B7\u53D6\u4EFB\u610F\u7C7B\u578B\u3002</p><p>\u6211\u4EEC\u671F\u671B\u7684 API \u5927\u81F4\u5982\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token class-name">App</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// place in extension map</span>
app<span class="token punctuation">.</span><span class="token function">extensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Config</span> <span class="token punctuation">{</span> <span class="token punctuation">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">extensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Database</span> <span class="token punctuation">{</span> <span class="token punctuation">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// retrieve from extension map</span>
<span class="token keyword">let</span> config <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">extensions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">Config</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6211\u4EEC\u7684 app \u9700\u8981\u5BB9\u7EB3\u5176\u4ED6\u62D3\u5C55\u7684\u7C7B\u578B\uFF0C\u4EE5\u4FBF\u4E4B\u540E\u4F7F\u7528\u3002</p><p>\u73B0\u5728\uFF0C\u8BA9\u6211\u4EEC\u8BD5\u8BD5\u6700\u7B80\u5355\u7684\u5B9E\u73B0\u65B9\u5F0F\uFF1A\u51C6\u5907\u4E00\u4E2A <code>Extensions</code> \u5BF9\u8C61\uFF0C\u8BA9\u5B83\u5B9E\u73B0\u63D2\u5165\u548C\u83B7\u53D6\u7684\u65B9\u6CD5\u3002\u5982\u679C\u4E00\u4E2A\u62D3\u5C55\u8FD8\u4E0D\u5B58\u5728\uFF0C\u6211\u4EEC\u5C31\u81EA\u52A8\u63D2\u5165\u4E00\u4E2A\u9ED8\u8BA4\u7684\uFF08\u9700\u8981\u5B9E\u73B0 <code>Default</code> \u7279\u5F81\uFF09\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>any<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Any</span><span class="token punctuation">,</span> <span class="token class-name">TypeId</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Default)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Extensions</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">:</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">TypeId</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Extensions</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token class-name">T</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> b<span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_mut</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">T</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> b<span class="token punctuation">.</span><span class="token function">downcast_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">ensure</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_none</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u975E\u5E38\u76F4\u63A5\uFF0C\u4F46\u662F\u5B58\u5728\u4E24\u4E2A\u95EE\u9898\uFF1A\u9996\u5148\uFF0C\u53EA\u6709 <code>get_mut</code> \u80FD\u591F\u8C03\u7528 <code>ensure</code> \u53BB\u63D2\u5165\u9ED8\u8BA4\u503C\uFF0C\u5982\u679C\u6709\u4EBA\u76F4\u63A5\u8C03\u7528 <code>get</code> \u5C31\u4F1A\u5BFC\u81F4 panic\u3002\u7B2C\u4E8C\u4E2A\u95EE\u9898\u662F\uFF0C\u501F\u7528\u68C0\u67E5\u5668\u4F1A\u8BA9\u4E4B\u540E\u7684\u7F16\u5199\u975E\u5E38\u56F0\u96BE\u3002\u4E0A\u9762\u7684 map \u5BF9\u4E8E\u89E3\u51B3\u7ECF\u5178\u7684\u95EE\u9898\uFF08\u4F8B\u5982 app\uFF09\u662F\u5F88\u6709\u7528\u7684\uFF0C\u4F60\u53EA\u9700\u8981\u914D\u7F6E\u4E00\u6B21\uFF0C\u81EA\u90A3\u4E4B\u540E map \u5C31\u50CF\u662F\u88AB\u51BB\u7ED3\u4E86\u4E00\u6837\uFF0C\u56E0\u4E3A\u6709\u592A\u591A\u7684\u5F15\u7528\u5728\u98DE\u6765\u5206\u98DE\u53BB\uFF0C\u4EE5\u81F3\u4E8E\u6CA1\u6709\u4EBA\u80FD\u591F\u5F97\u5230 <code>&amp;mut</code> \u7684\u5F15\u7528\u3002</p><p>how does it work\uFF1F</p><p>\u4E0A\u9762\u7684\u4EE3\u7801\u662F\u5982\u4F55\u505A\u5230\u7684\u5462\uFF0CRust \u4E2D\u7684\u6BCF\u4E00\u79CD\u7C7B\u578B\u90FD\u4F1A\u6709\u4E00\u4E2A type ID\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>TypeId::of::&lt;T&gt;()</code> \u83B7\u53D6\u3002\u4ED6\u662F\u552F\u4E00\u7684\uFF0C\u4F60\u53EF\u4EE5\u7528\u5B83\u8FDB\u884C\u6BD4\u8F83\uFF0C\u6216\u8005\u662F\u4F5C\u4E3A map \u7684\u952E\u6765\u4F7F\u7528\u3002\u6BCF\u79CD\u7C7B\u578B\u53EA\u5141\u8BB8\u6709\u4E00\u4E2A\u503C\u3002\u63A5\u7740\u6211\u4EEC\u628A T \u4F5C\u4E3A <code>dyn Any</code> \u5B58\u50A8\u5728 map \u91CC\uFF0C<code>Any</code> \u7279\u5F81\u5141\u8BB8\u6211\u4EEC\u4F7F\u7528 <code>downcast_ref</code> \u548C <code>downcast_mut</code> \u65B9\u6CD5\u62FF\u5230\u539F\u59CB\u7C7B\u578B\u3002\u7531\u4E8E\u6211\u4EEC\u4F7F\u7528\u4E86 ensure \u65B9\u6CD5\u786E\u4FDD\u8FD9\u91CC\u7684\u7C7B\u578B\u5B58\u5728\uFF0C\u56E0\u6B64\u53EF\u4EE5\u5B89\u5168\u7684 unwrap\u3002</p><h2 id="\u5185\u90E8\u53EF\u53D8\u6027" tabindex="-1"><a class="header-anchor" href="#\u5185\u90E8\u53EF\u53D8\u6027" aria-hidden="true">#</a> \u5185\u90E8\u53EF\u53D8\u6027</h2>`,13),D=s("\u8BA9\u6211\u4EEC\u770B\u4E00\u4E2A web \u6846\u67B6\u6216\u8005\u662F\u6A21\u677F\u5F15\u64CE\u7684\u5E38\u89C1\u6848\u4F8B\u3002\u4EE5 "),R={href:"https://github.com/mitsuhiko/minijinja",target:"_blank",rel:"noopener noreferrer"},B=s("MiniJinja"),I=s("\uFF08\u6A21\u677F\u5F15\u64CE\uFF09\u4E3A\u4F8B\uFF0C\u5B83\u91CC\u9762\u6709\u4E00\u4E2A State \u5BF9\u8C61\uFF0C\u6BCF\u6B21\u6A21\u677F\u521D\u59CB\u5316\u65F6\u90FD\u4F1A\u521B\u5EFA\u4E00\u6B21\uFF0CState \u6CA1\u6709\u5B9E\u73B0 Send \u548C Sync\uFF0CMiniJinja \u5728\u8BC4\u4F30\u65F6\u9700\u8981 State\u3002\u5982\u679C\u4F60\u60F3\u8BA9\u7528\u6237\u80FD\u591F\u653E\u5165\u81EA\u5B9A\u4E49\u7684 State \u5462\uFF1F\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u5728\u5185\u90E8\u4F7F\u7528 "),M=n("code",null,"RefCell",-1),S=s(" \u6765\u8C03\u6574\u4E0A\u9762\u7684\u7C7B\u578B\u3002"),E=t(`<div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>any<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Any</span><span class="token punctuation">,</span> <span class="token class-name">TypeId</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>cell<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ref</span><span class="token punctuation">,</span> <span class="token class-name">RefCell</span><span class="token punctuation">,</span> <span class="token class-name">RefMut</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Default)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Extensions</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">:</span> <span class="token class-name">RefCell</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">TypeId</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Extensions</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Ref</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ref</span><span class="token punctuation">::</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>m<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> b<span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_mut</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">RefMut</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RefMut</span><span class="token punctuation">::</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>m<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> b<span class="token punctuation">.</span><span class="token function">downcast_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">ensure</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_none</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>\u4ECE\u7528\u6237\u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u51E0\u4E4E\u6CA1\u6709\u53D8\u5316\u3002\u4E3B\u8981\u7684\u533A\u522B\u662F\u4F60\u4E0D\u9700\u8981\u4E00\u4E2A\u53EF\u53D8\u5F15\u7528\u5C31\u80FD\u8C03\u7528 <code>get_mut</code>\uFF0C\u8FD9\u4E00\u58EE\u4E3E\u662F\u7531 <code>RefCell</code> \u5B9E\u73B0\u7684\uFF0CRefcell \u80FD\u591F\u5C06\u68C0\u67E5\u79FB\u52A8\u5230\u8FD0\u884C\u65F6\u3002\u5F53\u4E00\u4E2A <code>RefMut</code> \u88AB\u7ED9\u51FA\u65F6\uFF0C\u5982\u679C\u5DF2\u7ECF\u5B58\u5728\u4EFB\u4F55\u7684\u53EF\u53D8\u6216\u4E0D\u53EF\u53D8\u5F15\u7528\uFF0C\u5C31\u4F1A\u53D1\u751F panic\u3002\u5BF9\u4E8E\u8FD9\u91CC\u7684\u7528\u6237\u6765\u8BF4\uFF0C\u8FD9\u5E76\u4E0D\u662F\u4E00\u4E2A\u5F88\u5927\u7684\u95EE\u9898\uFF0C\u56E0\u4E3A\u6211\u4EEC\u53EF\u4EE5\u5F88\u5BB9\u6613\u5730\u786E\u4FDD\u53EA\u6709\u4E00\u4E2A\u53EF\u53D8\u7684\u5F15\u7528\u5728\u4F7F\u7528\u3002\u7279\u522B\u68D2\u7684\u662F\uFF0CRef \u548C RefMut \u7C7B\u578B\u63D0\u4F9B\u4E86\u4E00\u4E2A\u9759\u6001\u7684 map \u65B9\u6CD5\uFF0C\u8BA9\u4F60\u53EF\u4EE5\u8F7B\u677E\u6D3E\u751F\u51FA\u53E6\u4E00\u4E2A Ref \u6216 RefMut\uFF0C\u5E76\u4FDD\u6301\u539F\u6765\u7684\u5F15\u7528\uFF0C\u4F46\u5BF9\u503C\u8FDB\u884C\u8F6C\u6362\u3002</p><h2 id="\u540C\u6B65\u652F\u6301" tabindex="-1"><a class="header-anchor" href="#\u540C\u6B65\u652F\u6301" aria-hidden="true">#</a> \u540C\u6B65\u652F\u6301</h2><p>\u5982\u679C\u6211\u4EEC\u60F3\u8981\u7528 Send \u548C Sync \u6765\u5B9E\u73B0\u548C\u4E0A\u9762\u76F8\u540C\u7684\u6548\u679C\u5462\uFF1F\u6211\u4EEC\u9700\u8981\u4E00\u4E2A\u9501\u3002\u53EF\u60DC\u7684\u662F\u6807\u51C6\u5E93\u63D0\u4F9B\u7684 Mutex \u548C RwLock \u4E0D\u80FD\u8BA9\u4F60\u5728\u62FF\u5230\u9501\u7684\u540C\u65F6 map\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528 <code>parking_lot</code> \u66FF\u4EE3\uFF0C\u5B83\u5B9E\u73B0\u4E86\u5FC5\u8981\u7684\u4E00\u4E9B\u65B9\u6CD5\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">parking_lot<span class="token punctuation">::</span></span><span class="token punctuation">{</span>
    <span class="token class-name">MappedRwLockReadGuard</span><span class="token punctuation">,</span>
    <span class="token class-name">MappedRwLockWriteGuard</span><span class="token punctuation">,</span>
    <span class="token class-name">RwLock</span><span class="token punctuation">,</span>
    <span class="token class-name">RwLockReadGuard</span><span class="token punctuation">,</span>
    <span class="token class-name">RwLockWriteGuard</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>any<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Any</span><span class="token punctuation">,</span> <span class="token class-name">TypeId</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>

<span class="token attribute attr-name">#[derive(Default)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Extensions</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">:</span> <span class="token class-name">RwLock</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">TypeId</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Extensions</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Send</span> <span class="token operator">+</span> <span class="token class-name">Sync</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Send</span> <span class="token operator">+</span> <span class="token class-name">Sync</span> <span class="token operator">+</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">MappedRwLockReadGuard</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RwLockReadGuard</span><span class="token punctuation">::</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>m<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> b<span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_mut</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Send</span> <span class="token operator">+</span> <span class="token class-name">Sync</span> <span class="token operator">+</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">MappedRwLockWriteGuard</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RwLockWriteGuard</span><span class="token punctuation">::</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>m<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> b<span class="token punctuation">.</span><span class="token function">downcast_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">ensure</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token class-name">Send</span> <span class="token operator">+</span> <span class="token class-name">Sync</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_none</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>\u6CE8\u610F\uFF1A\u7531\u4E8E Any \u5E76\u6CA1\u6709\u5B9E\u73B0 Debug\uFF0C\u6240\u4EE5\u6211\u4EEC\u5F88\u96BE\u4E3A\u6211\u4EEC\u7684 map \u5B9E\u73B0 Debug \u7279\u5F81\uFF0C\u4E00\u4E9B\u7B80\u5355\u7684\u6539\u53D8\u5E76\u4E0D\u80FD\u89E3\u51B3\u76EE\u524D\u7684\u95EE\u9898\u3002\u4E0B\u534A\u90E8\u5206\u6211\u4EEC\u5C06\u4ECB\u7ECD <code>as-any</code> \u6A21\u5F0F</p><p>\u6211\u4EEC\u9762\u4E34\u7684\u6311\u6218\u662F\uFF0C\u5728 Rust \u91CC\uFF0C\u4F60\u4E0D\u80FD\u4F7F\u7528 <code>Box&lt;Any + Debug&gt;</code>\uFF0C\u7136\u800C\u8FD8\u662F\u6709\u4E00\u4E9B\u65B9\u6CD5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u3002</p><h2 id="\u4E3A-map-\u5B9E\u73B0-debug" tabindex="-1"><a class="header-anchor" href="#\u4E3A-map-\u5B9E\u73B0-debug" aria-hidden="true">#</a> \u4E3A map \u5B9E\u73B0 Debug</h2><h3 id="\u7B80\u5316\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5316\u95EE\u9898" aria-hidden="true">#</a> \u7B80\u5316\u95EE\u9898</h3><p>\u6211\u4EEC\u7684\u76EE\u6807\u662F\u5BF9 <code>Box&lt;dyn Any&gt;</code> \u505A\u4E00\u4E2A\u5305\u88C5\uFF0C\u5E76\u8BA9 Wrapper \u5B9E\u73B0 Debug\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">AnyBox</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5982\u679C\u4F60\u5C1D\u8BD5\u7F16\u8BD1\uFF0C\u7F16\u8BD1\u5668\u5E94\u8BE5\u4F1A\u5F88\u4E0D\u9AD8\u5174\u7684\u629B\u51FA\u9519\u8BEF\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>error<span class="token punctuation">[</span><span class="token constant">E0225</span><span class="token punctuation">]</span><span class="token punctuation">:</span> only auto traits can be used <span class="token keyword">as</span> additional traits <span class="token keyword">in</span> a <span class="token keyword">trait</span> <span class="token type-definition class-name">object</span>
 <span class="token operator">-</span><span class="token punctuation">-&gt;</span> src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">:</span><span class="token number">29</span>
  <span class="token operator">|</span>
<span class="token number">9</span> <span class="token operator">|</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">AnyBox</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token operator">|</span>                       <span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>   <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span> additional non<span class="token operator">-</span>auto <span class="token keyword">trait</span>
  <span class="token operator">|</span>                       <span class="token operator">|</span>
  <span class="token operator">|</span>                       first non<span class="token operator">-</span>auto <span class="token keyword">trait</span>
  <span class="token operator">|</span>
  <span class="token operator">=</span> help<span class="token punctuation">:</span> consider creating a new <span class="token keyword">trait</span> <span class="token type-definition class-name">with</span> all of these <span class="token keyword">as</span> supertraits and
    using that <span class="token keyword">trait</span> <span class="token type-definition class-name">here</span> instead<span class="token punctuation">:</span> \`<span class="token keyword">trait</span> <span class="token type-definition class-name">NewTrait</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\`
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u8D85\u7EA7\u7279\u5F81" tabindex="-1"><a class="header-anchor" href="#\u8D85\u7EA7\u7279\u5F81" aria-hidden="true">#</a> \u8D85\u7EA7\u7279\u5F81</h3><p>\u5E78\u8FD0\u7684\u662F\uFF0C\u7F16\u8BD1\u5668\u518D\u6B21\u4E3A\u6211\u4EEC\u6307\u660E\u4E86\u89E3\u51B3\u4E4B\u9053\uFF0C\u6211\u4EEC\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u7236\u7279\u5F81\uFF0C\u5E76\u5229\u7528\u7279\u5F81\u7EA6\u675F\u3002\u540C\u65F6\uFF0C\u6211\u4EEC\u4E3A\u6240\u6709\u5B9E\u73B0\u4E86 Any \u548C Debug \u7684\u7C7B\u578B\u5B9E\u73B0\u6211\u4EEC\u7684\u8D85\u7EA7\u7279\u5F81\u3002\u5C31\u50CF\u4E0B\u9762\u8FD9\u6837\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">struct</span> <span class="token type-definition class-name">AnyBox</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">DebugAny</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">trait</span> <span class="token type-definition class-name">DebugAny</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span> <span class="token class-name">DebugAny</span> <span class="token keyword">for</span> <span class="token class-name">T</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u4F60\u53EF\u4EE5\u60F3\u8FD9\u6837\u6784\u5EFA\u4E00\u4E2A Box\uFF0C\u4F46\u662F\u771F\u6B63\u4E0D\u80FD\u901A\u8FC7\u7F16\u8BD1\u7684\u662F\u5411\u4E0B\u8F6C\u578B</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> any_box <span class="token operator">=</span> <span class="token class-name">AnyBox</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">42i32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>any_box<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u7F16\u8BD1\u5668\u4F1A\u544A\u8BC9\u6211\u4EEC\uFF0CAnyBox \u4E2D\u7684\u503C\u5E76\u6CA1\u6709 <code>downcast_ref</code> \u65B9\u6CD5</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code>error<span class="token punctuation">[</span><span class="token constant">E0599</span><span class="token punctuation">]</span><span class="token punctuation">:</span> no method named \`downcast_ref\` found <span class="token keyword">for</span> <span class="token keyword">struct</span>
  \`<span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">dyn</span> <span class="token class-name">DebugAny</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>\` <span class="token keyword">in</span> the current scope
  <span class="token operator">-</span><span class="token punctuation">-&gt;</span> src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">15</span><span class="token punctuation">:</span><span class="token number">20</span>
   <span class="token operator">|</span>
<span class="token number">15</span> <span class="token operator">|</span>     <span class="token macro property">dbg!</span><span class="token punctuation">(</span>any_box<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token operator">|</span>                    <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span> method not found <span class="token keyword">in</span> \`<span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">dyn</span> <span class="token class-name">DebugAny</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>\`
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u539F\u56E0\u662F <code>Box&lt;dyn DebugAny&gt;</code> \u5E76\u4E0D\u662F <code>Box&lt;dyn Any&gt;</code>\uFF0C\u56E0\u6B64\u6211\u4EEC\u4E0D\u80FD\u90A3\u91CC\u5F97\u5230 Any \u7279\u5F81\u62E5\u6709\u7684\u65B9\u6CD5\u3002\u90A3\u4E48\u6211\u4EEC\u5982\u4F55\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u5462\uFF1F\u6700\u7B80\u5355\u7684\u65B9\u6CD5\u662F <strong>&quot;as any&quot;</strong> \u6A21\u5F0F\uFF0C\u6211\u4EEC\u5728\u6211\u4EEC\u7684 DebugAny \u7279\u5F81\u4E0A\u5B9E\u73B0\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u5C06\u5176\u5411\u4E0A\u8F6C\u6362\u4E3A\u4E00\u4E2A Any\u3002\u770B\u8D77\u6765\u50CF\u8FD9\u6837\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">trait</span> <span class="token type-definition class-name">DebugAny</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span> <span class="token class-name">DebugAny</span> <span class="token keyword">for</span> <span class="token class-name">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span> <span class="token punctuation">{</span> <span class="token keyword">self</span> <span class="token punctuation">}</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">dyn</span> <span class="token class-name">Any</span> <span class="token punctuation">{</span> <span class="token keyword">self</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u73B0\u5728\u867D\u7136\u6211\u4EEC\u4F9D\u7136\u4E0D\u80FD\u5728 DebugAny \u4E0A\u8C03\u7528 <code>downcast_ref</code>\uFF0C\u4F46\u662F\u6211\u4EEC\u53EF\u4EE5\u62FF\u8D70\u5B83\u7684\u503C\uFF0C\u5E76\u8C03\u7528 <code>as_any</code> \u5F97\u5230\u4E00\u4E2A <code>&amp;dyn Any</code>\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> any_box <span class="token operator">=</span> <span class="token class-name">AnyBox</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">42i32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span>any_box<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">as_any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>any_box<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4F46\u662F\u5F53\u6211\u4EEC\u8FD0\u884C\u540E\uFF0C\u5374\u5F97\u5230\u4E86\u4E00\u4E2A None\u3002\u53D1\u751F\u4EC0\u4E48\u4E8B\u4E86\uFF1F\uFF1F\uFF1F</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token punctuation">[</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">]</span> any_box<span class="token number">.0</span><span class="token punctuation">.</span><span class="token function">as_any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token class-name">None</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u8FD9\u4E2A\u8C1C\u9898\u7684\u7B54\u6848\u4E0E\u65B9\u6CD5\u89E3\u6790\u7684\u5DE5\u4F5C\u65B9\u5F0F\u548C\u7A7A\u767D\u5B9E\u73B0\u6709\u5173\u3002\u5F53\u6211\u4EEC\u5728 <code>Box&lt;dyn DebugAny&gt;</code> \u4E0A\u8C03\u7528 <code>as_any</code> \u65F6\uFF0CBox \u5E76\u6CA1\u6709\u53D1\u751F\u81EA\u52A8\u89E3\u5F15\u7528\uFF0C\u4E8B\u5B9E\u4E0A\u8C03\u7528\u7684\u662F <code>Box&lt;dyn DebugAny&gt;</code> \u7684 as_any\uFF0C\u56E0\u4E3A Box \u73B0\u5728\u4E5F\u5B9E\u73B0\u4E86\u6211\u4EEC\u7684 DebugAny\u3002\u90A3\u4E48\uFF0C\u6211\u4EEC\u5982\u4F55\u7A7F\u8FC7\u8FD9\u4E2A Box \u5462\uFF1F\u901A\u8FC7\u624B\u52A8\u89E3\u5F15\u7528\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> any_box <span class="token operator">=</span> <span class="token class-name">AnyBox</span><span class="token punctuation">(</span><span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token number">42i32</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>any_box<span class="token number">.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token macro property">dbg!</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>any_box<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8FD9\u6837\u5C31\u662F\u6211\u4EEC\u9884\u671F\u7684\u503C\u4E86</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token punctuation">[</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token operator">*</span>any_box<span class="token number">.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>
    <span class="token number">42</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token punctuation">[</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span>any_box <span class="token operator">=</span> <span class="token class-name">AnyBox</span><span class="token punctuation">(</span>
    <span class="token number">42</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="\u53EF\u8C03\u8BD5\u7684-extension-map" tabindex="-1"><a class="header-anchor" href="#\u53EF\u8C03\u8BD5\u7684-extension-map" aria-hidden="true">#</a> \u53EF\u8C03\u8BD5\u7684 Extension Map</h2><p>\u6709\u4E86\u4E0A\u9762\u7684\u7ECF\u9A8C\uFF0C\u6211\u4EEC\u73B0\u5728\u53EF\u4EE5\u62FF\u51FA\u4E4B\u524D\u7684\u975E\u540C\u6B65 map\uFF0C\u7A0D\u52A0\u6539\u9020\u5C31\u80FD\u4E3A\u5176\u5B9E\u73B0 Debug\u3002</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>any<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Any</span><span class="token punctuation">,</span> <span class="token class-name">TypeId</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>cell<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Ref</span><span class="token punctuation">,</span> <span class="token class-name">RefCell</span><span class="token punctuation">,</span> <span class="token class-name">RefMut</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token class-name">Debug</span><span class="token punctuation">;</span>

<span class="token keyword">trait</span> <span class="token type-definition class-name">DebugAny</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">dyn</span> <span class="token class-name">Any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Any</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span> <span class="token class-name">DebugAny</span> <span class="token keyword">for</span> <span class="token class-name">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">dyn</span> <span class="token class-name">Any</span> <span class="token punctuation">{</span> <span class="token keyword">self</span> <span class="token punctuation">}</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">as_any_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">dyn</span> <span class="token class-name">Any</span> <span class="token punctuation">{</span> <span class="token keyword">self</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token attribute attr-name">#[derive(Default, Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Extensions</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">:</span> <span class="token class-name">RefCell</span><span class="token operator">&lt;</span><span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token class-name">TypeId</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">DebugAny</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Extensions</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">insert</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span>map
            <span class="token punctuation">.</span><span class="token function">borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Ref</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Ref</span><span class="token punctuation">::</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>m<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downcast_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">get_mut</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">RefMut</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">ensure</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RefMut</span><span class="token punctuation">::</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>m<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
            m<span class="token punctuation">.</span><span class="token function">get_mut</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and_then</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>b<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">as_any_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downcast_mut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">fn</span> <span class="token function-definition function">ensure</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Default</span> <span class="token operator">+</span> <span class="token class-name">Debug</span> <span class="token operator">+</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">self</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span><span class="token function">borrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is_none</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><p>\u5411 map \u91CC\u9762\u6DFB\u52A0\u70B9\u4E1C\u897F\uFF0C\u6253\u5370\u4E00\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token punctuation">[</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">63</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span>extensions <span class="token operator">=</span> <span class="token class-name">Extensions</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">:</span> <span class="token class-name">RefCell</span> <span class="token punctuation">{</span>
        value<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token class-name">TypeId</span> <span class="token punctuation">{</span>
                t<span class="token punctuation">:</span> <span class="token number">13431306602944299956</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6211\u5728 map \u4E2D\u653E\u7F6E\u4E86\u4E00\u4E2A 32 \u4F4D\u7684\u6574\u6570 42\uFF0C\u5B83\u6253\u5370\u51FA\u4E86\u4F5C\u4E3A\u952E\u7684 TypeId\uFF0C\u548C\u4F5C\u4E3A\u503C\u7684 42\u3002</p><h2 id="\u4FDD\u7559\u7C7B\u578B\u540D\u79F0" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u7559\u7C7B\u578B\u540D\u79F0" aria-hidden="true">#</a> \u4FDD\u7559\u7C7B\u578B\u540D\u79F0</h2><p>\u5982\u679C\u4F60\u60F3\u4FDD\u7559\u539F\u6765\u7684\u7C7B\u578B\u540D\u79F0\uFF0C\u800C\u4E0D\u4EC5\u4EC5\u662F\u7C7B\u578B\u7684 ID\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u81EA\u5B9A\u4E49\u7684\u7C7B\u578B\u4F5C\u4E3A map \u7684\u952E\u3002\u901A\u8FC7\u5BF9 TypeId \u548C TypeName \u505A\u4E00\u6B21\u7B80\u5355\u7684\u5305\u88C5\u5C31\u80FD\u8F7B\u677E\u5B9E\u73B0\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>any<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">TypeId</span><span class="token punctuation">,</span> type_name<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>hash<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Hash</span><span class="token punctuation">,</span> <span class="token class-name">Hasher</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token namespace">std<span class="token punctuation">::</span>fmt<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Debug</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">TypeKey</span><span class="token punctuation">(</span><span class="token class-name">TypeId</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;static</span> <span class="token keyword">str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">impl</span> <span class="token class-name">TypeKey</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">of</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token lifetime-annotation symbol">&#39;static</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">TypeKey</span> <span class="token punctuation">{</span>
        <span class="token class-name">TypeKey</span><span class="token punctuation">(</span><span class="token class-name">TypeId</span><span class="token punctuation">::</span><span class="token function">of</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">type_name</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Hash</span> <span class="token keyword">for</span> <span class="token class-name">TypeKey</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">hash</span><span class="token operator">&lt;</span><span class="token class-name">H</span><span class="token punctuation">:</span> <span class="token class-name">Hasher</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> state<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">H</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">PartialEq</span> <span class="token keyword">for</span> <span class="token class-name">TypeKey</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">eq</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> other<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">Self</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">==</span> other<span class="token number">.0</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Eq</span> <span class="token keyword">for</span> <span class="token class-name">TypeKey</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">Debug</span> <span class="token keyword">for</span> <span class="token class-name">TypeKey</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">fmt</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> f<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Formatter</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;_</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token namespace">fmt<span class="token punctuation">::</span></span><span class="token class-name">Result</span> <span class="token punctuation">{</span>
        <span class="token macro property">write!</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token string">&quot;{}&quot;</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u63A5\u7740\u7528\u5B83\u66FF\u6362\u6389\u539F\u6765\u7684\u952E\uFF0C\u8C03\u8BD5\u4E00\u4E0B\uFF1A</p><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token punctuation">[</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>rs<span class="token punctuation">:</span><span class="token number">90</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span>extensions <span class="token operator">=</span> <span class="token class-name">Extensions</span> <span class="token punctuation">{</span>
    map<span class="token punctuation">:</span> <span class="token class-name">RefCell</span> <span class="token punctuation">{</span>
        value<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token keyword">i32</span><span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            <span class="token namespace">alloc<span class="token punctuation">::</span>vec<span class="token punctuation">::</span></span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
                <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6CE8\u610F\uFF0C\u6211\u5728 map \u4E2D\u989D\u5916\u63D2\u5165\u4E86\u4E00\u4E2A <code>Vec&lt;i32&gt;</code>\uFF0C\u4EE5\u83B7\u5F97\u66F4\u660E\u663E\u7684\u8F93\u51FA\u3002</p>`,42);function H(L,C){const a=o("ExternalLinkIcon");return e(),c(l,null,[n("blockquote",null,[i,n("p",null,[n("strong",null,[r,n("a",m,[b,p(a)])])]),n("p",null,[d,n("a",f,[y,p(a)])]),n("p",null,[w,n("a",g,[_,p(a)]),h,n("a",T,[x,p(a)]),v])]),A,n("p",null,[D,n("a",R,[B,p(a)]),I,M,S]),E],64)}var K=u(k,[["render",H]]);export{K as default};
