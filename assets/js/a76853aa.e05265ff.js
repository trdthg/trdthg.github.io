"use strict";(self.webpackChunktrdthg_github_io=self.webpackChunktrdthg_github_io||[]).push([[2176],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),m=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=m(e.components);return a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=m(t),d=r,k=c["".concat(p,".").concat(d)]||c[d]||s[d]||l;return t?a.createElement(k,i(i({ref:n},u),{},{components:t})):a.createElement(k,i({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var m=2;m<l;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9073:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var a=t(7462),r=(t(7294),t(3905));const l={},i="\u96c6\u5408\u6846\u67b6",o={unversionedId:"notes/java/sourceread",id:"notes/java/sourceread",title:"\u96c6\u5408\u6846\u67b6",description:"List",source:"@site/docs/notes/java/sourceread.md",sourceDirName:"notes/java",slug:"/notes/java/sourceread",permalink:"/docs/notes/java/sourceread",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Java",permalink:"/docs/notes/java/"},next:{title:"Spring",permalink:"/docs/notes/java/spring"}},p={},m=[{value:"List",id:"list",level:2},{value:"Arrays",id:"arrays",level:3},{value:"Arrays.copy()",id:"arrayscopy",level:4},{value:"Collection",id:"collection",level:3},{value:"List",id:"list-1",level:3},{value:"AbstractCollection",id:"abstractcollection",level:3},{value:"AbstractList",id:"abstractlist",level:3},{value:"modCount \u4e0e fail-fast",id:"modcount-\u4e0e-fail-fast",level:4},{value:"Itr \u7c7b",id:"itr-\u7c7b",level:4},{value:"\u5982\u4f55\u907f\u514d fail-fast",id:"\u5982\u4f55\u907f\u514d-fail-fast",level:4},{value:"ListItr \u7c7b",id:"listitr-\u7c7b",level:4},{value:"ArrayList",id:"arraylist",level:3},{value:"\u5f85\u7eed...",id:"\u5f85\u7eed-4",level:3},{value:"\u51fd\u6570\u5f0f\u63a5\u53e3",id:"\u51fd\u6570\u5f0f\u63a5\u53e3",level:2},{value:"\u6982\u8ff0",id:"\u6982\u8ff0-4",level:3},{value:"Consumer",id:"consumer",level:3},{value:"Consumer",id:"consumer-1",level:4},{value:"BiComsumer",id:"bicomsumer",level:4},{value:"Predicate",id:"predicate",level:3},{value:"Function",id:"function",level:3},{value:"Function",id:"function-1",level:4},{value:"BiFunction",id:"bifunction",level:4},{value:"UnaryOperator",id:"unaryoperator",level:3},{value:"Compare",id:"compare",level:3},{value:"Comparable",id:"comparable",level:4},{value:"Comparator",id:"comparator",level:4},{value:"\u6e90\u7801",id:"\u6e90\u7801",level:5},{value:"\u65b9\u6cd5\u89e3\u91ca",id:"\u65b9\u6cd5\u89e3\u91ca",level:5},{value:"\u5f85\u7eed...",id:"\u5f85\u7eed-5",level:3},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:2},{value:"Object",id:"object",level:3},{value:"\u5f85\u7eed...",id:"\u5f85\u7eed-6",level:2}],u={toc:m};function s(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u96c6\u5408\u6846\u67b6"},"\u96c6\u5408\u6846\u67b6"),(0,r.kt)("h2",{id:"list"},"List"),(0,r.kt)("h3",{id:"arrays"},"Arrays"),(0,r.kt)("h4",{id:"arrayscopy"},"Arrays.copy()"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u96c6\u5408\u7528\u6765\u50a8\u5b58\u6570\u636e",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"type(T) == type(U) ? \u76f4\u63a5\u521b\u5efa : \u901a\u8fc7\u53cd\u5c04\u673a\u5236\u521b\u5efa"))),(0,r.kt)("li",{parentName:"ol"},"\u8c03\u7528 System.arraycopy() \u62f7\u8d1d\u5230\u65b0\u96c6\u5408\u4e0a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static <T,U> T[] copyOf(U[] original, int newLength, Class<? extends T[]> newType) {\n    @SuppressWarnings("unchecked")\n    T[] copy = ((Object)newType == (Object)Object[].class)\n        ? (T[]) new Object[newLength]\n        : (T[]) Array.newInstance(newType.getComponentType(), newLength);\n    System.arraycopy(original, 0, copy, 0,\n                        Math.min(original.length, newLength));\n    return copy;\n}\n')),(0,r.kt)("h3",{id:"collection"},"Collection"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u89e3\u91ca")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface Collection<E> extends Iterable<E> {\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7ee7\u627f\u81ea Iterable\uff0c\u5b9e\u73b0\u4e86 forEach && iterator && spliterator"),(0,r.kt)("li",{parentName:"ul"},"removeIf \u65b9\u6cd5\u4f20\u5165 Predicate(\u51fd\u6570\u63a5\u53e3\uff0c\u4f20\u5165\u6bd4\u8f83\u7684\u65b9\u6cd5), \u5229\u7528 Iterator \u8fed\u4ee3")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u6e90\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface MyCollection<E> extends Iterable<E> {\n    int size();\n    boolean isEmpty();\n    boolean contains(Object o);\n    Iterator<E> iterator();\n    Object[] toArray();\n    <T> T[] toArray(T[] a);\n    boolean add(E e);\n    boolean remove(Object o);\n    boolean containsAll(Collection<?> c);\n    boolean addAll(Collection<? extends E> c);\n    boolean removeAll(Collection<?> c);\n    default boolean removeIf(Predicate<? super E> filter) {\n        Objects.requireNonNull(filter);\n        boolean removed = false;\n        final Iterator<E> each = iterator();\n        while (each.hasNext()) {\n            if (filter.test(each.next())) {\n                each.remove();\n                removed = true;\n            }\n        }\n        return removed;\n    }\n    boolean retainAll(Collection<?> c);\n    void clear();\n    boolean equals(Object o);\n    int hashCode();\n\n    // \u81ea\u4ece 1.8\n    //default Spliterator<E> spliterator() {\n    //    return Spliterators.spliterator(this, 0);\n    //}\n    //default Stream<E> stream() {\n    //    return StreamSupport.stream(spliterator(), false);\n    //}\n    //default Stream<E> parallelStream() {\n    //    return StreamSupport.stream(spliterator(), true);\n    //}\n\n}\n")),(0,r.kt)("h3",{id:"list-1"},"List"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u89e3\u91ca")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u76f8\u6bd4\u4e8e Collection\uff0c\u4e3b\u8981\u589e\u52a0\u4e86"),(0,r.kt)("li",{parentName:"ul"},"get"),(0,r.kt)("li",{parentName:"ul"},"sort"),(0,r.kt)("li",{parentName:"ul"},"index \u76f8\u5173"),(0,r.kt)("li",{parentName:"ul"},"listIterator"),(0,r.kt)("li",{parentName:"ul"},"SubList")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u6e90\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface MyList<E> extends Collection<E> {\n    int size();\n    boolean isEmpty();\n    boolean contains(Object o);\n    Iterator<E> iterator();\n    Object[] toArray();\n    <T> T[] toArray(T[] a);\n    boolean add(E e);\n    boolean remove(Object o);\n    boolean containsAll(Collection<?> c);\n    boolean addAll(Collection<? extends E> c);\n    boolean addAll(int index, Collection<? extends E> c);\n    boolean removeAll(Collection<?> c);\n    boolean retainAll(Collection<?> c);\n    default void replaceAll(UnaryOperator<E> operator) {\n        Objects.requireNonNull(operator);\n        final ListIterator<E> li = this.listIterator();\n        while (li.hasNext()) {\n            li.set(operator.apply(li.next()));\n        }\n    }\n    default void sort(Comparator<? super E> c) {\n        Object[] a = this.toArray();\n        Arrays.sort(a, (Comparator) c);\n        ListIterator<E> i = this.listIterator();\n        for (Object e : a) {\n            i.next();\n            i.set((E) e);\n        }\n    }\n    void clear();\n    boolean equals(Object o);\n    int hashCode();\n    E get(int index);\n    E set(int index, E element);\n    void add(int index, E element);\n    E remove(int index);\n    int indexOf(Object o);\n    int lastIndexOf(Object o);\n    ListIterator<E> listIterator();\n    ListIterator<E> listIterator(int index);\n    List<E> subList(int fromIndex, int toIndex);\n")),(0,r.kt)("h3",{id:"abstractcollection"},"AbstractCollection"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u89e3\u91ca")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u4e86\u4e24\u4e2a\u62bd\u8c61\u65b9\u6cd5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract Iterator<E> iterator();\npublic abstract int size();\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u4e86 toArray() \u65b9\u6cd5")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u6e90\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract class MyAbstractCollection<E> implements Collection<E> {\n    protected MyAbstractCollection() {\n    }\n    public abstract Iterator<E> iterator();\n    public abstract int size();\n    public boolean isEmpty() {\n        return size() == 0;\n    }\n    public boolean contains(Object o) {\n        Iterator<E> it = iterator();\n        if (o==null) {\n            while (it.hasNext())\n                if (it.next()==null)\n                    return true;\n        } else {\n            while (it.hasNext())\n                if (o.equals(it.next()))\n                    return true;\n        }\n        return false;\n    }\n    public Object[] toArray() {\n        // Estimate size of array; be prepared to see more or fewer elements\n        Object[] r = new Object[size()];\n        Iterator<E> it = iterator();\n        for (int i = 0; i < r.length; i++) {\n            if (! it.hasNext()) // fewer elements than expected\n                return Arrays.copyOf(r, i);\n            r[i] = it.next();\n        }\n        return it.hasNext() ? finishToArray(r, it) : r;\n    }\n    public <T> T[] toArray(T[] a) {\n        // Estimate size of array; be prepared to see more or fewer elements\n        int size = size();\n        T[] r = a.length >= size ? a :\n                (T[])java.lang.reflect.Array\n                        .newInstance(a.getClass().getComponentType(), size);\n        Iterator<E> it = iterator();\n\n        for (int i = 0; i < r.length; i++) {\n            if (! it.hasNext()) { // fewer elements than expected\n                if (a == r) {\n                    r[i] = null; // null-terminate\n                } else if (a.length < i) {\n                    return Arrays.copyOf(r, i);\n                } else {\n                    System.arraycopy(r, 0, a, 0, i);\n                    if (a.length > i) {\n                        a[i] = null;\n                    }\n                }\n                return a;\n            }\n            r[i] = (T)it.next();\n        }\n        // more elements than expected\n        return it.hasNext() ? finishToArray(r, it) : r;\n    }\n    private static <T> T[] finishToArray(T[] r, Iterator<?> it) {\n        int len = r.length;\n        int i = len;\n        while (it.hasNext()) {\n            if (i == len) {\n                len = ArraysSupport.newLength(len,\n                        1,             /* minimum growth */\n                        (len >> 1) + 1 /* preferred growth */);\n                r = Arrays.copyOf(r, len);\n            }\n            r[i++] = (T)it.next();\n        }\n        // trim if overallocated\n        return (i == len) ? r : Arrays.copyOf(r, i);\n    }\n    public boolean add(E e) {\n        throw new UnsupportedOperationException();\n    }\n    public boolean remove(Object o) {\n        Iterator<E> it = iterator();\n        if (o==null) {\n            while (it.hasNext()) {\n                if (it.next()==null) {\n                    it.remove();\n                    return true;\n                }\n            }\n        } else {\n            while (it.hasNext()) {\n                if (o.equals(it.next())) {\n                    it.remove();\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    public boolean containsAll(Collection<?> c) {\n        for (Object e : c)\n            if (!contains(e))\n                return false;\n        return true;\n    }\n    public boolean addAll(Collection<? extends E> c) {\n        boolean modified = false;\n        for (E e : c)\n            if (add(e))\n                modified = true;\n        return modified;\n    }\n    public boolean removeAll(Collection<?> c) {\n        Objects.requireNonNull(c);\n        boolean modified = false;\n        Iterator<?> it = iterator();\n        while (it.hasNext()) {\n            if (c.contains(it.next())) {\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }\n    public boolean retainAll(Collection<?> c) {\n        Objects.requireNonNull(c);\n        boolean modified = false;\n        Iterator<E> it = iterator();\n        while (it.hasNext()) {\n            if (!c.contains(it.next())) {\n                it.remove();\n                modified = true;\n            }\n        }\n        return modified;\n    }\n    public void clear() {\n        Iterator<E> it = iterator();\n        while (it.hasNext()) {\n            it.next();\n            it.remove();\n        }\n    }\n    public String toString() {\n        Iterator<E> it = iterator();\n        if (! it.hasNext())\n            return \"[]\";\n        StringBuilder sb = new StringBuilder();\n        sb.append('[');\n        for (;;) {\n            E e = it.next();\n            sb.append(e == this ? \"(this Collection)\" : e);\n            if (! it.hasNext())\n                return sb.append(']').toString();\n            sb.append(',').append(' ');\n        }\n    }\n\n}\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u89e3\u91ca")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"toArray \u8be5\u65b9\u6cd5\u6ca1\u6709\u76f4\u63a5\u8fd4\u56de\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5e94\u5bf9\u591a\u7ebf\u7a0b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public Object[] toArray() {\n    // Estimate size of array; be prepared to see more or fewer elements\n    Object[] r = new Object[size()];\n    Iterator<E> it = iterator();\n    for (int i = 0; i < r.length; i++) {\n        if (! it.hasNext()) // fewer elements than expected\n            return Arrays.copyOf(r, i);\n        r[i] = it.next();\n    }\n    return it.hasNext() ? finishToArray(r, it) : r;\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4e3a\u4ec0\u4e48\u4e0d\u662f\u904d\u5386\u8fed\u4ee3\u5668\uff1f\u5982\u679c\u6709\u591a\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u8be5\u96c6\u5408\uff0c\u5176\u4e2d\u67d0\u4e2a\u7ebf\u7a0b\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u4e86\u5143\u7d20\uff0c\u6b64\u65f6\u5982\u679c\u5728\u8fed\u4ee3\u5668\u7684\u904d\u5386\u4e2d\u5411\u6570\u7ec4\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5219\u4f1a\u629b\u51fa\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u4e3a\u4ec0\u4e48\u8fd4\u56de\u4e00\u4e2a\u65b0\u6570\u7ec4\uff1f\u5982\u679c\u591a\u7ebf\u7a0b\u5220\u9664\u4e86\u5143\u7d20\uff0c\u65b0\u6570\u7ec4\u957f\u5ea6\u66f4\u5c0f\uff0c\u8282\u7ea6\u7a7a\u95f4 \u5982\u679c\u591a\u7ebf\u7a0b\u6dfb\u52a0\u4e86\u5143\u7d20\uff0c\u8c03\u7528 finishToArray")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private static <T> T[] finishToArray(T[] r, Iterator<?> it) {\n    int len = r.length;\n    int i = len;\n    while (it.hasNext()) {\n        if (i == len) {\n            len = ArraysSupport.newLength(len,\n                    1,             /* minimum growth */\n                    (len >> 1) + 1 /* preferred growth */);\n            r = Arrays.copyOf(r, len);\n        }\n        r[i++] = (T)it.next();\n    }\n    // trim if overallocated\n    return (i == len) ? r : Arrays.copyOf(r, i);\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8be5\u65b9\u6cd5\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4f1a\u6bd4\u8f83\u5f53\u524d\u6570\u7ec4\u957f\u5ea6\u4e0e\u8fed\u4ee3\u5668\u957f\u5ea6\uff0c\u5229\u7528 Array.copyOf \u8fdb\u884c\u6269\u5bb9 \u6700\u540e\u8fd4\u56de\u524d\u518d\u6b21\u5224\u65ad\uff0c\u786e\u4fdd\u6570\u7ec4\u5bb9\u91cf\u4e0e\u5b9e\u9645\u6570\u636e\u957f\u5ea6\u76f8\u540c")),(0,r.kt)("h3",{id:"abstractlist"},"AbstractList"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6982\u8ff0")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"extend",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"AbstractList \u7ee7\u627f\u81ea AbstractCollection \u62bd\u8c61\u7c7b\uff0c\u5b9e\u73b0\u4e86 List \u63a5\u53e3\uff0c"),(0,r.kt)("li",{parentName:"ul"},"\u5b83\u5b9e\u73b0\u4e86 List \u7684\u4e00\u4e9b\u4f4d\u7f6e\u76f8\u5173\u64cd\u4f5c (\u6bd4\u5982 get,set,add,remove)\uff0c\u662f\u7b2c\u4e00\u4e2a\u5b9e\u73b0\u968f\u673a\u8bbf\u95ee\u65b9\u6cd5\u7684\u96c6\u5408\u7c7b\uff0c\u4f46\u4e0d\u652f\u6301\u6dfb\u52a0\u548c\u66ff\u6362\u3002"),(0,r.kt)("li",{parentName:"ul"},"AbstractList \u5185\u90e8\u5df2\u7ecf\u63d0\u4f9b\u4e86 Iterator, ListIterator \u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u7c7b\uff0c\u5206\u522b\u4e3a Itr, ListItr"),(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u4e86 SubList \u7c7b"))),(0,r.kt)("li",{parentName:"ul"},"super",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u662f ArrayList \u548c AbstractSequentiaList \u7684\u7236\u7c7b\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u4e86\u4e00\u4e2a\u62bd\u8c61\u7c7b ",(0,r.kt)("inlineCode",{parentName:"li"},"public abstract E get(int index);"))))),(0,r.kt)("h4",{id:"modcount-\u4e0e-fail-fast"},"modCount \u4e0e fail-fast"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"modCount \u4f5c\u7528\u662f\u8bb0\u5f55\u96c6\u5408\u7ed3\u6784\u88ab\u6539\u53d8\u7684\u6b21\u6570 (\u6dfb\u52a0\uff0c\u5220\u9664\u7b49\u7b49), \u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u5176\u4ed6\u7ebf\u7a0b\uff0c\u6216\u8005\u81ea\u5df1\u5bf9\u96c6\u5408\u7ed3\u6784\u4fee\u6539\uff0c\u5e76\u4e0d\u53ea\u662f\u66f4\u6539\u5143\u7d20\u5185\u5bb9"),(0,r.kt)("li",{parentName:"ul"},"fail-fast \u673a\u5236\u5728\u8fed\u4ee3\u5668\u4e2d\u5b9e\u73b0\uff0c\nfail-fast \u673a\u5236\u5e76\u4e0d\u4fdd\u8bc1\u5728\u4e0d\u540c\u6b65\u7684\u4fee\u6539\u4e0b\u4e00\u5b9a\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u5b83\u53ea\u662f\u5c3d\u6700\u5927\u52aa\u529b\u53bb\u629b\u51fa\uff0c\u6240\u4ee5\u8fd9\u79cd\u673a\u5236\u4e00\u822c\u4ec5\u7528\u4e8e\u68c0\u6d4b bug\u3002")),(0,r.kt)("h4",{id:"itr-\u7c7b"},"Itr \u7c7b"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7279\u5f81\u53d8\u91cf")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"cursor: \u662f\u6307\u96c6\u5408\u904d\u5386\u8fc7\u7a0b\u4e2d\u7684\u5373\u5c06\u904d\u5386\u7684\u5143\u7d20\u7684\u7d22\u5f15"),(0,r.kt)("li",{parentName:"ul"},"lastRet: \u5b83\u4e3b\u8981\u7528\u4e8e\u8bb0\u5f55\u521a\u521a\u904d\u5386\u8fc7\u7684\u5143\u7d20\u7684\u7d22\u5f15"),(0,r.kt)("li",{parentName:"ul"},"expectedModCount: \u4e3a\u96c6\u5408\u4fee\u6539\u6b21\u6570 (\u9ed8\u8ba4\u4e3a 0) ",(0,r.kt)("inlineCode",{parentName:"li"},"int expectedModCount = modCount;"))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u6e90\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private class Itr implements Iterator<E> {\n        /**\n         * Index of element to be returned by subsequent call to next.\n         */\n        int cursor = 0;\n\n        /**\n         * Index of element returned by most recent call to next or\n         * previous.  Reset to -1 if this element is deleted by a call\n         * to remove.\n         */\n        int lastRet = -1;\n\n        /**\n         * The modCount value that the iterator believes that the backing\n         * List should have.  If this expectation is violated, the iterator\n         * has detected concurrent modification.\n         */\n        int expectedModCount = modCount;\n\n        public boolean hasNext() {\n            return cursor != size();\n        }\n\n        public E next() {\n            checkForComodification();\n            try {\n                int i = cursor;\n                E next = get(i);\n                lastRet = i;\n                cursor = i + 1;\n                return next;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException(e);\n            }\n        }\n\n        public void remove() {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                AbstractList.this.remove(lastRet);\n                if (lastRet < cursor)\n                    cursor--;\n                lastRet = -1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException e) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        final void checkForComodification() {\n            if (modCount != expectedModCount)\n                throw new ConcurrentModificationException();\n        }\n    }\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"\u89e3\u91ca")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"iterator \u8fdb\u884c next() \u548c remove() \u524d\u90fd\u9700\u8981\u8fdb\u884c checkForComodification(), \u68c0\u67e5\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u96c6\u5408\u7ed3\u6784\u662f\u5426\u653e\u751f\u6539\u53d8 ?\n\u629b\u51fa ConcurrentModificationException() : \u6b63\u5e38\u6267\u884c"),(0,r.kt)("li",{parentName:"ul"},"\u8fed\u4ee3\u5668\u81ea\u8eab\u7684 next, remove \u4e0d\u4f1a\u5bf9 modCount \u8fdb\u884c\u4fee\u6539\uff0c\u96c6\u5408\u8c03\u7528 add \u7b49\u65b9\u6cd5\u65f6\u4f1a\u4fee\u6539")),(0,r.kt)("h4",{id:"\u5982\u4f55\u907f\u514d-fail-fast"},"\u5982\u4f55\u907f\u514d fail-fast"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u8c03\u7528 Iterator \u81ea\u8eab\u7684 remove() \u800c\u4e0d\u662f\u96c6\u5408\u7684\nItr.remove() \u5e76\u4e0d\u4f1a\u4fee\u6539 modCount \u7684\u503c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5bf9\u540e\u9762\u7684\u904d\u5386\u9020\u6210\u5f71\u54cd\uff0c\u56e0\u4e3a\u8be5\u65b9\u6cd5 remove \u4e0d\u80fd\u6307\u5b9a\u5143\u7d20\uff0c\u53ea\u80fd remove \u5f53\u524d\u904d\u5386\u8fc7\u7684\u90a3\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u8c03\u7528\u8be5\u65b9\u6cd5\u5e76\u4e0d\u4f1a\u53d1\u751f fail-fast \u73b0\u8c61\u3002\u8be5\u65b9\u6cd5\u6709\u5c40\u9650\u6027\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528 java \u5e76\u53d1\u5305 (java.util.concurrent) \u4e2d\u7684\u7c7b\u6765\u4ee3\u66ff ArrayList \u548c hashMap\u3002\u793a\u4f8b")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CopyOnWriterArrayList\nCopyOnWriter \u662f\u5199\u65f6\u590d\u5236\u7684\u5bb9\u5668 (COW)\uff0c\u5728\u8bfb\u5199\u65f6\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u8be5\u5bb9\u5668\u5728\u5bf9 add \u548c remove \u7b49\u64cd\u4f5c\u65f6\uff0c\u5e76\u4e0d\u662f\u5728\u539f\u6570\u7ec4\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u800c\u662f\u5c06\u539f\u6570\u7ec4\u62f7\u8d1d\u4e00\u4efd\uff0c\u5728\u65b0\u6570\u7ec4\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5f85\u5b8c\u6210\u540e\uff0c\u624d\u5c06\u6307\u5411\u65e7\u6570\u7ec4\u7684\u5f15\u7528\u6307\u5411\u65b0\u6570\u7ec4\uff0c\u6240\u4ee5\u5bf9\u4e8e\nCopyOnWriterArrayList \u5728\u8fed\u4ee3\u8fc7\u7a0b\u5e76\u4e0d\u4f1a\u53d1\u751f fail-fast \u73b0\u8c61\u3002\u4f46\nCopyOnWrite \u5bb9\u5668\u53ea\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u6700\u7ec8\u4e00\u81f4\u6027\uff0c\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u5b9e\u65f6\u4e00\u81f4\u6027\u3002"),(0,r.kt)("li",{parentName:"ul"},"ConcurrentHashMap\nConcurrentHashMap \u91c7\u7528\u4e86\u9501\u673a\u5236\uff0c\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u5728\u8fed\u4ee3\u65b9\u9762\uff0cConcurrentHashMap \u4f7f\u7528\u4e86\u4e00\u79cd\u4e0d\u540c\u7684\u8fed\u4ee3\u65b9\u5f0f\u3002\u5728\u8fd9\u79cd\u8fed\u4ee3\u65b9\u5f0f\u4e2d\uff0c\u5f53 iterator \u88ab\u521b\u5efa\u540e\u96c6\u5408\u518d\u53d1\u751f\u6539\u53d8\u5c31\u4e0d\u518d\u662f\u629b\u51fa ConcurrentModificationException\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5728\u6539\u53d8\u65f6 new \u65b0\u7684\u6570\u636e\u4ece\u800c\u4e0d\u5f71\u54cd\u539f\u6709\u7684\u6570\u636e\n\uff0citerator \u5b8c\u6210\u540e\u518d\u5c06\u5934\u6307\u9488\u66ff\u6362\u4e3a\u65b0\u7684\u6570\u636e\n\uff0c\u8fd9\u6837 iterator \u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u7528\u539f\u6765\u8001\u7684\u6570\u636e\uff0c\u800c\u5199\u7ebf\u7a0b\u4e5f\u53ef\u4ee5\u5e76\u53d1\u7684\u5b8c\u6210\u6539\u53d8\u3002\u5373\u8fed\u4ee3\u4e0d\u4f1a\u53d1\u751f fail-fast\uff0c\u4f46\u4e0d\u4fdd\u8bc1\u83b7\u53d6\u7684\u662f\u6700\u65b0\u7684\u6570\u636e\u3002")),(0,r.kt)("h4",{id:"listitr-\u7c7b"},"ListItr \u7c7b"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6982\u8ff0")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ListItr \u7ee7\u627f\u81ea Itr \u5b9e\u73b0\u4e86 ListIterator \u63a5\u53e3"),(0,r.kt)("li",{parentName:"ul"},"\u6dfb\u52a0\u4e86 previous(\u8fd4\u56de\u524d\u4e00\u4f4d), add(\u589e\u52a0), set(\u4fee\u6539) \u65b9\u6cd5"),(0,r.kt)("li",{parentName:"ul"},"\u4e0e Itr \u4e00\u6837\uff0c\u6bcf\u6b21\u4fee\u6539\u524d\u9700\u8981\u68c0\u67e5 modCount \u662f\u5426\u4e00\u81f4\uff0c\u4fee\u6539\u540e\u518d\u6b21\u540c\u6b65 modCount")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u6e90\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private class ListItr extends Itr implements ListIterator<E> {\n        ListItr(int index) {\n            cursor = index;\n        }\n\n        public boolean hasPrevious() {\n            return cursor != 0;\n        }\n\n        public E previous() {\n            checkForComodification();\n            try {\n                int i = cursor - 1;\n                E previous = get(i);\n                lastRet = cursor = i;\n                return previous;\n            } catch (IndexOutOfBoundsException e) {\n                checkForComodification();\n                throw new NoSuchElementException(e);\n            }\n        }\n\n        public int nextIndex() {\n            return cursor;\n        }\n\n        public int previousIndex() {\n            return cursor-1;\n        }\n\n        public void set(E e) {\n            if (lastRet < 0)\n                throw new IllegalStateException();\n            checkForComodification();\n\n            try {\n                AbstractList.this.set(lastRet, e);\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException ex) {\n                throw new ConcurrentModificationException();\n            }\n        }\n\n        public void add(E e) {\n            checkForComodification();\n\n            try {\n                int i = cursor;\n                AbstractList.this.add(i, e);\n                lastRet = -1;\n                cursor = i + 1;\n                expectedModCount = modCount;\n            } catch (IndexOutOfBoundsException ex) {\n                throw new ConcurrentModificationException();\n            }\n        }\n    }\n")),(0,r.kt)("h4",{id:""}),(0,r.kt)("h3",{id:"arraylist"},"ArrayList"),(0,r.kt)("admonition",{title:"\u6ce8\u610f ArrayList \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u9700\u8981\uff0c",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 Collections.synchronizedList \u65b9\u6cd5\u201c\u5305\u88c5\u201d\u5217\u8868\u3002\u6700\u597d\u5728\u521b\u5efa\u65f6\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u4ee5\u9632\u6b62\u610f\u5916\u4e0d\u540c\u6b65\u5730\u8bbf\u95ee\u5217\u8868 - from Josh\nBloch, Neal Gafter :::"),(0,r.kt)("h4",{parentName:"admonition",id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u521b\u5efa")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class ArrayList<E>\n    extends AbstractList<E>\n    implements List<E>, RandomAccess, Cloneable, java.io.Serializable\n")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"\u6784\u9020\u51fd\u6570\uff1a")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u65e0\u53c2\u957f\u5ea6\u9ed8\u8ba4\u4e3a 10"),(0,r.kt)("li",{parentName:"ul"},"\u6307\u5b9a\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ul"},"\u4ece\u53e6\u4e00\u4e2a Collection \u62f7\u8d1d")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public ArrayList(Collection<? extends E> c) {\n        Object[] a = c.toArray();\n        if ((size = a.length) != 0) {\n            if (c.getClass() == ArrayList.class) {\n                elementData = a;\n            } else {\n                elementData = Arrays.copyOf(a, size, Object[].class);\n            }\n        } else {\n            // replace with empty array.\n            elementData = EMPTY_ELEMENTDATA;\n        }\n    }\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u5176\u4ed6\u65b9\u6cd5"},"\u5176\u4ed6\u65b9\u6cd5"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"trimToSize(\u6700\u5c0f\u5316)")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u7528\u6765\u6700\u5c0f\u5316\u5b9e\u4f8b\u5b58\u50a8\uff0c\u5c06\u5bb9\u5668\u5927\u5c0f\u8c03\u6574\u4e3a\u5f53\u524d\u5143\u7d20\u6240\u5360\u7528\u7684\u5bb9\u91cf\u5927\u5c0f\u3002")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public void trimToSize() {\n    modCount++;\n    if (size < elementData.length) {\n        elementData = (size == 0)\n            ? EMPTY_ELEMENTDATA\n            : Arrays.copyOf(elementData, size);\n    }\n}\n")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"ensureCapacity(\u6700\u5927\u5316)")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u5229\u7528 grow(minCapacity) \u4e3b\u52a8\u6269\u5bb9\uff0c\u5f53\u9700\u8981\u6269\u5927\u7684\u5bb9\u91cf\u5f88\u5927\u65f6\uff0c\u80fd\u6709\u6548\u63d0\u9ad8\u6548\u7387")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public void ensureCapacity(int minCapacity) {\n    if (minCapacity > elementData.length\n        && !(elementData == DEFAULTCAPACITY_EMPTY_ELEMENTDATA\n                && minCapacity <= DEFAULT_CAPACITY)) {\n        modCount++;\n        grow(minCapacity);\n    }\n}\n")),(0,r.kt)("ol",{parentName:"admonition",start:3},(0,r.kt)("li",{parentName:"ol"},"addAll")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"modCount++"),(0,r.kt)("li",{parentName:"ul"},"\u62f7\u8d1d\u65b0\u96c6\u5408"),(0,r.kt)("li",{parentName:"ul"},"\u5224\u65ad\u662f\u5426\u8d85\u51fa\u539f\u96c6\u5408\u5269\u4f59\u5bb9\u91cf"),(0,r.kt)("li",{parentName:"ul"},"System.copy()")),(0,r.kt)("ol",{parentName:"admonition",start:4},(0,r.kt)("li",{parentName:"ol"},"shiftTailOverGap")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u5c06\u67d0\u6bb5\u5143\u7d20\u8fdb\u884c\u5e73\u79fb")),(0,r.kt)("ol",{parentName:"admonition",start:5},(0,r.kt)("li",{parentName:"ol"},"batchRemove retainAll , removeAll \u5747\u901a\u8fc7\u8c03\u7528\u6b64\u65b9\u6cd5\u5b9e\u73b0"),(0,r.kt)("li",{parentName:"ol"},"\u7b2c\u4e00\u6b21\u5faa\u73af\uff0c\u8bb0\u5f55\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e"),(0,r.kt)("li",{parentName:"ol"},"\u7b2c\u4e8c\u6b21\u5faa\u73af")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"for (Object e; r < end; r++)\n    if (c.contains(e = es[r]) == complement)\n        es[w++] = e;\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"r: \u8bb0\u5f55\u904d\u5386\u5230\u7684 index"),(0,r.kt)("li",{parentName:"ul"},"w: \u8bb0\u5f55\u539f\u59cb\u6570\u7ec4\u88ab\u8986\u76d6\u5230\u7684 index"),(0,r.kt)("li",{parentName:"ul"},"\u8fd9\u90e8\u5206\u7684\u610f\u601d\u662f\uff0cw \u7684\u76ee\u7684\u662f\u8bb0\u5f55\u65b0\u7684\u5185\u5bb9\u8986\u76d6\u6389\u539f\u6709\u7684\u5185\u5bb9\uff0c\u8986\u76d6\u7684\u539f\u5219\u662f\uff0c\u5224\u65ad elementData","[r]"," \u662f\u5426\u7b26\u5408\u9700\u8981\uff0c\u82e5\u7b26\u5408\u5c31\u628a\u4ed6\u7c98\u5230 w \u5904"),(0,r.kt)("li",{parentName:"ul"},"\u6700\u540e finally \u6267\u884c shiftTailOverGap\uff0c\u76ee\u7684\u662f\u628a\u540e\u9762\u7684\u4e71\u4e03\u516b\u7cdf\u7684\u540e\u7f00")),(0,r.kt)("h4",{parentName:"admonition",id:"\u6838\u5fc3\u65b9\u6cd5"},"\u6838\u5fc3\u65b9\u6cd5"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"grow")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u4f20\u53c2 ",(0,r.kt)("inlineCode",{parentName:"li"},"return grow(size + 1);")),(0,r.kt)("li",{parentName:"ul"},"\u4f20\u53c2")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private Object[] grow(int minCapacity) {\n    int oldCapacity = elementData.length;\n    if (oldCapacity > 0 || elementData != DEFAULTCAPACITY_EMPTY_ELEMENTDATA) {\n        int newCapacity = ArraysSupport.newLength(oldCapacity,\n                minCapacity - oldCapacity, /* minimum growth */\n                oldCapacity >> 1           /* preferred growth */);\n        return elementData = Arrays.copyOf(elementData, newCapacity);\n    } else {\n        return elementData = new Object[Math.max(DEFAULT_CAPACITY, minCapacity)];\n    }\n}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u6269\u5bb9\u65f6\u6ca1\u6709\u5143\u7d20\u76f4\u63a5\u9614\u5230 max(10, minCapacity)"),(0,r.kt)("li",{parentName:"ul"},"\u82e5\u6709\u5143\u7d20\uff0c\u7531\u4e8e\u53f3\u79fb\u8fd0\u7b97\u7b26\u7684\u5b58\u5728\uff0c\u6bcf\u6b21\u6269\u5bb9\u5e76\u4e0d\u4e00\u5b9a\u662f minCapacity \u7684\u7684\u5927\u5c0f\uff0c\u4e00\u822c\u4e3a\u539f\u5927\u5c0f\u7684 1.5 \u500d\uff0c\n\u5177\u4f53\u53ef\u4ee5\u67e5\u770b System.newLength \u548c System.hugeLength")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"clone() \u5e38\u89c4\u7684\u6d45\u62f7\u8d1d")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"add(), set(), remove()"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"new ArrayList()",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u8c03\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u65b0\u7684\u7a7a\u96c6\u5408\u96c6\u5408"),(0,r.kt)("li",{parentName:"ul"},"\u901a\u8fc7 AbstractList \u521b\u5efa modCount=0"))),(0,r.kt)("li",{parentName:"ol"},"add():",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"modCount++"),(0,r.kt)("li",{parentName:"ul"},"if elementData.length >= 0 ? \u6269\u5bb9 50% :\u6269\u5bb9\u9ed8\u8ba4 10 \u683c"),(0,r.kt)("li",{parentName:"ul"},"elementData","[size]"," = e (size \u662f\u5df2\u7ecf\u5b58\u5165\u7684\u6570\u636e\u4e2a\u6570)"))),(0,r.kt)("li",{parentName:"ol"},"\u82e5\u96c6\u5408\u6ee1\u4e86\u5219\u5148\u8c03\u7528 grow() \u6269\u5bb9\uff0c\u5728\u8d4b\u503c"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"add(index), remove(index)"))),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"add(index) \u540c\u7406\uff0c\u6269\u5bb9\u91c7\u7528 System.arraycopy \u5728\u539f\u6570\u7ec4\u4e0a\u6269\u5bb9"),(0,r.kt)("li",{parentName:"ul"},"\u82e5 index \u4e0d\u662f\u6700\u540e\u4e00\u4e2a\uff0c\u5219\u9700\u8981\u5148\u7528 System.arraycopy \u4ece index \u8ba9\u540e\u65b9\u7684\u6570\u636e\u5411\u540e\u632a\u4e00\u4f4d\uff0c\u7a7a\u51fa\u65b0\u7684\u4f4d\u7f6e\u7528\u6765\u63d2\u5165")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"System.arraycopy(elementData, index,\n                         elementData, index + 1,\n                         s - index);\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"remove(index) \u8c03\u7528\u4e86 fastRemove(), \u901a\u8fc7 System.arraycopy() \u6700\u5c0f\u5316\u5bb9\u5668\uff0c\u5728\u5c06\u6307\u5b9a\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a null")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private void fastRemove(Object[] es, int i) {\n    modCount++;\n    final int newSize;\n    if ((newSize = size - 1) > i)\n        System.arraycopy(es, i + 1, es, i, newSize - i);\n    es[size = newSize] = null;\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"\u5f85\u7eed"},"\u5f85\u7eed..."),(0,r.kt)("h2",{parentName:"admonition",id:"set"},"Set"),(0,r.kt)("h3",{parentName:"admonition",id:"set-1"},"Set"),(0,r.kt)("h4",{parentName:"admonition",id:"\u6982\u8ff0-1"},"\u6982\u8ff0"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface Set<E> extends Collection<E> {\n")),(0,r.kt)("h3",{parentName:"admonition",id:"abstractset"},"AbstractSet"),(0,r.kt)("h4",{parentName:"admonition",id:"\u6982\u8ff0-2"},"\u6982\u8ff0"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract class AbstractSet<E> extends AbstractCollection<E> implements Set<E> {\n")),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u7ee7\u627f\u81ea AbstractCollection\uff0c\u5b9e\u73b0\u4e86 Set \u63a5\u53e3"),(0,r.kt)("li",{parentName:"ol"},"\u53ea\u91cd\u5199\u4e86 equals(), hashcode(), removeAll() \u65b9\u6cd5\uff0c\u51e0\u4e4e\u6ca1\u53d8")),(0,r.kt)("h3",{parentName:"admonition",id:"\u5f85\u7eed-1"},"\u5f85\u7eed..."),(0,r.kt)("h2",{parentName:"admonition",id:"map"},"Map"),(0,r.kt)("h3",{parentName:"admonition",id:"\u63a5\u53e3-map"},"\u63a5\u53e3 Map"),(0,r.kt)("h3",{parentName:"admonition",id:"map-1"},"Map"),(0,r.kt)("h4",{parentName:"admonition",id:"\u57fa\u7840\u65b9\u6cd5"},"\u57fa\u7840\u65b9\u6cd5"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface Map<K, V> {\n    int size();\n    boolean isEmpty();\n    boolean containsKey(Object key);\n    boolean containsValue(Object value);\n    V get(Object key);\n    V put(K key, V value);\n    V remove(Object key);\n    void putAll(Map<? extends K, ? extends V> m);\n    void clear();\n\n    Set<K> keySet();\n    Collection<V> values();\n    Set<Map.Entry<K, V>> entrySet();\n\n    static <K, V> Map<K, V> of(K k1, V v1, K k2, V v2) {  // \u6700\u5927\u652f\u6301 10 \u5bf9\n        return new ImmutableCollections.MapN<>(k1, v1, k2, v2);\n    }\n    default boolean remove(Object key, Object value) { // \u5141\u8bb8 key \u4e3a null\n        Object curValue = get(key);\n        if (!Objects.equals(curValue, value) ||\n            (curValue == null && !containsKey(key))) {\n            return false;\n        }\n        remove(key);\n        return true;\n    }\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u5185\u90e8-entry-\u63a5\u53e3"},"\u5185\u90e8 Entry \u63a5\u53e3"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"interface Entry<K, V> {\n    K getKey();\n    V getValue();\n    V setValue(V value);\n    boolean equals(Object o);\n    int hashCode();\n    public static <K extends Comparable<? super K>, V> Comparator<Map.Entry<K, V>> comparingByKey() {\n        return (Comparator<Map.Entry<K, V>> & Serializable) (c1, c2) -> c1.getKey().compareTo(c2.getKey());\n    }\n    public static <K, V extends Comparable<? super V>> Comparator<Map.Entry<K, V>> comparingByValue() {}\n    public static <K, V> Comparator<Map.Entry<K, V>> comparingByKey(Comparator<? super K> cmp) {\n        Objects.requireNonNull(cmp);\n        return (Comparator<Map.Entry<K, V>> & Serializable) (c1, c2) -> cmp.compare(c1.getKey(), c2.getKey());\n    }\n    public static <K, V> Comparator<Map.Entry<K, V>> comparingByValue(Comparator<? super V> cmp) {}\n}\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u5176\u4ed6\u65b9\u6cd5-1"},"\u5176\u4ed6\u65b9\u6cd5"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"equal hashcode"),(0,r.kt)("li",{parentName:"ul"},"3 \u4e2a replace 4 \u4e2a ifAbsent 1 \u4e2a merge")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    boolean equals(Object o);\n    int hashCode();\n    default V getOrDefault(Object key, V defaultValue) {  // \u6ca1\u6709\u5219\u8fd4\u56de\n        V v;\n        return (((v = get(key)) != null) || containsKey(key))\n            ? v\n            : defaultValue;\n    }\n    default void forEach(BiConsumer<? super K, ? super V> action) {\n        Objects.requireNonNull(action);\n        for (Map.Entry<K, V> entry : entrySet()) {\n            K k;\n            V v;\n            try {\n                k = entry.getKey();\n                v = entry.getValue();\n            } catch (IllegalStateException ise) {\n                // this usually means the entry is no longer in the map.\n                throw new ConcurrentModificationException(ise);\n            }\n            action.accept(k, v);\n        }\n    }\n    default boolean replace(K key, V oldValue, V newValue) {\n        Object curValue = get(key);\n        if (!Objects.equals(curValue, oldValue) ||\n            (curValue == null && !containsKey(key))) {\n            return false;\n        }\n        put(key, newValue);\n        return true;\n    }\n    default V replace(K key, V value) {}\n    default void replaceAll(BiFunction<? super K, ? super V, ? extends V> function) {  // function \u6279\u91cf\u5904\u7406\n        Objects.requireNonNull(function);\n        for (Map.Entry<K, V> entry : entrySet()) {\n            K k;\n            V v;\n            try {\n                k = entry.getKey();\n                v = entry.getValue();\n            } catch (IllegalStateException ise) {\n                // this usually means the entry is no longer in the map.\n                throw new ConcurrentModificationException(ise);\n            }\n\n            // ise thrown from function is not a cme.\n            v = function.apply(k, v);\n\n            try {\n                entry.setValue(v);\n            } catch (IllegalStateException ise) {\n                // this usually means the entry is no longer in the map.\n                throw new ConcurrentModificationException(ise);\n            }\n        }\n    }\n    default V putIfAbsent(K key, V value) {  // \u4e0d\u5b58\u5728 key \u5219\u6dfb\u52a0\n        V v = get(key);\n        if (v == null) {\n            v = put(key, value);\n        }\n        return v;\n    }\n\n    // computeIfPresent \u540c\u7406\n    // compute \u7528 key \u548c value \u751f\u4ea7\u65b0\u7684 value\n    default V computeIfAbsent(K key,\n            Function<? super K, ? extends V> mappingFunction) {  // \u4e0d\u5b58\u5728\u5c31\u7528\u65b9\u6cd5\u65b0\u5efa\n        Objects.requireNonNull(mappingFunction);\n        V v;\n        if ((v = get(key)) == null) {\n            V newValue;\n            if ((newValue = mappingFunction.apply(key)) != null) {\n                put(key, newValue);\n                return newValue;\n            }\n        }\n\n        return v;\n    }\n    default V merge(K key, V value,\n        BiFunction<? super V, ? super V, ? extends V> remappingFunction) {\n        Objects.requireNonNull(remappingFunction);\n        Objects.requireNonNull(value);\n        V oldValue = get(key);\n        V newValue = (oldValue == null) ? value :\n                remappingFunction.apply(oldValue, value);\n        if (newValue == null) {\n            remove(key);\n        } else {\n            put(key, newValue);\n        }\n        return newValue;\n    }\n")),(0,r.kt)("h3",{parentName:"admonition",id:"abstractmap"},"AbstractMap"),(0,r.kt)("h4",{parentName:"admonition",id:"\u6982\u8ff0-3"},"\u6982\u8ff0"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 Map \u63a5\u53e3\uff0c\u6ca1\u6709\u5b9e\u73b0 Map.Entry() \u63a5\u53e3"),(0,r.kt)("li",{parentName:"ol"},"\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract Set<Entry<K,V>> entrySet();\n")),(0,r.kt)("ol",{parentName:"admonition",start:3},(0,r.kt)("li",{parentName:"ol"},"\u9ed8\u8ba4\u4e0d\u652f\u6301\u4fee\u6539")),(0,r.kt)("h4",{parentName:"admonition",id:"enttryset"},"enttrySet()"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public abstract Set<Entry<K,V>> entrySet();\n")),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u5f53\u6211\u4eec\u8981\u5b9e\u73b0\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684 Map \u65f6\uff0c\u53ea\u9700\u8981\u7ee7\u627f\u8fd9\u4e2a\u7c7b\uff0c\u7136\u540e\u5b9e\u73b0 entrySet() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u4fdd\u5b58\u6240\u6709 key-value \u6620\u5c04\u7684\nset\u3002\u901a\u5e38\u8fd9\u4e2a Set \u4e0d\u652f\u6301 add(), remove() \u65b9\u6cd5\uff0cSet \u5bf9\u5e94\u7684\u8fed\u4ee3\u5668\u4e5f\u4e0d\u652f\u6301 remove() \u65b9\u6cd5\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c\u60f3\u8981\u5b9e\u73b0\u4e00\u4e2a\u53ef\u53d8\u7684 Map\uff0c\u6211\u4eec\u9700\u8981\u5728\u4e0a\u8ff0\u64cd\u4f5c\u5916\uff0c\u91cd\u5199 put() \u65b9\u6cd5\uff0c\u56e0\u4e3a \u9ed8\u8ba4\u4e0d\u652f\u6301 put \u64cd\u4f5c\uff1a")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public V put(K key, V value) {\n    throw new UnsupportedOperationException();\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"\u800c\u4e14 entrySet() \u8fd4\u56de\u7684 Set \u7684\u8fed\u4ee3\u5668\uff0c\u4e5f\u5f97\u5b9e\u73b0 remove() \u65b9\u6cd5\uff0c\u56e0\u4e3a AbstractMap \u4e2d\u7684 \u5220\u9664\u76f8\u5173\u64cd\u4f5c\u90fd\u9700\u8981\u8c03\u7528\u8be5\u8fed\u4ee3\u5668\u7684\nremove() \u65b9\u6cd5\u3002"),(0,r.kt)("h4",{parentName:"admonition",id:"\u57fa\u7840\u65b9\u6cd5-1"},"\u57fa\u7840\u65b9\u6cd5"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"put() \u9ed8\u8ba4\u9700\u8981\u91cd\u5199\uff0c\u5426\u5219\u76f4\u63a5\u629b\u5f02\u5e38"),(0,r.kt)("li",{parentName:"ol"},"\u5176\u4ed6\u65e0\u975e\u90fd\u662f Iterator \u904d\u5386")),(0,r.kt)("h4",{parentName:"admonition",id:"\u4e09\u4e2a\u89c6\u56fe"},"\u4e09\u4e2a\u89c6\u56fe"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u83b7\u53d6\u6240\u6709\u952e ",(0,r.kt)("inlineCode",{parentName:"li"},"public Set<K> keySet() {")),(0,r.kt)("li",{parentName:"ol"},"\u83b7\u53d6\u6240\u6709\u503c ",(0,r.kt)("inlineCode",{parentName:"li"},"public Collection<V> values() {")),(0,r.kt)("li",{parentName:"ol"},"\u83b7\u53d6\u6240\u6709\u952e\u503c\u5bf9 ",(0,r.kt)("inlineCode",{parentName:"li"},"public abstract Set<Entry<K,V>> entrySet();"))),(0,r.kt)("h3",{parentName:"admonition",id:"sortedmap"},"SortedMap"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface SortedMap<K,V> extends Map<K,V> {\n")),(0,r.kt)("p",{parentName:"admonition"},"\u5185\u7f6e\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Comparator<? super K> comparator();\nSortedMap<K,V> subMap(K fromKey, K toKey);\nSortedMap<K,V> headMap(K toKey);\nSortedMap<K,V> tailMap(K fromKey);\nK firstKey();\nK lastKey();\nSet<K> keySet();\nCollection<V> values();\nSet<Map.Entry<K, V>> entrySet();\n")),(0,r.kt)("h3",{parentName:"admonition",id:"navigablemap"},"NavigableMap"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface NavigableMap<K,V> extends SortedMap<K,V> {\n")),(0,r.kt)("p",{parentName:"admonition"},"\u5185\u7f6e\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Map.Entry<K,V> lowerEntry(K key);  // \u6bd4\u7ed9\u5b9a\u7684 entry \u5c0f\u7684\u6700\u5927\u7684 entry\nK lowerKey(K key);\nMap.Entry<K,V> floorEntry(K key);\nK floorKey(K key); // <=\nMap.Entry<K,V> ceilingEntry(K key);\nK ceilingKey(K key);\nMap.Entry<K,V> higherEntry(K key);\nK higherKey(K key);\nMap.Entry<K,V> firstEntry();\nMap.Entry<K,V> lastEntry();\nMap.Entry<K,V> pollFirstEntry();\nMap.Entry<K,V> pollLastEntry();\nNavigableMap<K,V> descendingMap();  // reverse order view\nNavigableSet<K> navigableKeySet();\nNavigableSet<K> descendingKeySet();\nNavigableMap<K,V> subMap(K fromKey, boolean fromInclusive,\n                         K toKey,   boolean toInclusive);\nNavigableMap<K,V> headMap(K toKey, boolean inclusive);  // less than toKey\nNavigableMap<K,V> tailMap(K fromKey, boolean inclusive);\nSortedMap<K,V> subMap(K fromKey, K toKey);\nSortedMap<K,V> headMap(K toKey);\nSortedMap<K,V> tailMap(K fromKey);\n")),(0,r.kt)("h3",{parentName:"admonition",id:"treemap"},"TreeMap"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class TreeMap<K,V>\n    extends AbstractMap<K,V>\n    implements NavigableMap<K,V>, Cloneable, java.io.Serializable\n{\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u6210\u5458\u53d8\u91cf"},"\u6210\u5458\u53d8\u91cf"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    // maintain the order Or keep keys'order natural\n    private final Comparator<? super K> comparator;\n    private transient Entry<K,V> root;\n    private transient int size = 0;\n    private transient int modCount = 0;\nstatic final class Entry<K,V> implements Map.Entry<K,V> {\n        K key;\n        V value;\n        Entry<K,V> left;\n        Entry<K,V> right;\n        Entry<K,V> parent;\n        boolean color = BLACK;\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u6784\u9020\u5668"},"\u6784\u9020\u5668"),(0,r.kt)("p",{parentName:"admonition"},"\u662f\u5426\u81ea\u5e26 Comparator \u662f\u5426\u4ece\u5176\u4ed6 Map \u590d\u5236"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public TreeMap() {\n    comparator = null;\n}\npublic TreeMap(Comparator<? super K> comparator) {\n    this.comparator = comparator;\n}\npublic TreeMap(Map<? extends K, ? extends V> m) {\n    comparator = null;\n    putAll(m);\n}\npublic TreeMap(SortedMap<K, ? extends V> m) {\n    comparator = m.comparator();\n    try {\n        buildFromSorted(m.size(), m.entrySet().iterator(), null, null);\n    } catch (java.io.IOException cannotHappen) {\n    } catch (ClassNotFoundException cannotHappen) {\n    }\n}\n")),(0,r.kt)("h4",{parentName:"admonition",id:"put"},"Put"),(0,r.kt)("p",{parentName:"admonition"},"put \u5c31\u662f\u666e\u901a\u7684\u4e8c\u53c9\u6811\u63d2\u5165 \u82e5\u7528\u6237\u6307\u5b9a\u5224\u65ad\u6761\u4ef6\uff0c\u5c31\u6309\u7167\u6307\u5b9a\u7684\u6761\u4ef6\u5224\u65ad\u63d2\u5165\u5750\u679d\u8fd8\u662f\u63d2\u5165\u53f3\u679d \u5426\u5219\u4f7f\u7528\u9ed8\u8ba4\u7684\u6bd4\u8f83\u65b9\u6cd5\n\u91cd\u70b9\u662f\u63d2\u5165\u540e\u8c03\u7528\u4e86 fixAfterInsertion(e);"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public V put(K key, V value) {\n    Entry<K,V> t = root;\n    if (t == null) {\n        compare(key, key); // type (and possibly null) check\n        root = new Entry<>(key, value, null);\n        size = 1;\n        modCount++;\n        return null;\n    }\n    int cmp;\n    Entry<K,V> parent;\n    // split comparator and comparable paths\n    Comparator<? super K> cpr = comparator;\n    if (cpr != null) {\n        do {\n            parent = t;\n            cmp = cpr.compare(key, t.key);\n            if (cmp < 0)\n                t = t.left;\n            else if (cmp > 0)\n                t = t.right;\n            else\n                return t.setValue(value);\n        } while (t != null);\n    }\n    else {\n        if (key == null)\n            throw new NullPointerException();\n        @SuppressWarnings("unchecked")\n            Comparable<? super K> k = (Comparable<? super K>) key;\n        do {\n            parent = t;\n            cmp = k.compareTo(t.key);\n            if (cmp < 0)\n                t = t.left;\n            else if (cmp > 0)\n                t = t.right;\n            else\n                return t.setValue(value);\n        } while (t != null);\n    }\n    Entry<K,V> e = new Entry<>(key, value, parent);\n    if (cmp < 0)\n        parent.left = e;\n    else\n        parent.right = e;\n    fixAfterInsertion(e);\n    size++;\n    modCount++;\n    return null;\n}\n')),(0,r.kt)("h4",{parentName:"admonition",id:"fixafterinsertione"},"fixAfterInsertion(e);"),(0,r.kt)("h4",{parentName:"admonition",id:"-1"}),(0,r.kt)("h3",{parentName:"admonition",id:"hashmap"},"HashMap"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class HashMap<K,V> extends AbstractMap<K,V>\n    implements Map<K,V>, Cloneable, Serializable {\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u6210\u5458\u53d8\u91cf-1"},"\u6210\u5458\u53d8\u91cf"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"private static final long serialVersionUID = 362498820763181265L;"),"\uff1a\u5e8f\u5217\u5316 ID"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"static final int DEFAULT_INITIAL_CAPACITY = 1 << 4; // aka 16"),"\uff1a\u6307\u5b9a\u9ed8\u8ba4\u521d\u59cb\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"static final int MAXIMUM_CAPACITY = 1 << 30;"),"\uff1a\u6700\u5927\u957f\u5ea6"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"static final float DEFAULT_LOAD_FACTOR = 0.75f;"),"\uff1a\u8d1f\u8f7d\u56e0\u5b50"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"static final int TREEIFY_THRESHOLD = 8;"),"\uff1a\u7531\u94fe\u8868\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u7684\u4e34\u754c\u503c 1\uff08\u94fe\u8868\u957f\u5ea6>8\uff09"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"static final int UNTREEIFY_THRESHOLD = 6;"),"\uff1a\u7531\u7ea2\u9ed1\u6811\u8f6c\u4e3a\u94fe\u8868\u7684\u4e34\u754c\u503c"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"static final int MIN_TREEIFY_CAPACITY = 64;"),"\uff1a\uff1a\u7531\u94fe\u8868\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u7684\u4e34\u754c\u503c 2\uff08capicity>64\uff09")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"loadFactor \u503c\u4e3a 0.75 \u52a0\u8f7d\u56e0\u5b50\u7684\u9009\u62e9\u4e0e Poisson_distribution \u6709\u5173\n\u94fe\u8868 8 \u53f7\u4f4d\u6709\u503c\u7684\u6982\u7387\u662f 0.00000006\uff08\u7406\u60f3\u968f\u673a\u60c5\u51b5\u4e0b\uff09\uff0c\u5177\u4f53\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u6ce8\u91ca\n\u66f4\u591a\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u7528\u6237\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e0d\u597d\u7684\u54c8\u5e0c\u7b97\u6cd5\u65f6\u5bfc\u81f4\u94fe\u8868\u8fc7\u957f\uff0c\u4ece\u800c\u5bfc\u81f4\u67e5\u8be2\u6548\u7387\u4f4e\uff0c\u800c\u6b64\u65f6\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u66f4\u591a\u7684\u662f\u4e00\u79cd\u4fdd\u5e95\u7b56\u7565\uff0c\u7528\u6765\u4fdd\u8bc1\u6781\u7aef\u60c5\u51b5\u4e0b\u67e5\u8be2\u7684\u6548\u7387\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u521a\u5f00\u59cb\u4e0d\u4f7f\u7528\u7ea2\u9ed1\u6811\u7684\u539f\u56e0")),(0,r.kt)("p",{parentName:"admonition"},"\u5355\u4e2a TreeNode \u9700\u8981\u5360\u7528\u7684\u7a7a\u95f4\u5927\u7ea6\u662f\u666e\u901a Node \u7684\u4e24\u500d\uff0c\u6240\u4ee5\u53ea\u6709\u5f53\u5305\u542b\u8db3\u591f\u591a\u7684 Nodes \u65f6\u624d\u4f1a\u8f6c\u6210 TreeNodes\uff0c\n\u800c\u5f53\u6876\u4e2d\u8282\u70b9\u6570\u5c0f\u4e8e 6 \u65f6\u53c8\u4f1a\u53d8\u56de\u666e\u901a\u7684\u94fe\u8868\u7684\u5f62\u5f0f\uff0c\u4ee5\u4fbf\u8282\u7701\u7a7a\u95f4\uff0c"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811\u9009\u62e9 8 \u7ea2\u9ed1\u6811\u5e73\u5747\u67e5\u627e\u957f\u5ea6\u4e3a log(n) \u94fe\u8868\u5e73\u5747\u67e5\u627e\u957f\u5ea6\u4e3a n/2")),(0,r.kt)("h4",{parentName:"admonition",id:"\u6784\u9020\u5668-1"},"\u6784\u9020\u5668"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"HashMap \u63d0\u4f9b\u4e86 4 \u79cd\u6784\u9020\u5668\uff0c\u53ef\u4ee5\u81ea\u4e3b\u9009\u62e9\u521d\u59cb\u957f\u5ea6\u548c\u8d1f\u8f7d\u56e0\u5b50"),(0,r.kt)("li",{parentName:"ol"},"\u82e5\u4f20\u5165\u7684\u521d\u59cb\u957f\u5ea6\u4e0d\u662f\u4e8c\u6b21\u5e42\uff0cjava \u4f1a\u81ea\u52a8\u5c06\u7528\u6237\u4f20\u5165\u7684 initialCapacity \u8f6c\u6362\u4e3a\u6bd4\u5b83\u5927\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u76ee\u7684\u662f\u65b9\u4fbf\u5728\u6c42\u7d22\u5f15\u65f6\u4f7f\u7528\u4f4d\u8fd0\u7b97\u66f4\u5feb\u53d6\u6a21 :::\ntip \u6ce8\u610f \u867d\u7136\u521b\u5efa\u4e86\u65b0\u7684 table\uff0c\u4f46\u662f\u6ca1\u6709\u5c06 capicity \u8fdb\u884c\u8d4b\u503c\u4ecd\u7136\u662f\u96f6\uff0c\u53ea\u5c06 loadFactor \u548c threshold \u8fdb\u884c\u8d4b\u503c\n\u8fd9\u70b9\u9700\u8981\u5728 resize() \u4e2d\u7528\u5230 :::")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public HashMap(int initialCapacity, float loadFactor) {\n    if (initialCapacity < 0)\n        throw new IllegalArgumentException("Illegal initial capacity: " + initialCapacity);\n    // \u4e0d\u80fd\u8d85\u8fc7\u9ed8\u8ba4\u6700\u5927\u957f\u5ea6\n    if (initialCapacity > MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n    // \u8d1f\u8f7d\u56e0\u5b50\u4e0d\u80fd\u5c0f\u4e8e\u96f6\n    if (loadFactor <= 0 || Float.isNaN(loadFactor))\n        throw new IllegalArgumentException("Illegal load factor: " + loadFactor);\n    this.loadFactor = loadFactor;\n    // \u8fd9\u91cc\u867d\u7136\u4e0d\u662f\u7528`capicity * loadfactory`\u4e3a\u6269\u5bb9\u4e34\u754c\u503c\u8d4b\u503c\uff0c\u4f46\u662f\u8fd8\u4f1a\u5728 put \u65b9\u6cd5\u91cc\u91cd\u65b0\u4fee\u6b63\n    this.threshold = tableSizeFor(initialCapacity);\n}\npublic HashMap(int initialCapacity) {\n    this(initialCapacity, DEFAULT_LOAD_FACTOR);\n}\n\npublic HashMap() {\n    this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted\n    // \u6b64\u65f6\u9608\u503c\u548c\u5bb9\u91cf\u503c\u5927\u5c0f\u90fd\u4e3a 0\n}\n\npublic HashMap(Map<? extends K, ? extends V> m) {\n    this.loadFactor = DEFAULT_LOAD_FACTOR;\n    putMapEntries(m, false);\n}\n')),(0,r.kt)("h4",{parentName:"admonition",id:"\u521d\u59cb\u957f\u5ea6\u4fee\u6b63"},"\u521d\u59cb\u957f\u5ea6\u4fee\u6b63"),(0,r.kt)("p",{parentName:"admonition"},"\u8fd9\u91cc\u4f7f\u7528 5 \u6b21\u53f3\u79fb + \u6216\u8fd0\u7b97 \u4e00\u4e0b\u662f\u4e3e\u4f8b\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"0000 0000 0000 1010 0000 0011 1110 1010  n\n0000 0000 0000 0101 0000 0001 1111 0101  n >>> 1\n---------------------------------------  |\n0000 0000 0000 1111 0000 0011 1111 1111  n\n0000 0000 0000 0011 1100 0000 1111 1111  n >>> 2\n---------------------------------------  |\n0000 0000 0000 1111 1100 0011 1111 1111  n\n0000 0000 0000 0000 1111 1100 0011 1111  n >>> 4\n---------------------------------------  |\n0000 0000 0000 1111 1111 1111 1111 1111  n\n0000 0000 0000 0000 0000 1111 1111 1111  n >>> 8\n\u5269\u4e0b\u7684\u5c31\u4e0d\u7528\u5199\u4e86\u5168\u90e8\u88ab\u8f6c\u6362\u6210 1\uff0c\u6700\u540e\u5728\u52a0\u4e0a 1 \u5c31\u662f\uff1a\n>Returns a power of two size for the given target capacity.\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"static final int tableSizeFor(int cap) {\n    int n = cap - 1;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n}\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811"},"\u94fe\u8868\u8f6c\u7ea2\u9ed1\u6811"),(0,r.kt)("p",{parentName:"admonition"},"\u82e5\u94fe\u8868\u957f\u5ea6>8\uff0c\u5c1d\u8bd5\u8f6c\u4e3a\u7ea2\u9ed1\u6811"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n    treeifyBin(tab, hash);\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u68c0\u6d4b\u5230 size<64\uff0c\u6269\u5bb9\uff0c\u4e0d\u8f6c\u4e3a\u7ea2\u9ed1\u6811")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"final void treeifyBin(Node<K,V>[] tab, int hash) {\n    int n, index; Node<K,V> e;\n    if (tab == null || (n = tab.length) < MIN_TREEIFY_CAPACITY)\n        resize();\n")),(0,r.kt)("p",{parentName:"admonition"},"resize \u6269\u5bb9\u540e\u6240\u6709\u5143\u7d20\u7684\u7d22\u5f15\u503c\u4f1a\u91cd\u65b0\u5206\u914d\uff0c\u94fe\u8868\u957f\u5ea6\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u66f4\u52a0\u6563\u5217"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u82e5\u68c0\u6d4b\u5230 size>=64\uff0c\u8f6c\u4e3a\u7ea2\u9ed1\u6811"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"\u94fe\u8868\u8f6c\u4e3a LinkedHashMap\uff08\u8282\u70b9\u8f6c\u4e3a TreeNode\uff0c\u52a0\u5165\u5411\u524d\u7684\u6307\u9488\u548c\u5de6\u53f3\u5b57\u8282\u70b9\uff09")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"else if ((e = tab[index = (n - 1) & hash]) != null) {\n    TreeNode<K,V> hd = null, tl = null;\n    do {\n        TreeNode<K,V> p = replacementTreeNode(e, null);\n        if (tl == null)\n            hd = p;\n        else {\n            p.prev = tl;\n            tl.next = p;\n        }\n        tl = p;\n    } while ((e = e.next) != null);\n")),(0,r.kt)("ol",{parentName:"li",start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u628a\u6839\u8282\u70b9\u653e\u5165\u6876\u4e2d\uff0c\u8fdb\u884c\u5e73\u8861")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5f85\u7eed"))))),(0,r.kt)("h4",{parentName:"admonition",id:"\u6269\u5bb9_resize"},"\u6269\u5bb9_resize"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u786e\u5b9a\u65b0\u5bb9\u91cf\u7684\u5927\u5c0f\uff1a"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5 oldCap > 0(\u6b63\u5e38\u60c5\u51b5\u4e0b\u6269\u5bb9)",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//\u7ffb\u500d\u6216\u8005\u8c03\u4e3a MAXIMUM_CAPACITY(\u672c\u8eab\u5c31\u8d85\u8fc7\u6700\u5927\u503c\u6216\u8005\u7ffb\u500d\u540e\u4f1a\u8d85\u8fc7\u6700\u5927\u503c)\nif (oldCap > 0) {\n    if (oldCap >= MAXIMUM_CAPACITY) {\n        threshold = Integer.MAX_VALUE;\n        return oldTab;\n    }\n    else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY &&\n                oldCap >= DEFAULT_INITIAL_CAPACITY)\n        newThr = oldThr << 1; // double threshold\n}\n"))),(0,r.kt)("li",{parentName:"ul"},"\u82e5 oldThr > 0\uff08\u521d\u59cb\u5316\u4e0b\u9700\u8981\u6269\u5bb9\uff0c\u624b\u52a8\u9009\u62e9\u521d\u59cb\u5bb9\u91cf\uff09",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u786e\u5b9a\u521d\u59cb\u957f\u5ea6\nelse if (oldThr > 0) // initial capacity was placed in threshold\n    newCap = oldThr;\n")),"\u8fd9\u91cc\u9700\u8981\u8bf4\u660e\uff0c\u5728\u6784\u9020\u5668\u4e2d\u6709\u5982\u4e0b\u4ee3\u7801",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"this.threshold = tableSizeFor(initialCapacity);\n// tableSizeFor \u8fd4\u56de\u7684\u5c31\u662f Capicity\uff0c\u53ea\u4e0d\u8fc7\u8d4b\u503c\u7ed9\u4e86 threshold(\u4e5f\u5c31\u662f oldThr)\uff0c\u5728\u8fd9\u91cc newCap \u624d\u88ab\u786e\u5b9a\n"))),(0,r.kt)("li",{parentName:"ul"},"\u82e5 oldCap == oldThr == 0\uff08\u521d\u59cb\u5316\u4e0b\u9700\u8981\u6269\u5bb9\uff0c\u6ca1\u6709\u624b\u52a8\u9009\u62e9\u521d\u59cb\u5bb9\u91cf\uff09\u6309\u7167\u9ed8\u8ba4\u503c\u8fdb\u884c\u521d\u59cb\u5316",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"else {               // zero initial threshold signifies using defaults\n    newCap = DEFAULT_INITIAL_CAPACITY;\n    newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n}\n"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u786e\u5b9a\u65b0\u7684\u6269\u5bb9\u8fb9\u754c"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"if (newThr == 0) {\n    float ft = (float)newCap * loadFactor;\n    newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                (int)ft : Integer.MAX_VALUE);\n}\nthreshold = newThr;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5f00\u8f9f\u65b0\u7684\u7a7a\u95f4\uff0c\u91cd\u65b0\u6392\u5217\u539f\u6765\u7684\u5143\u7d20"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5f00\u8f9f")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\ntable = newTab;\n")),(0,r.kt)("p",{parentName:"li"},"\u82e5\u539f\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff08\u4e0d\u662f\u521a\u521d\u59cb\u5316\u7684\uff09\uff0c\u5faa\u73af\u539f tab"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u7528 e \u4ee3\u66ff oldTab")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"if (oldTab != null) {\n    for (int j = 0; j < oldCap; ++j) {\n        Node<K,V> e;\n        if ((e = oldTab[j]) != null) {\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u539f tab \u5728 j \u5904\u4e0d\u4e3a\u7a7a",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"\u6e05\u7a7a\u539f table \u5728 j \u5904\u7684\u5360\u7528",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"oldTab[j] = null;\n"))),(0,r.kt)("li",{parentName:"ol"},"\u91cd\u65b0\u8ba1\u7b97\u7d22\u5f15",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u4e0d\u662f\u94fe\u8868\u6216\u7ea2\u9ed1\u6811\uff0c\u76f4\u63a5\u79fb\u52a8")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"if (e.next == null)\n    newTab[e.hash & (newCap - 1)] = e;\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u662f\u7ea2\u9ed1\u6811\uff0c\u5f85\u7eed")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"else if (e instanceof TreeNode)\n    ((TreeNode<K,V>)e).split(this, newTab, j, oldCap);\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u662f\u94fe\u8868 \u8fd9\u91cc e.hash & oldCap \u76f4\u63a5\u4e0e\u4e8c\u6b21\u5e42\uff08\u4e0d\u662f n-1\uff09\u505a&\u8fd0\u7b97\n\u4e8c\u6b21\u5e42\u4f4e\u4f4d\u5168\u4e3a\u96f6\uff0c\u4e0e hash \u505a\u4e0e\u8fd0\u7b97\u540e\u80fd\u591f\u5f97\u5230\u5f97\u5230\u65b0\u7d22\u5f15\u7684\u6700\u9ad8\u4f4d\u4e3a\u662f 0 \u8fd8\u662f 1 (e.hash & oldCap) == 0 =>\n\u786e\u5b9a\u65b0\u7d22\u5f15\u662f\u539f\u7d22\u5f15\u8fd8\u662f\u539f\u7d22\u5f15 +n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    else { // preserve order\n        Node<K,V> loHead = null, loTail = null;\n        Node<K,V> hiHead = null, hiTail = null;\n        Node<K,V> next;\n        do {\n            next = e.next;\n            // \u5224\u65ad\u65b0\u7d22\u5f15\u6700\u9ad8\u4e3a\n            if ((e.hash & oldCap) == 0) {\n                if (loTail == null)\n                    loHead = e;\n                else\n                    //\u5982\u679c\u53ef\u80fd\u4f1a\u62fc\u63a5\u4e00\u4e2a\u65b0\u94fe\u8868\n                    loTail.next = e;\n                loTail = e;\n            }\n            else {\n                if (hiTail == null)\n                    hiHead = e;\n                else\n                    hiTail.next = e;\n                hiTail = e;\n            }\n        } while ((e = next) != null);\n        // \u65b0\u94fe\u8868\u7684\u5934\u8282\u70b9\u88c5\u5165\u5230\u65b0\u6876\u4e2d\n        if (loTail != null) {\n            loTail.next = null;\n            newTab[j] = loHead;\n        }\n        if (hiTail != null) {\n            hiTail.next = null;\n            newTab[j + oldCap] = hiHead;\n        }\n    }\n}\n```java\n")))))))),(0,r.kt)("h4",{parentName:"admonition",id:"\u6269\u5bb9\u540e\u7684\u7d22\u5f15\u89c4\u5f8b"},"\u6269\u5bb9\u540e\u7684\u7d22\u5f15\u89c4\u5f8b"),(0,r.kt)("p",{parentName:"admonition"},"\u5047\u5982\u539f\u6570\u7ec4\u957f\u5ea6 n = 16"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"hash & (n-1)")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"- key1 \u4e0e 15\n1101 1001 0010 1100 1111 000|0 0101  key1.hashCode()\n0000 0000 0000 0000 0000 000|0 1111  n - 1\n----------------------------------  &\n0000 0000 0000 0000 0000 000|0 0101  5\n- key1 \u4e0e 31\n1101 1001 0010 1100 1111 000|0 0101  key1.hashCode()\n0000 0000 0000 0000 0000 000|1 1111  n * 2 - 1\n----------------------------------  &\n0000 0000 0000 0000 0000 000|0 0101  5\n- key2 \u4e0e 15\n1101 1001 0010 1100 1111 001|1 0101  key2.hashCode()\n0000 0000 0000 0000 0000 000|0 1111  n - 1\n----------------------------------  &\n0000 0000 0000 0000 0000 000|0 0101  5\n- key2 \u4e0e 31\n1101 1001 0010 1100 1111 001|1 0101  key2.hashCode()\n0000 0000 0000 0000 0000 000|1 1111  n * 2 - 1\n----------------------------------  &\n0000 0000 0000 0000 0000 000|1 0101  5 + 16\n")),(0,r.kt)("p",{parentName:"admonition"},"\u7531\u4e0a\u56fe\u53ef\u89c1\uff0c\u65b0\u7d22\u5f15\u4f4d\u7f6e\u53ea\u80fd\u662f\u539f\u7d22\u5f15\u6216\u8005\u539f\u7d22\u5f15 +n\uff0c\u5230\u5e95\u662f\u90a3\u79cd\u60c5\u51b5\u53ea\u7528\u770b\u65b0\u7d22\u5f15\u9ad8\u4f4d\u662f 0 \u8fd8\u662f 1"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u4f18\u70b9\uff1a\u4e0d\u7528\u771f\u7684\u91cd\u65b0\u8ba1\u7b97\u65b0\u7d22\u5f15\u4f4d\u7f6e\uff0c\u53ea\u9700\u8981\u8ba1\u7b97\u9ad8\u4f4d\u662f 0 \u8fd8\u662f 1 \u5373\u53ef\u786e\u5b9a\u65b0\u7d22\u5f15")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"hash & n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"key2 \u4e0e 16 1101 1001 0010 1100 1111 001|1 0101 key2.hashCode() 0000 0000 0000\n0000 0000 000|0 1111 n ---------------------------------- & 0000 0000 0000\n0000 0000 000|0 0101 5"),(0,r.kt)("li",{parentName:"ul"},"key2 \u4e0e 32 1101 1001 0010 1100 1111 001|1 0101 key2.hashCode() 0000 0000 0000\n0000 0000 000|1 0000 n ---------------------------------- & 0000 0000 0000\n0000 0000 000|1 0000 \u5f97\u5230\u6700\u9ad8\u4f4d\u4e3a 1")),(0,r.kt)("h4",{parentName:"admonition",id:"hash-\u8ba1\u7b97\u65b9\u6cd5"},"hash \u8ba1\u7b97\u65b9\u6cd5"),(0,r.kt)("p",{parentName:"admonition"},"\u5148\u8c03\u7528 key.hashCode()\uff0c\u5728\u4e8e\u81ea\u8eab\u9ad8\u4f4d\u5f02\u6216"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"static final int hash(Object key) {\n    int h;\n    return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"\u793a\u4f8b"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"1101 0111 1010 1111 1000 0110 0001 1011  hash\n0000 0000 0000 0000 1101 0111 1010 1111  hash >>> 16\n---------------------------------------  ^\n1101 0111 1010 1111 0101 0001 1011 0100\n")),(0,r.kt)("p",{parentName:"admonition"},"\u539f\u56e0\uff1a"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u6df7\u5408\u9ad8\u4f4e\u4f4d\u4fe1\u606f"),(0,r.kt)("li",{parentName:"ol"},"\u786e\u4fdd hash \u4e0d\u4f1a\u5411 0 \u6216 1 \u5355\u72ec\u9760\u62e2")),(0,r.kt)("h4",{parentName:"admonition",id:"put-1"},"put"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"put \u8c03\u7528 putVal \u5b9e\u73b0"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public V put(K key, V value) {\n    return putVal(hash(key), key, value, false, true);\n}\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u65b9\u6cd5\u53c2\u6570"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"boolean onlyIfAbsent\uff1a\u53ea\u6709\u4e0d\u5b58\u5728\u624d\u6dfb\u52a0\uff08\u5373\u4e0d\u4fee\u6539\u539f\u6570\u636e\uff09"),(0,r.kt)("li",{parentName:"ol"},"boolean evict\uff1a\u5982\u679c\u4e3a false \u8868\u793a\u4e3a\u521b\u5efa\u72b6\u6001"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5177\u4f53\u5b9e\u73b0"))),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c table == null\uff0cresize \u65b0\u5efa\u6570\u7ec4")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"final V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n    Node<K,V>[] tab; Node<K,V> p; int n, i;\n    if ((tab = table) == null || (n = tab.length) == 0)\n        n = (tab = resize()).length;\n")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"\u63d2\u5165/\u6216\u8bb0\u5f55\u88ab\u4fee\u6539 value \u7684\u8282\u70b9 e",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u7d22\u5f15\u4f4d\u7f6e\u4e3a\u7a7a\uff0c\u76f4\u63a5\u63d2\u5165")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"if ((p = tab[i = (n - 1) & hash]) == null)\n    tab[i] = newNode(hash, key, value, null);\nelse {\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u4e0d\u4e3a\u7a7a\uff0c\u4e14 key \u76f8\u540c\uff0ce \u5c31\u662f\u5f53\u524d\u8282\u70b9")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Node<K,V> e; K k;\nif (p.hash == hash &&\n    ((k = p.key) == key || (key != null && key.equals(k))))\n    e = p;\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u662f\u4e3a\u7ea2\u9ed1\u6811\uff0c\u6309\u7167\u7ea2\u9ed1\u6811\u63d2\u5165")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"else if (p instanceof TreeNode)\n    e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u82e5\u4e0d\u4e3a\u7a7a\u4f46\u662f\u4e3a\u94fe\u8868 \u627e\u5230\u76f8\u540c\u8282\u70b9\u5c31\u8bb0\u5f55 e \u6ca1\u627e\u5230\u5c31\u5c3e\u63d2\u65b0\u7ed3\u70b9\uff0c\u5e76\u5224\u65ad\u662f\u5426\u8f6c\u4e3a\u7ea2\u9ed1\u6811")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"else {\n    for (int binCount = 0; ; ++binCount) {\n        if ((e = p.next) == null) {\n            p.next = newNode(hash, key, value, null);\n            if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                treeifyBin(tab, hash);\n            break;\n        }\n        if (e.hash == hash &&\n            ((k = e.key) == key || (key != null && key.equals(k))))\n            break;\n        p = e;\n    }\n}\n"))),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c\u4e0a\u4e00\u6b65\u6ca1\u6709\u63d2\u5165\u65b0\u7ed3\u70b9\u800c\u662f\u51c6\u5907\u8986\u76d6 value\uff0c\u5c31\u5728\u8fd9\u4e00\u6b65\u8986\u76d6")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    if (e != null) { // existing mapping for key\n        V oldValue = e.value;\n        if (!onlyIfAbsent || oldValue == null)\n            e.value = value;\n        afterNodeAccess(e);\n        return oldValue;\n    }\n}\n")),(0,r.kt)("ol",{parentName:"admonition",start:4},(0,r.kt)("li",{parentName:"ol"},"fastfail \u68c0\u9a8c\uff0c\u6269\u5bb9\u68c0\u9a8c")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    ++modCount;\n    if (++size > threshold)\n        resize();\n    afterNodeInsertion(evict); // \u7a7a\u51fd\u6570\uff0c\u4e0d\u77e5\u9053\u6709\u5565\u7528\n    return null;\n}\n")),(0,r.kt)("h4",{parentName:"admonition",id:"remove"},"remove"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u5224\u65ad table \u662f\u5426\u4e3a\u7a7a\uff0ctable \u662f\u5426\u5b58\u6709\u5143\u7d20\uff0c\u8981\u627e\u7684\u7d22\u5f15\u4f4d\u7f6e\u662f\u5426\u6709\u503c")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"final Node<K,V> removeNode(int hash, Object key, Object value,\n                               boolean matchValue, boolean movable) {\n        Node<K,V>[] tab; Node<K,V> p; int n, index;\n        if ((tab = table) != null && (n = tab.length) > 0 &&\n            (p = tab[index = (n - 1) & hash]) != null) {\n")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"\u627e\u5230\u5f85\u5220\u9664\u8282\u70b9 node \u8bb0\u5f55",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"index \u5904\u5c31\u662f\u6240\u627e\u8282\u70b9",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Node<K,V> node = null, e; K k; V v;\nif (p.hash == hash &&\n    ((k = p.key) == key || (key != null && key.equals(k))))\n    node = p;\n"))),(0,r.kt)("li",{parentName:"ul"},"\u662f\u7ea2\u9ed1\u6811\uff0c\u6309\u7167\u7ea2\u9ed1\u6811\u7684\u65b9\u5f0f\u67e5\u627e",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"else if ((e = p.next) != null) {\n    if (p instanceof TreeNode)\n        node = ((TreeNode<K,V>)p).getTreeNode(hash, key);\n"))),(0,r.kt)("li",{parentName:"ul"},"\u662f\u94fe\u8868\uff0c\u6309\u7167\u94fe\u8868\u65b9\u5f0f\u67e5\u627e",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"    else {\n        do {\n            if (e.hash == hash &&\n                ((k = e.key) == key ||\n                    (key != null && key.equals(k)))) {\n                node = e;\n                break;\n            }\n            p = e;\n        } while ((e = e.next) != null);\n    }\n}\n"))))),(0,r.kt)("li",{parentName:"ol"},"\u5220\u9664\u8282\u70b9\uff0c\u5904\u7406\u540e\u4e8b")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"        if (node != null && (!matchValue || (v = node.value) == value ||\n                                (value != null && value.equals(v)))) {\n            if (node instanceof TreeNode)\n                ((TreeNode<K,V>)node).removeTreeNode(this, tab, movable);\n            else if (node == p)\n                tab[index] = node.next;\n            else\n                p.next = node.next;\n            ++modCount;\n            --size;\n            afterNodeRemoval(node);\n            return node;\n        }\n    }\n    return null;\n}\n")),(0,r.kt)("h4",{parentName:"admonition",id:"\u5f85\u7eed-2"},"\u5f85\u7eed..."),(0,r.kt)("h3",{parentName:"admonition",id:"\u5f85\u7eed-3"},"\u5f85\u7eed..."),(0,r.kt)("h2",{parentName:"admonition",id:"\u6807\u8bb0\u63a5\u53e3"},"\u6807\u8bb0\u63a5\u53e3"),(0,r.kt)("h3",{parentName:"admonition",id:"\u5e8f\u5217\u5316"},"\u5e8f\u5217\u5316"),(0,r.kt)("h4",{parentName:"admonition",id:"serializable-\u63a5\u53e3"},"Serializable \u63a5\u53e3"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u5e8f\u5217\u5316\u5c31\u662f\u5c06\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u8282\u5e8f\u5217\u7684\u8fc7\u7a0b\uff0c\u53cd\u5e8f\u5217\u5316\u5c31\u662f\u628a\u6301\u4e45\u5316\u7684\u5b57\u8282\u6587\u4ef6\u6570\u636e\u6062\u590d\u4e3a\u5bf9\u8c61\u7684\u8fc7\u7a0b\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e JVM \u6765\u8bf4\uff0c\u8981\u8fdb\u884c\u6301\u4e45\u5316\u7684\u7c7b\u5fc5\u987b\u8981\u6709\u4e00\u4e2a\u6807\u8bb0\uff0c\u53ea\u6709\u6301\u6709\u8fd9\u4e2a\u6807\u8bb0 JVM \u624d\u5141\u8bb8\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u5176 IO \u7cfb\u7edf\u8f6c\u6362\u4e3a\u5b57\u8282\u6570\u636e\uff0c\u4ece\u800c\u5b9e\u73b0\u6301\u4e45\u5316\uff0c\u800c\u8fd9\u4e2a\u6807\u8bb0\u5c31\u662f Serializable \u63a5\u53e3\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u800c\u5728\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e2d\u5219\u9700\u8981\u4f7f\u7528 serialVersionUID \u6765\u786e\u5b9a\u7531\u90a3\u4e2a\u7c7b\u6765\u52a0\u8f7d\u8fd9\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u5b9e\u73b0 Serializable \u63a5\u53e3\u7684\u65f6\u5019\uff0c\u4e00\u822c\u8fd8\u4f1a\u8981\u53bb\u5c3d\u91cf\u663e\u793a\u5730\u5b9a\u4e49 serialVersionUID")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class MySerializable {\n    public static void main(String[] args) {\n        write();\n        read();\n    }\n\n    public static void write() {\n        Student student = new Student(1, "zhangsan");\n        ObjectOutputStream objectOutputStream = new ObjectOutputStream(new FileOutputStream("src/resources/student.txt"));\n        objectOutputStream.writeObject(student);\n    }\n\n    public static void read() {\n        ObjectInputStream objectInputStream = null;\n        objectInputStream = new ObjectInputStream(new FileInputStream("src/resources/student.txt"));\n        Student student = (Student) objectInputStream.readObject();\n    }\n}\n@Data\n@AllArgsConstructor\nclass Student implements Serializable {\n    private int id;\n    private String name;\n}\n')),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u6211\u4eec\u5728\u5e8f\u5217\u5316\u4e2d\u6ca1\u6709\u663e\u793a\u5730\u58f0\u660e serialVersionUID\uff0c\u5219\u5e8f\u5217\u5316\u8fd0\u884c\u65f6\u5c06\u4f1a\u6839\u636e\u8be5\u7c7b\u7684\u5404\u4e2a\u65b9\u9762\u8ba1\u7b97\u8be5\u7c7b\u9ed8\u8ba4\u7684 serialVersionUID \u503c\u3002>\u4f46\u662f\uff0cJava \u5b98\u65b9\u5f3a\u70c8\u5efa\u8bae\u6240\u6709\u8981\u5e8f\u5217\u5316\u7684\u7c7b\u90fd\u663e\u793a\u5730\u58f0\u660e serialVersionUID \u5b57\u6bb5\uff0c\u56e0\u4e3a\u5982\u679c\u9ad8\u5ea6\u4f9d\u8d56\u4e8e JVM \u9ed8\u8ba4\u751f\u6210 serialVersionUID\uff0c\u53ef>\u80fd\u4f1a\u5bfc\u81f4\u5176\u4e0e\u7f16\u8bd1\u5668\u7684\u5b9e\u73b0\u7ec6\u8282\u8026\u5408\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5728\u53cd\u5e8f\u5217\u5316\u7684\u8fc7\u7a0b\u4e2d\u53d1\u751f\u610f\u5916\u7684 InvalidClassException \u5f02\u5e38\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8de8\u4e0d\uff1f>\u540c Java \u7f16\u8bd1\u5668\u5b9e\u73b0\u7684 serialVersionUID \u503c\u7684\u4e00\u81f4\uff0c\u5b9e\u73b0 Serializable \u63a5\u53e3\u7684\u5fc5\u987b\u663e\u793a\u5730\u58f0\u660e serialVersionUID \u5b57\u6bb5\u3002",(0,r.kt)("br",null))),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"\u6b64\u5916 serialVersionUID \u5b57\u6bb5\u5730\u58f0\u660e\u8981\u5c3d\u53ef\u80fd\u4f7f\u7528 private \u5173\u952e\u5b57\u4fee\u9970\uff0c\u8fd9\u662f\u56e0\u4e3a\u8be5\u5b57\u6bb5\u7684\u58f0\u660e\u53ea\u9002\u7528\u4e8e\u58f0\u660e\u7684\u7c7b\uff0c\u8be5\u5b57\u6bb5\u4f5c\u4e3a\u6210\u5458\u53d8\u91cf\u88ab\u5b50>\u7c7b\u7ee7\u627f\u662f\u6ca1\u6709\u7528\u5904\u7684\uff01\u6709\u4e2a\u7279\u6b8a\u7684\u5730\u65b9\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6570\u7ec4\u7c7b\u662f\u4e0d\u80fd\u663e\u793a\u5730\u58f0\u660e serialVersionUID \u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u59cb\u7ec8\u5177\u6709\u9ed8\u8ba4\u8ba1\u7b97\u7684\u503c\uff0c\u4e0d\u8fc7>\u6570\u7ec4\u7c7b\u53cd\u5e8f\u5217\u5316\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u653e\u5f03\u4e86\u5339\u914d serialVersionUID \u503c\u7684\u8981\u6c42\u3002")),(0,r.kt)("h4",{parentName:"admonition",id:"transient"},"transient"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u5728\u5b9e\u73b0 Serializable \u63a5\u53e3\u540e\u53ef\u4ee5\u7528\u8be5\u5173\u952e\u5b57\u4fee\u9970\uff0c\u8ba9\u8fd9\u4e2a\u5c5e\u6027\u4e0d\u5e8f\u5217\u5316"),(0,r.kt)("li",{parentName:"ul"},"\u4f46\u662f\u7528 static \u4fee\u9970\u540e\uff0c\u4e00\u5b9a\u4e0d\u4f1a\u88ab\u5e8f\u5217\u5316"),(0,r.kt)("li",{parentName:"ul"},"\u82e5\u9009\u62e9\u5b9e\u73b0 Externalizable \u63a5\u53e3\uff0c\u5219\u5c5e\u6027\u662f\u5426\u8fdb\u884c\u5e8f\u5217\u5316\u9700\u8981\u624b\u52a8\u6307\u5b9a\uff0c\u4e0e\u662f\u5426\u6709 transient \u5173\u952e\u5b57\u65e0\u5173")),(0,r.kt)("h3",{parentName:"admonition",id:"randomaccess"},"RandomAccess"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u6982\u8ff0 RandomAccess \u662f\u4e00\u4e2a\u7a7a\u7684\u63a5\u53e3\uff0c\u5b83\u7528\u6765\u6807\u8bc6\u67d0\u4e2a\u7c7b\u662f\u5426\u652f\u6301\n\u968f\u673a\u8bbf\u95ee\uff08\u968f\u673a\u8bbf\u95ee\uff0c\u76f8\u5bf9\u6bd4\u201c\u6309\u987a\u5e8f\u8bbf\u95ee\u201d\uff09\u3002\u4e00\u4e2a\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u7c7b\u660e\u663e\u53ef\u4ee5\u4f7f\u7528\u66f4\u52a0\u9ad8\u6548\u7684\u7b97\u6cd5\u3002")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface RandomAccess {\n}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"List \u4e2d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u6700\u4f73\u7684\u4f8b\u5b50\u5c31\u662f ArrayList\uff0c\u5b83\u7684\u6570\u636e\u7ed3\u6784\u4f7f\u5f97 get(), set(), add() \u7b49\u65b9\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(1);"),(0,r.kt)("li",{parentName:"ul"},"\u53cd\u4f8b\u5c31\u662f LinkedList\uff0c\u94fe\u8868\u7ed3\u6784\u4f7f\u5f97\u5b83\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u53ea\u80fd\u6309\u5e8f\u8bbf\u95ee\uff0c\u56e0\u6b64\u5728\u4e00\u4e9b\u64cd\u4f5c\u4e0a\u6027\u80fd\u7565\u900a\u4e00\u7b79\u3002")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"\u4f8b\u5b50")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u901a\u5e38\u5728\u64cd\u4f5c\u4e00\u4e2a List \u5bf9\u8c61\u65f6\uff0c\u901a\u5e38\u4f1a\u5224\u65ad\u662f\u5426\u652f\u6301 \u968f\u673a\u8bbf\u95ee\uff0c\u4e5f\u5c31\u662f",(0,r.kt)("em",{parentName:"li"}," \u662f\u5426\u4e3a RandomAccess \u7684\u5b9e\u4f8b"),"\uff0c\u4ece\u800c\u4f7f\u7528\u4e0d\u540c\u7684\u7b97\u6cd5\u3002\u6bd4\u5982\u904d\u5386\uff0c\u5b9e\u73b0\u4e86\nRandomAccess \u7684\u96c6\u5408\u4f7f\u7528 get():")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"for (int i=0, n=list.size(); i &lt; n; i++)\n          list.get(i);\n")),(0,r.kt)("p",{parentName:"admonition"},"\u6bd4\u7528\u8fed\u4ee3\u5668\u66f4\u5feb\uff1a"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"for (Iterator i=list.iterator(); i.hasNext(); )\n    i.next();\n")),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"\u5b9e\u73b0\u4e86 RandomAccess \u63a5\u53e3\u7684\u7c7b\u6709\uff1aArrayList, AttributeList, CopyOnWriteArrayList,\nVector, Stack \u7b49\u3002")),(0,r.kt)("h3",{parentName:"admonition",id:"cloneable"},"Cloneable"),(0,r.kt)("h4",{parentName:"admonition",id:"\u6d45\u62f7\u8d1d"},"\u6d45\u62f7\u8d1d"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u6982\u8ff0 \u5b9e\u73b0\u4e86 Cloneable \u63a5\u53e3\u7684\u5bf9\u8c61\u80fd\u8fdb\u884c\u514b\u9686\uff0cObject \u5b9e\u73b0\u4e86\u5148\u62f7\u8d1d")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface Cloneable {\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"clon \u65b9\u6cd5\u518d Object \u7c7b\u4e2d\u5b9a\u4e49"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"protected native Object clone() throws CloneNotSupportedException;\n")),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"\u5f15\u4f8b")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u8fd9\u91cc\u5148\u5b9a\u4e49\u4e00\u4e2a\u5b66\u751f")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Data\n@AllArgsConstructor\nclass Student implements Cloneable{\n    String name;\n    Address address;\n\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        return super.clone();\n    }\n}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"student2 \u7531 student \u6d45\u62f7\u8d1d\u5f97\u5230")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Student student = new Student("a", address1);\nStudent student2 = (Student) student.clone();\n')),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"student == student2 => False"),(0,r.kt)("li",{parentName:"ul"},"student.address == student2.address => True \u4e24\u4eba\u7684\u5730\u5740\u4e0d\u540c\uff0c\u4f46\u662f\u201c\u5730\u5740\u201d\u6240\u6307\u5411\u7684\u5730\u5740\u76f8\u540c")),(0,r.kt)("h4",{parentName:"admonition",id:"\u6df1\u62f7\u8d1d"},"\u6df1\u62f7\u8d1d"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 Cloneable \u63a5\u53e3\u5e76\u91cd\u5199 Object \u7c7b\u4e2d\u7684 clone() \u65b9\u6cd5\uff1b")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u60f3\u8981\u5b9e\u73b0 address \u4e5f\u4e0d\u76f8\u540c\u53ef\u4ee5\u5728\u91cd\u5199 clone() \u52a0\u4e0a\n",(0,r.kt)("inlineCode",{parentName:"p"},"stu.addr = (Address)addr.clone();   //\u6df1\u5ea6\u590d\u5236"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7f3a\u70b9\uff1a\n\u5982\u679c\u5f15\u7528\u7c7b\u578b\u91cc\u9762\u8fd8\u5305\u542b\u5f88\u591a\u5f15\u7528\u7c7b\u578b\uff0c\u6216\u8005\u5185\u5c42\u5f15\u7528\u7c7b\u578b\u7684\u7c7b\u91cc\u9762\u53c8\u5305\u542b\u5f15\u7528\u7c7b\u578b\uff0c\u4f7f\u7528 clone \u65b9\u6cd5\u5c31\u4f1a\u5f88\u9ebb\u70e6\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u7528\u5e8f\u5217\u5316\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u5bf9\u8c61\u7684\u6df1\u514b\u9686\u3002"))),(0,r.kt)("ol",{parentName:"admonition",start:2},(0,r.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 Serializable \u63a5\u53e3\uff0c\u901a\u8fc7\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\u514b\u9686\uff0c\u53ef\u4ee5\u5b9e\u73b0\u771f\u6b63\u7684\u6df1\u5ea6\u514b\u9686\u3002")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u624b\u52a8\u5199\u65b0\u7684 clone \u65b9\u6cd5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7f3a\u70b9\uff1a\u9700\u8981\u5bf9\u8c61\u53ca\u5bf9\u8c61\u6240\u6709\u7684\u5bf9\u8c61\u5c5e\u6027\u90fd\u5b9e\u73b0\u5e8f\u5217\u5316")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u793a\u4f8b"))),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class DeepClone {\n    public static void main(String[] args) {\n        Inner inner = new Inner();\n        Outer outer = new Outer(inner);\n        Outer outer1 = outer.myClone();\n        System.out.println(outer.inner == outer1.inner); // False\n    }\n}\n\n@AllArgsConstructor\nclass Outer implements Serializable {\n    private static final long serialVersionUID = 369285298572941L;  //\u6700\u597d\u662f\u663e\u5f0f\u58f0\u660e ID\n    public Inner inner;\n    public Outer myClone() {\n        Outer outer = null;\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        ObjectOutputStream oos = new ObjectOutputStream(baos);\n        oos.writeObject(this);\n        ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());\n        ObjectInputStream ois = new ObjectInputStream(bais);\n        outer = (Outer) ois.readObject();\n        return outer;\n    }\n}\n\nclass Inner implements Serializable {\n    private static final long serialVersionUID = 872390113109L; //\u6700\u597d\u662f\u663e\u5f0f\u58f0\u660e ID\n}\n"))),(0,r.kt)("p",null,"\u6ce8\u610f\uff1a\u57fa\u4e8e\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5b9e\u73b0\u7684\u514b\u9686\u4e0d\u4ec5\u4ec5\u662f\u6df1\u5ea6\u514b\u9686\uff0c\u66f4\u91cd\u8981\u7684\u662f\u901a\u8fc7\u6cdb\u578b\u9650\u5b9a\uff0c\u53ef\u4ee5\u68c0\u67e5\u51fa\u8981\u514b\u9686\u7684\u5bf9\u8c61\u662f\u5426\u652f\u6301\u5e8f\u5217\u5316\uff0c\u8fd9\u9879\u68c0\u67e5\u662f\u7f16\u8bd1\u5668\u5b8c\u6210\u7684\uff0c\u4e0d\u662f\u5728\u8fd0\u884c\u65f6\u629b\u51fa\u5f02\u5e38\uff0c\u8fd9\u79cd\u662f\u65b9\u6848\u660e\u663e\u4f18\u4e8e\u4f7f\u7528 Object \u7c7b\u7684 clone \u65b9\u6cd5\u514b\u9686\u5bf9\u8c61\u3002\u8ba9\u95ee\u9898\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u66b4\u9732\u51fa\u6765\u603b\u662f\u4f18\u4e8e\u628a\u95ee\u9898\u7559\u5230\u8fd0\u884c\u65f6\u3002\n:::"),(0,r.kt)("h3",{id:"\u5f85\u7eed-4"},"\u5f85\u7eed..."),(0,r.kt)("h2",{id:"\u51fd\u6570\u5f0f\u63a5\u53e3"},"\u51fd\u6570\u5f0f\u63a5\u53e3"),(0,r.kt)("h3",{id:"\u6982\u8ff0-4"},"\u6982\u8ff0"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@FunctionalInterface")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7279\u5f81")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'\u8be5\u6ce8\u89e3\u53ea\u80fd\u6807\u8bb0\u5728"\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5"\u7684\u63a5\u53e3\u4e0a\u3002'),(0,r.kt)("li",{parentName:"ul"},"JDK8 \u63a5\u53e3\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u548c\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u90fd\u4e0d\u7b97\u662f\u62bd\u8c61\u65b9\u6cd5\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u63a5\u53e3\u9ed8\u8ba4\u7ee7\u627f java.lang.Object\uff0c\u6240\u4ee5\u5982\u679c\u63a5\u53e3\u663e\u793a\u58f0\u660e\u8986\u76d6\u4e86 Object \u4e2d\u65b9\u6cd5\uff0c\u90a3\u4e48\u4e5f\u4e0d\u7b97\u62bd\u8c61\u65b9\u6cd5\u3002"),(0,r.kt)("li",{parentName:"ul"},'\u8be5\u6ce8\u89e3\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u7b26\u5408"\u51fd\u6570\u5f0f\u63a5\u53e3"\u5b9a\u4e49\uff0c\u90a3\u4e48\u52a0\u4e0d\u52a0\u8be5\u6ce8\u89e3\u90fd\u6ca1\u6709\u5f71\u54cd\u3002\u52a0\u4e0a\u8be5\u6ce8\u89e3\u80fd\u591f\u66f4\u597d\u5730\u8ba9\u7f16\u8bd1\u5668\u8fdb\u884c\u68c0\u67e5\u3002\u5982\u679c\u7f16\u5199\u7684\u4e0d\u662f\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u4f46\u662f\u52a0\u4e0a\u4e86 @FunctionInterface\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\u3002')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u793a\u4f8b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u6b63\u786e\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\n@FunctionalInterface\npublic interface TestInterface {\n\n    // \u62bd\u8c61\u65b9\u6cd5\n    public void sub();\n\n    // java.lang.Object \u4e2d\u7684\u65b9\u6cd5\u4e0d\u662f\u62bd\u8c61\u65b9\u6cd5\n    public boolean equals(Object var1);\n\n    // default \u4e0d\u662f\u62bd\u8c61\u65b9\u6cd5\n    public default void defaultMethod(){}\n\n    // static \u4e0d\u662f\u62bd\u8c61\u65b9\u6cd5\n    public static void staticMethod(){}\n}\n")),(0,r.kt)("h3",{id:"consumer"},"Consumer"),(0,r.kt)("h4",{id:"consumer-1"},"Consumer"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5b9a\u4e49")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5b83\u4e0d\u662f\u751f\u4ea7\u4e00\u4e2a\u6570\u636e\uff0c\u800c\u662f\u6d88\u8d39\u4e00\u4e2a\u6570\u636e\uff0c\u5176\u6570\u636e\u7c7b\u578b\u7531\u6cdb\u578b\u51b3\u5b9a"),(0,r.kt)("li",{parentName:"ul"},"\u6cdb\u578b\u6307\u5b9a\u4ec0\u4e48\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 accept \u65b9\u6cd5\u6d88\u8d39\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u636e"),(0,r.kt)("li",{parentName:"ul"},"\u81f3\u4e8e\u5177\u4f53\u600e\u4e48\u6d88\u8d39 (\u4f7f\u7528)\uff0c\u9700\u8981\u81ea\u5b9a\u4e49")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface Consumer<T> {\n\n    void accept(T t);\n\n    default Consumer<T> andThen(Consumer<? super T> after) {\n        Objects.requireNonNull(after);\n        return (T t) -> { accept(t); after.accept(t); };\n    }\n}\n")),(0,r.kt)("h4",{id:"bicomsumer"},"BiComsumer"),(0,r.kt)("p",null,"\u4e0e Consumer \u7c7b\u4f3c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface BiConsumer<T, U> {\n    void accept(T t, U u);\ndefault BiConsumer<T, U> andThen(BiConsumer<? super T, ? super U> after) {\n    Objects.requireNonNull(after);\n    return (l, r) -> {\n        accept(l, r);\n        after.accept(l, r);\n    };\n}\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u793a\u4f8b Iterable \u63a5\u53e3\uff0c\u7528\u6cd5\u548c Thread \u7c7b\u4f3c")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    List<String> list = new ArrayList<>();\n    list.add("1");\n    list.add("1");\n    Consumer consumer = new Consumer() {\n        @Override\n        public void accept(Object o) {\n            System.out.println(o);\n        }\n    };\n    list.forEach(consumer);\n}\n')),(0,r.kt)("h3",{id:"predicate"},"Predicate"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7279\u6027")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JDK8 \u63d0\u4f9b\u7684\u51fd\u6570\u5f0f\u63a5\u53e3"),(0,r.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5 test\uff0c\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u6839\u636e\u8fd9\u4e2a\u53c2\u6570\u8fdb\u884c\u4e00\u4e9b\u5224\u65ad\uff0c\u8fd4\u56de\u5224\u65ad\u7ed3\u679c true / false"),(0,r.kt)("li",{parentName:"ul"},"\u63d0\u4f9b\u51e0\u4e2a\u9ed8\u8ba4\u7684 default \u65b9\u6cd5\uff0cand, or, negate \u7528\u4e8e\u8fdb\u884c\u7ec4\u5408\u5224\u65ad"),(0,r.kt)("li",{parentName:"ul"},"\u5728\u6d41\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u5b9a\u4e49")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface MyPredict<T> {\n    // jdk 1.8\n\n    boolean test(T t);\n\n    default Predicate<T> and(Predicate<? super T> other) {\n        Objects.requireNonNull(other);\n        return (t) -> test(t) && other.test(t);\n    }\n    default Predicate<T> negate() {\n        return (t) -> !test(t);\n    }\n    default Predicate<T> or(Predicate<? super T> other) {\n        Objects.requireNonNull(other);\n        return (t) -> test(t) || other.test(t);\n    }\n    static <T> Predicate<T> isEqual(Object targetRef) {\n        return (null == targetRef)\n                ? Objects::isNull\n                : object -> targetRef.equals(object);\n    }\n    // jdk 11\n    static <T> Predicate<T> not(Predicate<? super T> target) {\n        Objects.requireNonNull(target);\n        return (Predicate<T>)target.negate();\n    }\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"\u793a\u4f8b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    Predicate predicate = "Yes"::equals;   // lambda \u8868\u8fbe\u5f0f\n    Predicate predicate2 = o -> !"No".equals(o);\n    System.out.println(predicate.test("Yes"));\n    System.out.println(predicate.and(predicate2).test("Yes"));;\n}\n')),(0,r.kt)("h3",{id:"function"},"Function"),(0,r.kt)("h4",{id:"function-1"},"Function"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7279\u6027 Function \u63a5\u53e3\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5bf9\u8c61\u8fdb\u884c\u52a0\u5de5\uff0c\u7136\u540e\u8fd4\u56de\u52a0\u5de5\u540e\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u52a0\u5de5\u53ef\u4ee5\u662f\u4efb\u4f55\u64cd\u4f5c\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5b9a\u4e49")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface MyFunction<T, R> {\n    R apply(T t);\n\n    default <V> Function<V, R> compose(Function<? super V, ? extends T> before) {\n        Objects.requireNonNull(before);\n        return (V v) -> apply(before.apply(v));\n    }\n\n    default <V> Function<T, V> andThen(Function<? super R, ? extends V> after) {\n        Objects.requireNonNull(after);\n        return (T t) -> after.apply(apply(t));\n    }\n\n    static <T> Function<T, T> identity() {\n        return t -> t;\n    }\n\n}\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"\u793a\u4f8b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    Function<String, Integer> f1 = (t) -> Integer.valueOf(t) * 10;\n    System.out.println(f1.apply("3"));\n    // \u8fd4\u56de\u81ea\u5df1\n    System.out.println(Function.identity().apply("3"));\n    // apply \u540e\u6267\u884c\n    System.out.println(f1.andThen((r) -> String.valueOf(r) + ".....").apply("4"));\n    // apply \u524d\u6267\u884c\n    System.out.println(f1.compose((String r) -> r.substring(1)).apply("a5"));\n}\n')),(0,r.kt)("h4",{id:"bifunction"},"BiFunction"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface BiFunction<T, U, R> {\n    R apply(T t, U u);\n    default <V> BiFunction<T, U, V> andThen(Function<? super R, ? extends V> after) {\n        Objects.requireNonNull(after);\n        return (T t, U u) -> after.apply(apply(t, u));\n    }\n")),(0,r.kt)("h3",{id:"unaryoperator"},"UnaryOperator"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5b9a\u4e49")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface MyUnaryOperator<T> extends Function<T, T> {\n    static <T> UnaryOperator<T> identity() {\n        return t -> t;\n    }\n}\n`\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u793a\u4f8b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    UnaryOperator<Integer> unaryOperator = x -> x + 1;\n    System.out.println(unaryOperator.apply(10)); // 11\n    UnaryOperator<String> unaryOperator1 = x -> x + 1;\n    System.out.println(unaryOperator1.apply("aa")); // aa1\n}\n')),(0,r.kt)("h3",{id:"compare"},"Compare"),(0,r.kt)("h4",{id:"comparable"},"Comparable"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Comparable \u662f\u6392\u5e8f\u63a5\u53e3\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u82e5\u4e00\u4e2a\u7c7b\u5b9e\u73b0\u4e86 Comparable \u63a5\u53e3\uff0c\u5c31\u610f\u5473\u7740\u201c\u8be5\u7c7b\u652f\u6301\u6392\u5e8f\u201d\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public interface Comparable<T> {\n        public int compareTo(T o);\n}\n")),(0,r.kt)("h4",{id:"comparator"},"Comparator"),(0,r.kt)("h5",{id:"\u6e90\u7801"},"\u6e90\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@FunctionalInterface\npublic interface MyComparator<T> {\n\n    // jdk 1.2\n    int compare(T o1, T o2);\n    boolean equals(Object obj);\n\n    // jdk 1.8\n    //default Comparator<T> reversed() {\n    //    return Collections.reverseOrder(this);\n    //}\n\n    default Comparator<T> thenComparing(Comparator<? super T> other) {\n        Objects.requireNonNull(other);\n        return (Comparator<T> & Serializable) (c1, c2) -> {\n            int res = compare(c1, c2);\n            return (res != 0) ? res : other.compare(c1, c2);\n        };\n    }\n    default <U> Comparator<T> thenComparing(\n            Function<? super T, ? extends U> keyExtractor,\n            Comparator<? super U> keyComparator)\n    {\n        return thenComparing(comparing(keyExtractor, keyComparator));\n    }\n    default <U extends Comparable<? super U>> Comparator<T> thenComparing(\n            Function<? super T, ? extends U> keyExtractor)\n    {\n        return thenComparing(comparing(keyExtractor));\n    }\n\n    default Comparator<T> thenComparingInt(ToIntFunction<? super T> keyExtractor) {\n        return thenComparing(comparingInt(keyExtractor));\n    }\n    default Comparator<T> thenComparingLong(ToLongFunction<? super T> keyExtractor) {\n        return thenComparing(comparingLong(keyExtractor));\n    }\n    default Comparator<T> thenComparingDouble(ToDoubleFunction<? super T> keyExtractor) {\n        return thenComparing(comparingDouble(keyExtractor));\n    }\n\n    public static <T extends Comparable<? super T>> Comparator<T> reverseOrder() {\n        return Collections.reverseOrder();\n    }\n    public static <T extends Comparable<? super T>> Comparator<T> naturalOrder() {\n        return (Comparator<T>) Comparators.NaturalOrderComparator.INSTANCE;\n    }\n    public static <T> Comparator<T> nullsFirst(Comparator<? super T> comparator) {\n        return new Comparators.NullComparator<>(true, comparator);\n    }\n    public static <T> Comparator<T> nullsLast(Comparator<? super T> comparator) {\n        return new Comparators.NullComparator<>(false, comparator);\n    }\n    public static <T, U> Comparator<T> comparing(\n            Function<? super T, ? extends U> keyExtractor,\n            Comparator<? super U> keyComparator)\n    {\n        Objects.requireNonNull(keyExtractor);\n        Objects.requireNonNull(keyComparator);\n        return (Comparator<T> & Serializable)\n                (c1, c2) -> keyComparator.compare(keyExtractor.apply(c1),\n                        keyExtractor.apply(c2));\n    }\n    public static <T, U extends Comparable<? super U>> Comparator<T> comparing(\n            Function<? super T, ? extends U> keyExtractor)\n    {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n                (c1, c2) -> keyExtractor.apply(c1).compareTo(keyExtractor.apply(c2));\n    }\n    public static <T> Comparator<T> comparingInt(ToIntFunction<? super T> keyExtractor) {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n                (c1, c2) -> Integer.compare(keyExtractor.applyAsInt(c1), keyExtractor.applyAsInt(c2));\n    }\n    public static <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor) {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n                (c1, c2) -> Long.compare(keyExtractor.applyAsLong(c1), keyExtractor.applyAsLong(c2));\n    }\n    public static<T> Comparator<T> comparingDouble(ToDoubleFunction<? super T> keyExtractor) {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n                (c1, c2) -> Double.compare(keyExtractor.applyAsDouble(c1), keyExtractor.applyAsDouble(c2));\n    }\n}\n")),(0,r.kt)("h5",{id:"\u65b9\u6cd5\u89e3\u91ca"},"\u65b9\u6cd5\u89e3\u91ca"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"thenComparing")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"&\u662f java8 \u65b0\u8bed\u6cd5")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// (Comparator<T> & Serializable) == (Comparator<T>) (Serializable)\ndefault Comparator<T> thenComparing(Comparator<? super T> other) {\n    Objects.requireNonNull(other);\n    return (Comparator<T> & Serializable) (c1, c2) -> {\n        int res = compare(c1, c2);\n        return (res != 0) ? res : other.compare(c1, c2);\n    };\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u793a\u4f8b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String[] args) {\n    Comparator comparator = new Comparator() {\n        @Override\n        public int compare(Object o1, Object o2) {\n            return (o1 != o2) ? 1 : 0;\n        }\n    };\n    System.out.println(comparator.compare("111", "111"));\n    System.out.println(comparator.thenComparing((o1, o2) -> (o1 == o2) ? 1 : 0).compare("111", "111"));\n}\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"comparing")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5229\u7528 Function \u5148\u5904\u7406\u518d\u6bd4\u8f83")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public static <T, U> Comparator<T> comparing(   Function<? super T, ? extends U> keyExtractor,\n                                                Comparator<? super U> keyComparator) {\n        Objects.requireNonNull(keyExtractor);\n        Objects.requireNonNull(keyComparator);\n        return (Comparator<T> & Serializable)\n                (c1, c2) -> keyComparator.compare(keyExtractor.apply(c1),\n                        keyExtractor.apply(c2));\n    }\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"reverseOrder")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5229\u7528 Collections \u5b9e\u73b0")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public static <T extends Comparable<? super T>> Comparator<T> reverseOrder() {\n    return Collections.reverseOrder();\n}\n")),(0,r.kt)("h3",{id:"\u5f85\u7eed-5"},"\u5f85\u7eed..."),(0,r.kt)("h2",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,r.kt)("h3",{id:"object"},"Object"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6982\u8ff0")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"@HotSpotIntrinsicCandidate"),(0,r.kt)("li",{parentName:"ul"},"\u81ea JDK 9 \u5f15\u5165"),(0,r.kt)("li",{parentName:"ul"},"\u4f5c\u7528\uff1a\n\u88ab @HotSpotIntrinsicCandidate \u6807\u6ce8\u7684\u65b9\u6cd5\uff0c\u5728 HotSpot \u4e2d\u90fd\u6709\u4e00\u5957\u9ad8\u6548\u7684\u5b9e\u73b0\uff0c\u8be5\u9ad8\u6548\u5b9e\u73b0\u57fa\u4e8e CPU \u6307\u4ee4\uff0c\u8fd0\u884c\u65f6\uff0cHotSpot \u7ef4\u62a4\u7684\u9ad8\u6548\u5b9e\u73b0\u4f1a\u66ff\u4ee3 JDK \u7684\u6e90\u7801\u5b9e\u73b0\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u9ad8\u7684\u6548\u7387\u3002")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"\u6e90\u7801")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'public class MyObject {\n    //@HotSpotIntrinsicCandidate\n    public Object() {}\n    //@HotSpotIntrinsicCandidate\n    public final native Class<?> getClass();\n    @HotSpotIntrinsicCandidate\n    public native int hashCode();\n    public boolean equals(Object obj) {\n        return (this == obj);\n    }\n    @HotSpotIntrinsicCandidate\n    protected native Object clone() throws CloneNotSupportedException;\n    public String toString() {\n        return getClass().getName() + "@" + Integer.toHexString(hashCode());\n    }\n    @HotSpotIntrinsicCandidate\n    public final native void notify();\n    @HotSpotIntrinsicCandidate\n    public final native void notifyAll();\n    public final void wait() throws InterruptedException {\n        wait(0L);\n    }\n    public final native void wait(long timeoutMillis) throws InterruptedException;\n    public final void wait(long timeoutMillis, int nanos) throws InterruptedException {\n        if (timeoutMillis < 0) {\n            throw new IllegalArgumentException("timeoutMillis value is negative");\n        }\n        if (nanos < 0 || nanos > 999999) {\n            throw new IllegalArgumentException(\n                    "nanosecond timeout value out of range");\n        }\n        if (nanos > 0 && timeoutMillis < Long.MAX_VALUE) {\n            timeoutMillis++;\n        }\n        wait(timeoutMillis);\n    }\n    @Deprecated(since="9")\n    protected void finalize() throws Throwable { }\n}\n')),(0,r.kt)("h2",{id:"\u5f85\u7eed-6"},"\u5f85\u7eed..."))}s.isMDXComponent=!0}}]);