"use strict";(self.webpackChunktrdthg_github_io=self.webpackChunktrdthg_github_io||[]).push([[3878],{3905:(a,t,e)=>{e.d(t,{Zo:()=>s,kt:()=>k});var n=e(7294);function r(a,t,e){return t in a?Object.defineProperty(a,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[t]=e,a}function l(a,t){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(a,t).enumerable}))),e.push.apply(e,n)}return e}function p(a){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?l(Object(e),!0).forEach((function(t){r(a,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(t){Object.defineProperty(a,t,Object.getOwnPropertyDescriptor(e,t))}))}return a}function i(a,t){if(null==a)return{};var e,n,r=function(a,t){if(null==a)return{};var e,n,r={},l=Object.keys(a);for(n=0;n<l.length;n++)e=l[n],t.indexOf(e)>=0||(r[e]=a[e]);return r}(a,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(a);for(n=0;n<l.length;n++)e=l[n],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(r[e]=a[e])}return r}var o=n.createContext({}),d=function(a){var t=n.useContext(o),e=t;return a&&(e="function"==typeof a?a(t):p(p({},t),a)),e},s=function(a){var t=d(a.components);return n.createElement(o.Provider,{value:t},a.children)},m={inlineCode:"code",wrapper:function(a){var t=a.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(a,t){var e=a.components,r=a.mdxType,l=a.originalType,o=a.parentName,s=i(a,["components","mdxType","originalType","parentName"]),u=d(e),k=r,h=u["".concat(o,".").concat(k)]||u[k]||m[k]||l;return e?n.createElement(h,p(p({ref:t},s),{},{components:e})):n.createElement(h,p({ref:t},s))}));function k(a,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof a||r){var l=e.length,p=new Array(l);p[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=a,i.mdxType="string"==typeof a?a:r,p[1]=i;for(var d=2;d<l;d++)p[d]=e[d];return n.createElement.apply(null,p)}return n.createElement.apply(null,e)}u.displayName="MDXCreateElement"},7796:(a,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=e(7462),r=(e(7294),e(3905));const l={},p="\u65e5\u5fd7",i={unversionedId:"log",id:"log",title:"\u65e5\u5fd7",description:"6 \u6708",source:"@site/docs/log.md",sourceDirName:".",slug:"/log",permalink:"/docs/log",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6587\u6863\u9875",permalink:"/docs/intro"}},o={},d=[{value:"6 \u6708",id:"6-\u6708",level:2},{value:"6 \u6708 13 \u65e5",id:"6-\u6708-13-\u65e5",level:3},{value:"6 \u6708 9 \u65e5",id:"6-\u6708-9-\u65e5",level:3},{value:"6 \u6708 2 \u65e5",id:"6-\u6708-2-\u65e5",level:3},{value:"5 \u6708",id:"5-\u6708",level:2},{value:"5 \u6708 31 \u65e5",id:"5-\u6708-31-\u65e5",level:3},{value:"5 \u6708 30 \u65e5",id:"5-\u6708-30-\u65e5",level:3},{value:"5 \u6708 27 \u65e5",id:"5-\u6708-27-\u65e5",level:3},{value:"5 \u6708 26 \u65e5",id:"5-\u6708-26-\u65e5",level:3},{value:"5 \u6708 22 \u65e5",id:"5-\u6708-22-\u65e5",level:3},{value:"5 \u6708 20 \u65e5",id:"5-\u6708-20-\u65e5",level:3},{value:"5 \u6708 18 \u65e5",id:"5-\u6708-18-\u65e5",level:3},{value:"5 \u6708 15 \u65e5",id:"5-\u6708-15-\u65e5",level:3},{value:"5 \u6708 14 \u65e5",id:"5-\u6708-14-\u65e5",level:3},{value:"5 \u6708 13 \u65e5",id:"5-\u6708-13-\u65e5",level:3},{value:"5 \u6708 12 \u65e5",id:"5-\u6708-12-\u65e5",level:3},{value:"5 \u6708 11 \u65e5",id:"5-\u6708-11-\u65e5",level:3},{value:"5 \u6708 10 \u65e5",id:"5-\u6708-10-\u65e5",level:3},{value:"3 \u6708",id:"3-\u6708",level:2},{value:"3 \u6708 6 \u65e5",id:"3-\u6708-6-\u65e5",level:3},{value:"1. pickle \u6a21\u5757",id:"1-pickle-\u6a21\u5757",level:5},{value:"2. networks.from_dict_of_lists",id:"2-networksfrom_dict_of_lists",level:5},{value:"1 \u6708",id:"1-\u6708",level:2},{value:"1 \u6708 14 \u65e5",id:"1-\u6708-14-\u65e5",level:3},{value:"1. Java \u5904\u7406 JSON",id:"1-java-\u5904\u7406-json",level:4},{value:"2. ArrayList",id:"2-arraylist",level:4},{value:"3. HashMap",id:"3-hashmap",level:4},{value:"1 \u6708 15 \u65e5",id:"1-\u6708-15-\u65e5",level:3},{value:"1. \u795e\u7ecf\u516b\u80a1\u590d\u4e60",id:"1-\u795e\u7ecf\u516b\u80a1\u590d\u4e60",level:4},{value:"2. numpy \u65b9\u6cd5",id:"2-numpy-\u65b9\u6cd5",level:4},{value:"3. RNN \u671f\u671b\u7684\u8f93\u5165\u5f62\u72b6",id:"3-rnn-\u671f\u671b\u7684\u8f93\u5165\u5f62\u72b6",level:4},{value:"1 \u6708 16 \u65e5",id:"1-\u6708-16-\u65e5",level:3},{value:"1. Embedding \u7f16\u7801",id:"1-embedding-\u7f16\u7801",level:4},{value:"2. spring MVC",id:"2-spring-mvc",level:4},{value:"3. SpringBoot(\u6c34)",id:"3-springboot\u6c34",level:4},{value:"4. pandas \u8bfb\u53d6\u5217",id:"4-pandas-\u8bfb\u53d6\u5217",level:4},{value:"5. numpy",id:"5-numpy",level:4},{value:"1 \u6708 17 \u65e5",id:"1-\u6708-17-\u65e5",level:3},{value:"1. Sequential \u53c2\u6570",id:"1-sequential-\u53c2\u6570",level:4},{value:"2. cp_callbacks \u53c2\u6570",id:"2-cp_callbacks-\u53c2\u6570",level:4},{value:"3. model.fit \u53c2\u6570",id:"3-modelfit-\u53c2\u6570",level:4},{value:"4. \u5f52\u4e00\u5316\u64cd\u4f5c",id:"4-\u5f52\u4e00\u5316\u64cd\u4f5c",level:4},{value:"5. TensorBoard \u4f7f\u7528",id:"5-tensorboard-\u4f7f\u7528",level:4},{value:"1 \u6708 18 \u65e5",id:"1-\u6708-18-\u65e5",level:3},{value:"1. \u50bb\u5b50\u9884\u6d4b\u80a1\u5e02",id:"1-\u50bb\u5b50\u9884\u6d4b\u80a1\u5e02",level:4},{value:"2. pandas \u5220\u9664\u5217",id:"2-pandas-\u5220\u9664\u5217",level:4},{value:"3. pandas \u89e3\u6790\u65f6\u95f4",id:"3-pandas-\u89e3\u6790\u65f6\u95f4",level:4},{value:"4. pandas \u7b5b\u9009\u6570\u636e",id:"4-pandas-\u7b5b\u9009\u6570\u636e",level:4},{value:"1 \u6708 19 \u65e5",id:"1-\u6708-19-\u65e5",level:3},{value:"1. pandas \u884c\u5217\u64cd\u4f5c",id:"1-pandas-\u884c\u5217\u64cd\u4f5c",level:4},{value:"2. pandas \u65e5\u671f (\u5b8c\u6574)",id:"2-pandas-\u65e5\u671f-\u5b8c\u6574",level:4},{value:"3. Series \u5bf9\u8c61",id:"3-series-\u5bf9\u8c61",level:4},{value:"1 \u6708 20 \u65e5",id:"1-\u6708-20-\u65e5",level:3},{value:"1. \u83b7\u53d6\u67d0\u6708\u5929\u6570",id:"1-\u83b7\u53d6\u67d0\u6708\u5929\u6570",level:4},{value:"2. \u7eb5\u5411\u663e\u793a x \u8f74\u5750\u6807",id:"2-\u7eb5\u5411\u663e\u793a-x-\u8f74\u5750\u6807",level:4},{value:"3. pandas \u7b5b\u9009\u6ce8\u610f",id:"3-pandas-\u7b5b\u9009\u6ce8\u610f",level:4},{value:"1 \u6708 21 \u65e5",id:"1-\u6708-21-\u65e5",level:3},{value:"1. \u5206\u5272\u7ebf (\u6c34)",id:"1-\u5206\u5272\u7ebf-\u6c34",level:4},{value:"2. \u9632\u6b62\u65e0 key",id:"2-\u9632\u6b62\u65e0-key",level:4},{value:"3. onehot \u5e94\u7528",id:"3-onehot-\u5e94\u7528",level:4},{value:"1 \u6708 22 \u65e5",id:"1-\u6708-22-\u65e5",level:3},{value:"1. \u53cd\u5f52\u4e00\u5316 (1.17)",id:"1-\u53cd\u5f52\u4e00\u5316-117",level:4},{value:"2. pandas \u6392\u5e8f",id:"2-pandas-\u6392\u5e8f",level:4},{value:"1.23 \u65e5~ 1.27 \u65e5",id:"123-\u65e5-127-\u65e5",level:3},{value:"1.\u795e\u7ecf\u7f51\u7edc\u7ecf\u9a8c\u603b\u7ed3",id:"1\u795e\u7ecf\u7f51\u7edc\u7ecf\u9a8c\u603b\u7ed3",level:4}],s={toc:d};function m(a){let{components:t,...e}=a;return(0,r.kt)("wrapper",(0,n.Z)({},s,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u65e5\u5fd7"},"\u65e5\u5fd7"),(0,r.kt)("p",null,"::: tip \u63d0\u793a this is a tip :::"),(0,r.kt)("h2",{id:"6-\u6708"},"6 \u6708"),(0,r.kt)("h3",{id:"6-\u6708-13-\u65e5"},"6 \u6708 13 \u65e5"),(0,r.kt)("p",null,"\u8ba1\u5212\u8fd8\u884c\u5427\uff0c\u867d\u7136\u671f\u672b\u6ca1\u597d\u597d\u590d\u4e60 \u770b java \u6e90\u7801\u662f\u771f\u7684\u529d\u9000\uff0cHashMap \u7684\u7ea2\u9ed1\u6811\u5b9e\u73b0\u5148\u653e\u4e00\u8fb9\u5427\uff0c\u8fd9\u8fb9\u51c6\u5907\u5148\u4ece TreeMap \u5165\u624b :-\uff09\nSpring-Cloud-Alibaba \u7684\u7248\u672c\u95ee\u9898\u771f\u70e6\u4eba\uff0c\u52a0\u4e86 @LoadBalanced\uff0c\u670d\u52a1\u90fd\u5728 nacos \u6ce8\u518c\u4e86\u4e5f\u8fd8\u662f\u627e\u4e0d\u5230"),(0,r.kt)("h3",{id:"6-\u6708-9-\u65e5"},"6 \u6708 9 \u65e5"),(0,r.kt)("p",null,"\u53bb\u4e86\u817e\u8baf serverless \u5927\u4f1a\uff0c\u5b66\u4e60\u4e86\u4e00\u6ce2\u65b0\u77e5\u8bc6\uff0c\u505c\u66f4\u4e86\u51e0\u5929 \u6307\u5b9a\u4e86\u5b66\u4e60\u8ba1\u5212"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Rust\uff08\u4e2a\u4eba\u5174\u8da3\uff09"),(0,r.kt)("li",{parentName:"ol"},"Java\uff08\u6df7\u53e3\u996d\u5403\uff1a\u57fa\u7840 + \u6846\u67b6\uff09\u76ee\u524d\u7f13\u6b65\u63a8\u8fdb\u4e2d \u5e0c\u671b\u6587\u6863\u8865\u9f50\u4e5f\u80fd\u52a0\u5165\u6bcf\u65e5\u4efb\u52a1\u4e2d")),(0,r.kt)("h3",{id:"6-\u6708-2-\u65e5"},"6 \u6708 2 \u65e5"),(0,r.kt)("p",null,"\u8fd9\u4e24\u5929\u81ea\u5df1\u901a\u8fc7\u8d2d\u4e70 VPS \u642d\u5efa\u4e86\u81ea\u5df1\u7684 v2ray\uff0c\u642d\u5efa\u8fc7\u7a0b\u4e2d\u670d\u52a1\u7aef\u5b89\u88c5\u914d\u7f6e\u5f88\u7b80\u5355\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\u53ef\u4ee5\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"v2ray url"),"\u83b7\u53d6 vmess \u914d\u7f6e\u8fde\u63a5\uff0c\u624b\u673a\u7aef\u8fde\u63a5\u5f88\u987a\u5229\uff0cwindows\uff0clinux \u914d\u7f6e\u5f88\u6709\u95ee\u9898\uff0clinux \u4e0b edge \u6d4f\u89c8\u5668\u6ca1\u6cd5\u7ffb\u5899\uff0c\u76f4\u5230\u7a81\u7136\u53d1\u73b0\u706b\u72d0\u80fd\u6b63\u5e38\u4f7f\u7528\u624d\u77e5\u9053 edge\uff08chrome\uff09\u8d70\u7684\u662f\u7cfb\u7edf\u4ee3\u7406\uff0c\u9700\u8981\u624b\u52a8\u914d\u7f6e\u7cfb\u7edf\u4ee3\u7406\u540e\u624d\u80fd\u6b63\u5e38\u4f7f\u7528\u3002"),(0,r.kt)("h2",{id:"5-\u6708"},"5 \u6708"),(0,r.kt)("h3",{id:"5-\u6708-31-\u65e5"},"5 \u6708 31 \u65e5"),(0,r.kt)("p",null,"\u4fee\u590d\u4e86\u5173\u8054\u67e5\u8be2\u7684 bug \u4fee\u590d\u4e86\u6743\u9650\u9a8c\u8bc1\u7684 bug\uff0c\u6743\u9650\u9a8c\u8bc1\u4e5f\u8981\u5728 map \u4e2d\u6dfb\u52a0 authc \u8fdb\u884c\u767b\u5f55\u9a8c\u8bc1 \u628a token \u6539\u4e3a\u4e86 access_token +\nrefresh_token \u5b9e\u73b0\u4e86 token \u7684\u81ea\u52a8\u66f4\u65b0 \u5c06 username \u6539\u4e3a\u4ece token \u89e3\u6790\u5f97\u5230"),(0,r.kt)("h3",{id:"5-\u6708-30-\u65e5"},"5 \u6708 30 \u65e5"),(0,r.kt)("p",null,"\u4eca\u5929\u5199\u4e86 Shiro \u6a21\u5757\uff08southwind_shiro\uff09\uff0c \u4ee5\u53ca shiro + redis +\ntoken \u6574\u5408\u7248\uff0c\u73b0\u5728\u5173\u4e8e\u6743\u9650\u8fd8\u6ca1\u6709\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u6b65\u662f\u628a\u6743\u9650\u4fe1\u606f\u4e5f\u52a0\u5165\u5230 redis \u7f13\u5b58\u91cc\uff0c\u6574\u4e00\u5957\u53ef\u4ee5\u590d\u7528\u7684\u767b\u5f55\u6a21\u677f"),(0,r.kt)("h3",{id:"5-\u6708-27-\u65e5"},"5 \u6708 27 \u65e5"),(0,r.kt)("p",null,"10 \u5929\u524d\u5f00\u5f97 hashmap \u7ec8\u4e8e\u7ee7\u7eed\u4e86\uff0c\u4eca\u5929\u53ea\u628a\u589e\u5220\u770b\u4e86\uff0c \u5173\u4e8e\u7ea2\u9ed1\u6811\u65b9\u9762\u7684\u5177\u4f53\u5b9e\u73b0\u660e\u5929\u518d\u8bf4"),(0,r.kt)("h3",{id:"5-\u6708-26-\u65e5"},"5 \u6708 26 \u65e5"),(0,r.kt)("p",null,"\u82b1\u4e86\u51e0\u5929\u5929\u88c5\u4e86\u4e2a manjaro \u7cfb\u7edf\u53cc\u7cfb\u7edf\uff0c\u7528\u4e86\u4e24\u5929\u611f\u89c9\u8fd8\u4e0d\u9519\uff0c \u4eca\u5929\u65e9\u4e0a\u53d1\u73b0\u8017\u7535\u91cf\u4e0d\u5c3d\u4eba\u610f\uff0c\u53ea\u80fd\u8bf4\u4e00\u822c\u822c\u5427\uff0c\u6bd4 windows \u770b\u7740\u597d\u50cf\u5dee\u70b9\uff0c\u5728\u7528\u7528\u770b\u5148;"),(0,r.kt)("h3",{id:"5-\u6708-22-\u65e5"},"5 \u6708 22 \u65e5"),(0,r.kt)("p",null,"\u5361\u4e86\u51e0\u5929\u7684\u7ea2\u9ed1\u6811\u7ec8\u4e8e\u5199\u5b8c\u4e86... \u56de\u53bb\u770b HashMap \u5427 (\u2267\ufe4f\u2266)"),(0,r.kt)("h3",{id:"5-\u6708-20-\u65e5"},"5 \u6708 20 \u65e5"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6628\u5929\u7684 avl \u6811\uff0c\u56e0\u4e3a\u9700\u8981\u5728\u6dfb\u52a0\u8282\u70b9\u540e\u91cd\u7f6e height\uff0c\u5fc5\u987b\u4f7f\u7528\u9012\u5f52"),(0,r.kt)("li",{parentName:"ol"},"\u4eca\u5929\u7684\u7ea2\u9ed1\u6811\u975e\u5e38\u5e26\u52b2\uff0c\u5224\u65ad\u65cb\u8f6c\u6761\u4ef6\u592a xx \u4e86\uff0c\u7ea2\u9ed1\u6811\u6ca1\u6709 height \u4e86\uff0cwhile \u5faa\u73af\u4f1a\u597d\u4e9b\u7684\u591a\uff0c\u6211\u5374\u7528\u9012\u5f52\uff0c\u4eca\u5929\u53ea\u5199\u4e86 add\uff0c\u5269\u4e0b\u7684\u660e\u5929\u518d\u8bf4\uff0c\n\u5148\u5199\u4f5c\u4e1a\u4e86")),(0,r.kt)("h3",{id:"5-\u6708-18-\u65e5"},"5 \u6708 18 \u65e5"),(0,r.kt)("p",null,"\u6628\u5929\u5f00\u4e86 HashMap \u6e90\u7801\u5b66\u4e60 \u51b3\u5b9a\u5148\u53bb\u5b66\u4e60\u6811 (\u4e8c\u53c9\u641c\u7d22\u6811 -> AVL \u6811 -> \u7ea2\u9ed1\u6811)"),(0,r.kt)("h3",{id:"5-\u6708-15-\u65e5"},"5 \u6708 15 \u65e5"),(0,r.kt)("p",null,"\u5bf9\u535a\u5ba2\u52a0\u4e86\u81ea\u5b9a\u4e49\u5185\u5bb9"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6dfb\u52a0\u80cc\u666f"),(0,r.kt)("li",{parentName:"ul"},"\u7f8e\u5316\u5e03\u5c40"),(0,r.kt)("li",{parentName:"ul"},"\u5206\u79bb java \u90e8\u5206")),(0,r.kt)("h3",{id:"5-\u6708-14-\u65e5"},"5 \u6708 14 \u65e5"),(0,r.kt)("p",null,"\u5f00\u4e86 rust \u7684\u5751\uff0c\u5f00\u5751\u771f\u723d"),(0,r.kt)("h3",{id:"5-\u6708-13-\u65e5"},"5 \u6708 13 \u65e5"),(0,r.kt)("p",null,"\u5f00\u4e86\u96c6\u5408\u6846\u67b6\u6e90\u7801\u9605\u8bfb\u7684\u5751"),(0,r.kt)("h3",{id:"5-\u6708-12-\u65e5"},"5 \u6708 12 \u65e5"),(0,r.kt)("p",null,"c++ \u83dc\u9e1f\u6559\u7a0b\u770b\u5b8c\u4e86\u53cd\u6b63\uff0cjava \u7b80\u76f4\u662f C++--, \u820d\u5f03\u4e86\u5927\u91cf\u7684\u6a21\u5757\uff0c\u5347\u534e\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3 8266 micropython \u6210\u529f\u8fd0\u884c"),(0,r.kt)("h3",{id:"5-\u6708-11-\u65e5"},"5 \u6708 11 \u65e5"),(0,r.kt)("p",null,"\u5f00\u4e86 8266 \u6a21\u5757\u7684\u5751 \u5e76\u53d1\u7f16\u7a0b ++"),(0,r.kt)("h3",{id:"5-\u6708-10-\u65e5"},"5 \u6708 10 \u65e5"),(0,r.kt)("p",null,"\u5f00\u4e86 C++ \u7684\u65b0\u5751\uff0c\u770b\u5230\u4e86\u91cd\u88c1 java \u628a\u4e66\u770b\u5b8c\u4e86\uff0c\u611f\u89c9\u8bb2\u7684\u8d3c\u6d45\uff0c\u53ea\u8bb2\u4e86\u67d0\u4e9b\u7c7b\u600e\u4e48\u7528\u800c\u5df2\uff0c\u4e0d\u8fc7\u7f51\u7edc\u7f16\u7a0b\u90a3\u90e8\u5206\u7684\u611f\u5ff5\u5012\u662f\u66f4\u6e05\u6670\u4e86 UDP + TCP\n\u5e76\u53d1\u7f16\u7a0b ++"),(0,r.kt)("h2",{id:"3-\u6708"},"3 \u6708"),(0,r.kt)("h3",{id:"3-\u6708-6-\u65e5"},"3 \u6708 6 \u65e5"),(0,r.kt)("h5",{id:"1-pickle-\u6a21\u5757"},"1. pickle \u6a21\u5757"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#pickle \u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6301\u4e45\u5316\u529f\u80fd\u3002\u53ef\u4ee5\u5c06\u5bf9\u8c61\u4ee5\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u653e\u5728\u78c1\u76d8\u4e0a\u3002\n'''pickle \u6a21\u5757\u53ea\u80fd\u5728 python \u4e2d\u4f7f\u7528\uff0cpython \u4e2d\u51e0\u4e4e\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\uff08\u5217\u8868\uff0c\u5b57\u5178\uff0c\u96c6\u5408\uff0c\u7c7b\u7b49\uff09\u90fd\u53ef\u4ee5\u7528 pickle \u6765\u5e8f\u5217\u5316\uff0c\npickle \u5e8f\u5217\u5316\u540e\u7684\u6570\u636e\uff0c\u53ef\u8bfb\u6027\u5dee\uff0c\u4eba\u4e00\u822c\u65e0\u6cd5\u8bc6\u522b\u3002'''\n\n1. pickle.dump(obj, file[, protocol])\n  \u5e8f\u5217\u5316\u5bf9\u8c61\uff0c\u5e76\u5c06\u7ed3\u679c\u6570\u636e\u6d41\u5199\u5165\u5230\u6587\u4ef6\u5bf9\u8c61\u4e2d\u3002\u53c2\u6570 protocol \u662f\u5e8f\u5217\u5316\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u8868\u793a\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u5e8f\u5217\u5316\u3002      protocol \u7684\u503c\u8fd8\u53ef\u4ee5\u662f 1 \u6216 2\uff0c\u8868\u793a\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u5e8f\u5217\u5316\u3002\n1. pickle.load(file)\n  \u53cd\u5e8f\u5217\u5316\u5bf9\u8c61\u3002\u5c06\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u89e3\u6790\u4e3a\u4e00\u4e2a Python \u5bf9\u8c61\u3002\n\u3000\u3000\n#\u5176\u4e2d\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728 load(file) \u7684\u65f6\u5019\uff0c\u8981\u8ba9 python \u80fd\u591f\u627e\u5230\u7c7b\u7684\u5b9a\u4e49\uff0c\u5426\u5219\u4f1a\u62a5\u9519\uff1a\n")),(0,r.kt)("h5",{id:"2-networksfrom_dict_of_lists"},"2. networks.from_dict_of_lists"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u8bfb\u53d6\u5b57\u5178\u5bf9\u8c61\uff0c\u5e76\u5236\u6210 graph\ndol= {0:[1]} # single edge (0,1)\nG=nx.from_dict_of_lists(dol)\n")),(0,r.kt)("h2",{id:"1-\u6708"},"1 \u6708"),(0,r.kt)("h3",{id:"1-\u6708-14-\u65e5"},"1 \u6708 14 \u65e5"),(0,r.kt)("h4",{id:"1-java-\u5904\u7406-json"},"1. Java \u5904\u7406 JSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'@RequestMapping(value="/aaa",  method = RequestMethod.POST)\n    @ResponseBody\n    public JSONObject aaa(@RequestBody JSONObject user) {\n        // \u4e00\u3002\u8bfb\u53d6 json \u6570\u636e\n        {\n            "num": 1234567,\n            "pwd": 689753,\n            "arr": [\n                {"name":"\u5f20\u4e09", "age":12},\n                {"name":"\u674e\u56db", "age":13},\n                {"name":"\u738b\u4e94", "age":14}\n            ]\n        }\n        // 1.\u666e\u901a\u6570\u636e\n        Integer num = user.get("num")\n        // 2.\u5217\u8868\u5d4c\u5957 json\n        ArrayList<Map> mmm = (ArrayList) user.get("arr");\n        for (Map mm : mmm) {\n            System.out.println(mm.get("name"));\n        }\n\n        // \u4e8c\u3002\u521b\u5efa JSONObject \u5b9e\u4f8b\u5e76\u8fd4\u56de\n        //1. \u666e\u901a\u6570\u636e\n        JSONObject user_ = new JSONObject();\n        user_.put("num", user.get("num"));\n        //2. \u5217\u8868\n        JSONObject info = new JSONObject();\n        info.put("num", user.get("num"));    //\u521b\u5efa{}\n        JSONArray arr = new JSONArray();\n        arr.add(user__);                     // \u521b\u5efa\u5217\u8868 arr[],\u5e76\u628a info \u6dfb\u52a0\u5230 arr \u4e2d => [{},{}]\n        user_.put("\u5957\u5a03", arr);              // { key:val, key: [{}, {}]}\n        return user_;\n    }\n')),(0,r.kt)("h4",{id:"2-arraylist"},"2. ArrayList"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u6dfb\u52a0: add()"),(0,r.kt)("li",{parentName:"ol"},"\u53d6\u503c: get( int index )"),(0,r.kt)("li",{parentName:"ol"},"\u4fee\u6539: set( int index, Object obj)"),(0,r.kt)("li",{parentName:"ol"},"\u5220\u9664: remove(int index)"),(0,r.kt)("li",{parentName:"ol"},"\u8ba1\u7b97\u5927\u5c0f: list.size() \u65b9\u6cd5")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://www.runoob.com/java/java-arraylist-addall.html"},"addAll()")),(0,r.kt)("th",{parentName:"tr",align:null},"\u6dfb\u52a0\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u5230 arraylist \u4e2d"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-clear.html"},"clear()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5220\u9664 arraylist \u4e2d\u7684\u6240\u6709\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-clone.html"},"clone()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u590d\u5236\u4e00\u4efd arraylist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-contains.html"},"contains()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5224\u65ad\u5143\u7d20\u662f\u5426\u5728 arraylist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-indexof.html"},"indexOf()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de arraylist \u4e2d\u5143\u7d20\u7684\u7d22\u5f15\u503c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-removeall.html"},"removeAll()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5220\u9664\u5b58\u5728\u4e8e\u6307\u5b9a\u96c6\u5408\u4e2d\u7684 arraylist \u91cc\u7684\u6240\u6709\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-remove.html"},"remove()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5220\u9664 arraylist \u91cc\u7684\u5355\u4e2a\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-isempty.html"},"isEmpty()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5224\u65ad arraylist \u662f\u5426\u4e3a\u7a7a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-sublist.html"},"subList()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u622a\u53d6\u90e8\u5206 arraylist \u7684\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-sort.html"},"sort()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5bf9 arraylist \u5143\u7d20\u8fdb\u884c\u6392\u5e8f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-toarray.html"},"toArray()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c06 arraylist \u8f6c\u6362\u4e3a\u6570\u7ec4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-surecapacity.html"},"ensureCapacity"),"()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8bbe\u7f6e\u6307\u5b9a\u5bb9\u91cf\u5927\u5c0f\u7684 arraylist")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-lastindexof.html"},"lastIndexOf()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u6307\u5b9a\u5143\u7d20\u5728 arraylist \u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-retainall.html"},"retainAll()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u4fdd\u7559 arraylist \u4e2d\u5728\u6307\u5b9a\u96c6\u5408\u4e2d\u4e5f\u5b58\u5728\u7684\u90a3\u4e9b\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-containsall.html"},"containsAll()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u67e5\u770b arraylist \u662f\u5426\u5305\u542b\u6307\u5b9a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-trimtosize.html"},"trimToSize()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c06 arraylist \u4e2d\u7684\u5bb9\u91cf\u8c03\u6574\u4e3a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e2a\u6570")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-removerange.html"},"removeRange()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5220\u9664 arraylist \u4e2d\u6307\u5b9a\u7d22\u5f15\u4e4b\u95f4\u5b58\u5728\u7684\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-replaceall.html"},"replaceAll()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c06\u7ed9\u5b9a\u7684\u64cd\u4f5c\u5185\u5bb9\u66ff\u6362\u6389\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-arraylist-removeif.html"},"removeIf()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5220\u9664\u6240\u6709\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684 arraylist \u5143\u7d20")))),(0,r.kt)("h4",{id:"3-hashmap"},"3. HashMap"),(0,r.kt)("p",null,"\u521b\u5efa Map: HashMap<String, String> map = ",(0,r.kt)("strong",{parentName:"p"},"new")," HashMap<String, String>();"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'\u6dfb\u52a0 : map.put("key" : "value" )')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u83b7\u53d6 : map.get(int index)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5220\u9664 : map.remove(int index)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u8fed\u4ee3\u65b9\u6cd5"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u65b9\u6cd5 1    map.keySet() \u8fd4\u56de\u952e\u96c6\u5408   \u4f7f\u7528 map.get(key) \u83b7\u53d6 value\nfor (Integer i : Sites.keySet()) {\n    System.out.println("key: " + i + " value: " + Sites.get(i));\n}\n// \u65b9\u6cd5 2    map.values() \u8fd4\u56de\u503c\u96c6\u5408\nfor(String value: Sites.values()) {\n    System.out.print(value + ", ");\n}\n')))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://www.runoob.com/java/java-hashmap-clear.html"},"clear()")),(0,r.kt)("th",{parentName:"tr",align:null},"\u5220\u9664 hashMap \u4e2d\u7684\u6240\u6709\u952e/\u503c\u5bf9"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-clone.html"},"clone()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u590d\u5236\u4e00\u4efd hashMap")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-isempty.html"},"isEmpty()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5224\u65ad hashMap \u662f\u5426\u4e3a\u7a7a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-size.html"},"size()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u8ba1\u7b97 hashMap \u4e2d\u952e/\u503c\u5bf9\u7684\u6570\u91cf")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-put.html"},"put()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c06\u952e/\u503c\u5bf9\u6dfb\u52a0\u5230 hashMap \u4e2d")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-putall.html"},"putAll()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c06\u6240\u6709\u952e/\u503c\u5bf9\u6dfb\u52a0\u5230 hashMap \u4e2d")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-putifabsent.html"},"putIfAbsent()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5982\u679c hashMap \u4e2d\u4e0d\u5b58\u5728\u6307\u5b9a\u7684\u952e\uff0c\u5219\u5c06\u6307\u5b9a\u7684\u952e/\u503c\u5bf9\u63d2\u5165\u5230 hashMap \u4e2d\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-remove.html"},"remove()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5220\u9664 hashMap \u4e2d\u6307\u5b9a\u952e key \u7684\u6620\u5c04\u5173\u7cfb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-containskey.html"},"containsKey()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u68c0\u67e5 hashMap \u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684 key \u5bf9\u5e94\u7684\u6620\u5c04\u5173\u7cfb\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-containsvalue.html"},"containsValue()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u68c0\u67e5 hashMap \u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684 value \u5bf9\u5e94\u7684\u6620\u5c04\u5173\u7cfb\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-replace.html"},"replace()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u66ff\u6362 hashMap \u4e2d\u662f\u6307\u5b9a\u7684 key \u5bf9\u5e94\u7684 value\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-replaceall.html"},"replaceAll()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5c06 hashMap \u4e2d\u7684\u6240\u6709\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u6210\u7ed9\u5b9a\u7684\u51fd\u6570\u6240\u6267\u884c\u7684\u7ed3\u679c\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-get.html"},"get()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u6307\u5b9a key \u5bf9\u5e94\u5bf9 value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-getordefault.html"},"getOrDefault()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u6307\u5b9a key \u5bf9\u5e94\u5bf9 value\uff0c\u5982\u679c\u627e\u4e0d\u5230 key \uff0c\u5219\u8fd4\u56de\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-foreach.html"},"forEach()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5bf9 hashMap \u4e2d\u7684\u6bcf\u4e2a\u6620\u5c04\u6267\u884c\u6307\u5b9a\u7684\u64cd\u4f5c\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-entryset.html"},"entrySet()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de hashMap \u4e2d\u6240\u6709\u6620\u5c04\u9879\u7684\u96c6\u5408\u96c6\u5408\u89c6\u56fe\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-keyset.html"},"keySet"),"()"),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de hashMap \u4e2d\u6240\u6709 key \u7ec4\u6210\u7684\u96c6\u5408\u89c6\u56fe\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-values.html"},"values()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de hashMap \u4e2d\u5b58\u5728\u7684\u6240\u6709 value \u503c\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-merge.html"},"merge()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u6dfb\u52a0\u952e\u503c\u5bf9\u5230 hashMap \u4e2d")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-compute.html"},"compute()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5bf9 hashMap \u4e2d\u6307\u5b9a key \u7684\u503c\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-computeifabsent.html"},"computeIfAbsent()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5bf9 hashMap \u4e2d\u6307\u5b9a key \u7684\u503c\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u4e2a key\uff0c\u5219\u6dfb\u52a0\u5230 hasMap \u4e2d")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://www.runoob.com/java/java-hashmap-computeifpresent.html"},"computeIfPresent()")),(0,r.kt)("td",{parentName:"tr",align:null},"\u5bf9 hashMap \u4e2d\u6307\u5b9a key \u7684\u503c\u8fdb\u884c\u91cd\u65b0\u8ba1\u7b97\uff0c\u524d\u63d0\u662f\u8be5 key \u5b58\u5728\u4e8e hashMap \u4e2d\u3002")))),(0,r.kt)("h3",{id:"1-\u6708-15-\u65e5"},"1 \u6708 15 \u65e5"),(0,r.kt)("h4",{id:"1-\u795e\u7ecf\u516b\u80a1\u590d\u4e60"},"1. \u795e\u7ecf\u516b\u80a1\u590d\u4e60"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 1. \u5f15\u5165\u6570\u636e\u96c6\nfashion_mnist = tf.keras.datasets.fashion_mnist\n# (x_train, y_train), (x_test, y_test) = mnist.load_data()\n(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()\nx_train, x_test = x_train/255.0, x_test/255.0\n# 2. \u642d\u5efa\u795e\u7ecf\u7f51\u7edc\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(128, activation='relu'),\n    # tf.keras.layers.Dense(32, activation='sigmoid',kernel_regularizer=tf.keras.regularizers.l2()),\n    tf.keras.layers.Dense(10, activation='softmax'),\n])\n# 3. \u9009\u62e9 \u4f18\u5316\u5668 | \u635f\u5931\u51fd\u6570 | \u4ee5\u53ca metrics\nmodel.compile(  optimizer='adam',\n                loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False),\n                metrics=['sparse_categorical_accuracy'])\n# PS: metrics \u53ef\u9009:    y_ = y_train  y = x_train * w + b\n        1. 'accuracy'  y_\u548c y \u90fd\u662f\u6570\u503c\n        2. 'categorical_accuracy' y_\u548c y \u90fd\u662f\u72ec\u70ed\u7801\n        3. 'sparsecategorical_accuracy' y_\u662f\u6570\u503c y \u662f\u72ec\u70ed\u7801\n# 4. \u6267\u884c\u8bad\u7ec3\u8fc7\u7a0b\nmodel.fit(\n    x_train, y_train,\n    batch_size=48, epochs=5,\n    validation_data=(x_test,y_test),  #(1) \u4efb\u9009\u4e00\u4e2a \u9009\u62e9\u6d4b\u8bd5\u96c6\n    validation_split=                 #(2) \u4efb\u9009\u4e00\u4e2a \u4e0d\u9009\u62e9\u6d4b\u8bd5\u96c6\uff0c\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5212\u5206\u4e00\u5757\u4f5c\u4e3a\u6d4b\u8bd5\u96c6\n    validation_freq=1   # \u591a\u5c11 epoch \u6d4b\u8bd5\u4e00\u6b21\n)\n# 5. \u6253\u5370\u7f51\u7edc\u7ed3\u6784\u548c\u53c2\u6570\u7edf\u8ba1\nmodel.summary()\n")),(0,r.kt)("h4",{id:"2-numpy-\u65b9\u6cd5"},"2. numpy \u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"1.   reshape(\u6570\u636e\uff0c\u5f62\u72b6)  =>   x_train = np.reshape(x_train,  (len(x_train), 1, 5))\n2.   np.random.shuffle()   # \u5217\u8868\u6253\u4e71\u91cd\u6392\uff0c\u5c06 x_train \u548c y_train \u7528\u76f8\u540c\u7684\u968f\u673a\u6570\u91cd\u6392\n")),(0,r.kt)("h4",{id:"3-rnn-\u671f\u671b\u7684\u8f93\u5165\u5f62\u72b6"},"3. RNN \u671f\u671b\u7684\u8f93\u5165\u5f62\u72b6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u4ee5\u5b57\u6bcd\u9884\u6d4b\u4e3a\u4f8b    a->b b->c c->d d->e e->a\nx_train = np.reshape(x_train, (len(x_train), 1, 5))\n'''\n\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u662f (\u9001\u5165\u6837\u672c\u6570 \u5faa\u73af\u6838\u65f6\u95f4\u5c55\u5f00\u6b65\u6570 \u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u5165\u7279\u5f81\u6570)\n\u8fd9\u91cc\u6bcf\u6b21\u8f93\u5165\u4e00\u4e2a\u5b57\u6bcd \u8fd4\u56de\u4e00\u4e2a\u9884\u6d4b\u5b57\u6bcd (\u8f93\u5165\u4e00\u6b21\u5c31\u7ed9\u51fa\u9884\u6d4b\u7ed3\u679c)  \u6240\u4ee5\u5faa\u73af\u6838\u65f6\u95f4\u5c55\u5f00\u6b65\u6570\u4e3a 1\n\u8f93\u5165\u7279\u5f81\u662f\u72ec\u70ed\u7801 [1,0,0,0,0] \u6709\u4e94\u4e2a\u503c\uff0c\u6240\u4ee5\u6bcf\u4e2a\u65f6\u95f4\u6b65\u8f93\u5165\u7279\u5f81\u6570\u4e3a 5\n'''\n")),(0,r.kt)("h3",{id:"1-\u6708-16-\u65e5"},"1 \u6708 16 \u65e5"),(0,r.kt)("h4",{id:"1-embedding-\u7f16\u7801"},"1. Embedding \u7f16\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u5728 sequential \u4e2d\u642d\u5efa\u795e\u7ecf\u7f51\u7edc\u65f6\u5148\u8fdb\u884c embedding \u7f16\u7801\n# 1. \u5c06 x_train \u53d8\u6210 embedding \u671f\u5f85\u7684\u5f62\u72b6\nx_train = np.reshape(x_train, (len(x_train), 1)  # (\u6837\u672c\u6570\uff0c\u65f6\u95f4\u5c55\u5f00\u6b65\u6570)\n# 2. \u642d\u5efa\u795e\u7ecf\u7f51\u7edc\nmodel = tf.keras.Sequential([\n    Embedding(5,2),   # (\u9700\u8981\u8868\u793a\u7684\u7ed3\u679c\u6570\u91cf\uff0c\u7f16\u7801\u7ef4\u5ea6 (\u51e0\u4e2a\u6570\u5b57\u80fd\u8868\u793a\u4e00\u4e2a\u7ed3\u679c))\n    SimpleRNN(3),\n    Dense(5, activation='softmax')\n])\n")),(0,r.kt)("h4",{id:"2-spring-mvc"},"2. spring MVC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'    /// 1. \u666e\u901a\u4f20\u53c2\n    @RequestMapping(value="/index3", method = RequestMethod.POST, params={"name", "id=10"})\n    // \uff01\uff01\uff01\u6ce8\u610f\uff01\uff01\uff01 id \u7684\u7c7b\u578b\u5df2\u7ecf\u88ab\u81ea\u52a8\u5b8c\u6210\u7c7b\u578b\u8f6c\u6362\n    //0 public String index3(String name, int id) {    \u6b63\u5e38\n    //(1) \u5982\u679c\u4e0d\u60f3\u7528 name \u548c id \u4f5c\u4e3a\u53c2\u6570  \u9700\u8981\u8fdb\u884c\u53c2\u6570\u7ed1\u5b9a\n    //(2)\uff081\uff09public String index3(String str, int age) {    \u62a5\u9519\n    //(2)\uff082\uff09public String index3(String str, Integer age) {   \u4e0d\u62a5\u9519 \u4f46\u503c\u5747\u4e3a Null\n    public String index3(@RequestParam("name") String str,@RequestParam("id") int age) {\n        System.out.println("\u6267\u884c\u4e86\u5e26\u6709\u53c2\u6570\u7684 POST \u8bf7\u6c42");\n        // return "\u60a8\u4f20\u9012\u7684 name \u662f" + name + " id \u662f" + id;\n        return "\u60a8\u4f20\u9012\u7684 name \u662f" + str + " id \u662f" + age;\n    }\n    /// 2. rest \u98ce\u683c\u7684\u4f20\u53c2  \u5fc5\u987b\u8fdb\u884c\u53c2\u6570\u6620\u5c04\n    @RequestMapping(value="/rest/{name}/{id}", method = RequestMethod.POST)\n    public String rest(@PathVariable("name") String name,@PathVariable("id") int id) {\n        return "\u60a8\u4f20\u9012\u7684 name \u662f" + name + " id \u662f" + id;\n    }\n\n    /// 3. \u53d6\u51fa cookie \u4fe1\u606f\n    @RequestMapping("/cookie")\n    public String cookie (@CookieValue(value = "JSESSIONID") String sessionId) {\n        return "SESSIONID: " + sessionId ;\n    }\n')),(0,r.kt)("h4",{id:"3-springboot\u6c34"},"3. SpringBoot(\u6c34)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"server:\n  port: 8081  # \u9ed8\u8ba4\u7aef\u53e3\n")),(0,r.kt)("h4",{id:"4-pandas-\u8bfb\u53d6\u5217"},"4. pandas \u8bfb\u53d6\u5217"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"data = pd.read_csv('./pandas/test.csv')\n# 1. loc \u5355\u884c\n# 2. iloc[1:2,3:4] \u6309\u7d22\u5f15 \u884c\u548c\u5217\n# 3. iloc[[1,2,3], [2,3]] \u7b2c 1,2,3 \u884c\u7684\u7b2c 2,3 \u5217\ndata_name_and_score = data.iloc[1:2, 1:3].values  # iloc \u65b9\u6cd5 [\u884c\uff0c\u5217] \u90fd\u662f\u524d\u95ed\u540e\u5f00  \u7ed3\u679c\u4ee5\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\n# 4. \u5199\u5165 csv/excel\ndf.to_csv('a.csv')\ndf.to_excel('a.xlsx', sheet_name='sheet1')\n")),(0,r.kt)("h4",{id:"5-numpy"},"5. numpy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 1. np.asarray() \u53ef\u4ee5\u5c06\u6570\u636e\u8f6c\u4e3a numpy \u683c\u5f0f\n# 2. data.flatten() \u53ef\u4ee5\u5c06\u6570\u636e\u62c9\u4e3a\u4e00\u7ef4\n# 3. reshaape(data, (1,-1))   (\u6570\u636e\uff0c\u5f62\u72b6) \u4e0d\u5fc5\u591a\u8bf4\n")),(0,r.kt)("h3",{id:"1-\u6708-17-\u65e5"},"1 \u6708 17 \u65e5"),(0,r.kt)("h4",{id:"1-sequential-\u53c2\u6570"},"1. Sequential \u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 1. RNN\nSimpleRNN(80, return_sequences=True),  # \u4e24\u5c42\u90fd\u662f RNN \u65f6\uff0c\u524d\u4e00\u5c42\u8981\u52a0\u4e0a return_sequences=True\n# 2. Dropout\nDropout(0.2),  # \u968f\u5373\u6254\u6389\u4e00\u4e9b\u795e\u7ecf\u5143\uff0c\u9632\u6b62\u8fc7\u62df\u5408\uff0c\u53ef\u4ee5\u5148\u8bbe\u4e3a 0\uff0c\u9010\u6e10\u8c03\u5927\uff0c\u627e\u5230\u6700\u4f18\u503c\n")),(0,r.kt)("h4",{id:"2-cp_callbacks-\u53c2\u6570"},"2. cp_callbacks \u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"cp_callback = tf.keras.callbacks.ModelCheckPoint(\n    filepath = checkpoint_save_path,\n    save_weights_only = True,\n    save_best_only = True,\n    monitor = 'var_loss', # \u6307\u5b9a\u9700\u8981\u76d1\u6d4b\u7684\u503c\n)\n")),(0,r.kt)("h4",{id:"3-modelfit-\u53c2\u6570"},"3. model.fit \u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u90fd\u7528\u6765\u63cf\u8ff0\u9a8c\u8bc1\u96c6\uff0c\u4e0e\u6d4b\u8bd5\u96c6\u4e0d\u540c\nvalidation_data=(x_test, y_test),\nvalidation_freq=1,\n'''\n\u5176\u5b9e\u9a8c\u8bc1\u96c6\u662f\u4ece\u8bad\u7ec3\u96c6\u4e2d\u62bd\u53d6\u51fa\u6765\u7528\u4e8e\u8c03\u53c2\u7684\uff0c\n\u800c\u6d4b\u8bd5\u96c6\u662f\u548c\u8bad\u7ec3\u96c6\u65e0\u4ea4\u96c6\u7684\uff0c\u7528\u4e8e\u6d4b\u8bd5\u6240\u9009\u53c2\u6570\u7528\u4e8e\u8be5\u6a21\u578b\u7684\u6548\u679c\u7684\uff0c\u8fd9\u4e2a\u8fd8\u662f\u4e0d\u8981\u5f04\u9519\u4e86\u3002\u3002\u3002\n\u5728 Keras \u4e2d\uff0c\u9a8c\u8bc1\u96c6\u7684\u5212\u5206\u53ea\u8981\u5728 fit \u51fd\u6570\u91cc\u8bbe\u7f6e validation_split \u7684\u503c\u5c31\u597d\u4e86\uff0c\u8fd9\u4e2a\u5bf9\u5e94\u4e86\u53d6\u8bad\u7ec3\u96c6\u4e2d\u767e\u5206\u4e4b\u51e0\u7684\u6570\u636e\u51fa\u6765\u5f53\u505a\u9a8c\u8bc1\u96c6\u3002\n'''\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u8bad\u7ec3\u96c6\uff08train set\uff09\u2014\u2014 \u7528\u4e8e\u6a21\u578b\u62df\u5408\u7684\u6570\u636e\u6837\u672c\u3002\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5bf9\u8bad\u7ec3\u8bef\u5dee\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"\u4f5c\u7528\uff1a\u8bad\u7ec3\u7684\u6743\u91cd\u53c2\u6570\u3002"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u9a8c\u8bc1\u96c6\uff08validation set\uff09\u2014\u2014 \u662f\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5355\u72ec\u7559\u51fa\u7684\u6837\u672c\u96c6\uff0c"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"\u4f5c\u7528\uff1a\u8c03\u6574\u6a21\u578b\u7684\u8d85\u53c2\u6570\n\u9a8c\u8bc1\u96c6\u53ef\u4ee5\u7528\u5728\u8bad\u7ec3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u822c\u5728\u8bad\u7ec3\u65f6\uff0c\u51e0\u4e2a epoch \u7ed3\u675f\u540e\u8dd1\u4e00\u6b21\u9a8c\u8bc1\u96c6\u770b\u770b\u6548\u679c\u3002(\u9a8c\u8bc1\u5f97\u592a\u9891\u7e41\u4f1a\u5f71\u54cd\u8bad\u7ec3\u901f\u5ea6) \u8fd9\u6837\u505a\u7684\u7b2c\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u53ef\u4ee5\u53ca\u65f6\u53d1\u73b0\u6a21\u578b\u6216\u8005\u53c2\u6570\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u53d1\u6563\u5566\u3001\u51fa\u73b0\u5f88\u5947\u602a\u7684\u7ed3\u679c\u5566 (\u5982\u65e0\u7a77\u5927)\u3001mAP \u4e0d\u589e\u957f\u6216\u8005\u589e\u957f\u5f88\u6162\u5566\u7b49\u7b49\u60c5\u51b5\uff0c\u8fd9\u65f6\u53ef\u4ee5\u53ca\u65f6\u7ec8\u6b62\u8bad\u7ec3\uff0c\u91cd\u65b0\u8c03\u53c2\u6216\u8005\u8c03\u6574\u6a21\u578b\uff0c\u800c\u4e0d\u9700\u8981\u7b49\u5230\u8bad\u7ec3\u7ed3\u675f\u3002\u53e6\u5916\u4e00\u4e2a\u597d\u5904\u662f\u9a8c\u8bc1\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\uff0c\u5982\u679c\u5728\u9a8c\u8bc1\u96c6\u4e0a\u7684\u6548\u679c\u6bd4\u8bad\u7ec3\u96c6\u4e0a\u5dee\u5f88\u591a\uff0c\u5c31\u8be5\u8003\u8651\u6a21\u578b\u662f\u5426\u8fc7\u62df\u5408\u4e86\u3002\u540c\u65f6\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u96c6\u5bf9\u6bd4\u4e0d\u540c\u7684\u6a21\u578b\u3002\u5728\u4e00\u822c\u7684\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\n\u6211\u4eec\u7528\u9a8c\u8bc1\u6570\u636e\u96c6\u53bb\u5bfb\u627e\u6700\u4f18\u7684\u7f51\u7edc\u6df1\u5ea6\uff08number of hidden\nlayers)\uff0c\u6216\u8005\u51b3\u5b9a\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u7684\u505c\u6b62\u70b9\u6216\u8005\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u9009\u62e9\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u7684\u6570\u91cf\uff1b\n\u7531\u4e8e\u9a8c\u8bc1\u96c6\u662f\u7528\u6765\u201d\u8bad\u7ec3\u201d\u8d85\u53c2\u6570\u7684\uff0c\u5c3d\u7ba1\u9a8c\u8bc1\u96c6\u7684\u8bef\u5dee\u901a\u5e38\u4f1a\u6bd4\u8bad\u7ec3\u96c6\u8bef\u5dee\u5c0f\uff0c\u4e00\u822c\u6765\u8bf4\u9a8c\u8bc1\u96c6\u6bd4\u8f83\u5c0f\u4f1a\u4f4e\u4f30\u6cdb\u5316\u8bef\u5dee\u3002\u6240\u6709\u8d85\u53c2\u6570\u4f18\u5316\u5b8c\u6210\u4e4b\u540e\uff0c\u6cdb\u5316\u8bef\u5dee\u53ef\u80fd\u4f1a\u901a\u8fc7\u6d4b\u8bd5\u96c6\u6765\u4f30\u8ba1\u3002\n\u5728\u666e\u901a\u7684\u673a\u5668\u5b66\u4e60\u4e2d\u5e38\u7528\u7684\u4ea4\u53c9\u9a8c\u8bc1\uff08Cross Validation) \u5c31\u662f\u628a\u8bad\u7ec3\u6570\u636e\u96c6\u672c\u8eab\u518d\u7ec6\u5206\u6210\u4e0d\u540c\u7684\u9a8c\u8bc1\u6570\u636e\u96c6\u53bb\u8bad\u7ec3\u6a21\u578b\u3002"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6d4b\u8bd5\u96c6 \u2014\u2014 \u7528\u6765\u8bc4\u4f30\u6a21\u6700\u7ec8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u4f46\u4e0d\u80fd\u4f5c\u4e3a\u8c03\u53c2\u3001\u9009\u62e9\u7279\u5f81\u7b49\u7b97\u6cd5\u76f8\u5173\u7684\u9009\u62e9\u7684\u4f9d\u636e\u3002"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"\u4f5c\u7528\uff1a\u53ea\u662f\u9a8c\u8bc1")))),(0,r.kt)("h4",{id:"4-\u5f52\u4e00\u5316\u64cd\u4f5c"},"4. \u5f52\u4e00\u5316\u64cd\u4f5c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from sklearn.preprocessing import MinMaxScaler\nmotai = pd.read_csv('./tensorflow/SH600519.csv')\ntrain_set = motai.iloc[:2426-300,2:3].values\ntest_set = motai.iloc[2426-300:,2:3].values\n# !! \u5f52\u4e00\u5316 !!\nsc = MinMaxScaler(feature_range=(0,1))  # \u5b9a\u4e49\u5f52\u4e00\u5316\uff0c\u9009\u5b9a\u8303\u56f4\u5230 (0-1) \u95f4\ntrain_set_scaled = sc.fit_transform(train_set)\n# fit \u6c42\u5f97\u8bad\u7ec3\u96c6\u56fa\u6709\u5c5e\u6027 (\u5982\u5e73\u5747\u503c\uff0c\u6700\u5927\u503c\uff0c\u65b9\u5dee\u7b49), transform \u5bf9\u8bad\u7ec3\u96c6\u8fdb\u884c\u5f52\u4e00\u5316\ntest_set = sc.transform(test_set)\n# \u5229\u7528\u8bad\u7ec3\u96c6\u7684\u5c5e\u6027\u5bf9\u6d4b\u8bd5\u96c6\u8fdb\u884c\u5f52\u4e00\u5316\n")),(0,r.kt)("h4",{id:"5-tensorboard-\u4f7f\u7528"},"5. TensorBoard \u4f7f\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# 1. \u8bbe\u7f6e\u8def\u5f84\u548c\u6587\u4ef6\u540d\nlog_dir="logs/fit/" + datetime.datetime.now().strftime("%Y%m%d-%H%M%S")\n# 2. \u6dfb\u52a0 tf.keras.callback.TensorBoard \u56de\u8c03\u53ef\u786e\u4fdd\u521b\u5efa\u548c\u5b58\u50a8\u65e5\u5fd7\ntensorboard_callback = tf.keras.callbacks.TensorBoard(log_dir=log_dir, histogram_freq=1)\n# 3. callbacks \u4e2d\u52a0\u5165\ncallbacks = [cp_callback,tensorboard_callback]\n# 4. \u63a7\u5236\u53f0\u8fd0\u884c  (\u9700\u8981\u5c06 tensorboard \u52a0\u5165\u73af\u5883\u53d8\u91cf  \u4f8b\u5982:C:\\Users\\YMZ\\anaconda3\\envs\\tf2\\Scripts  )\ntensorboard --logdir logs/fit\n')),(0,r.kt)("h3",{id:"1-\u6708-18-\u65e5"},"1 \u6708 18 \u65e5"),(0,r.kt)("h4",{id:"1-\u50bb\u5b50\u9884\u6d4b\u80a1\u5e02"},"1. \u50bb\u5b50\u9884\u6d4b\u80a1\u5e02"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u8f93\u5165 : 60 \u5929\u7684\u5f00\u76d8\u4ef7"),(0,r.kt)("li",{parentName:"ol"},"\u8f93\u51fa : 61 \u5929\u7684\u5f00\u76d8\u4ef7"),(0,r.kt)("li",{parentName:"ol"},"\u628a\u9884\u6d4b\u7684 61 \u5929\u5f53\u4f5c\u8f93\u5165\u503c , \u91cd\u590d\u4e0a\u8ff0\u5b9e\u9a8c"),(0,r.kt)("li",{parentName:"ol"},"\u7ed3\u679c : \u66f2\u7ebf\u8d8b\u4e8e\u5e73\u5766\uff0c\u6ca1\u7528")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"i = 500\ndata60_ori = maotai.iloc[:1213,2:3].values\ndef pre(i, data60_ori):\n    i -= 1\n    if i > 0:\n        data60 = data60_ori\n        data60 = sc.transform(data60)\n        readyfortest = []\n        readyfortest.append(data60[len(data60)-60:len(data60),0])\n        readyfortest = np.array(readyfortest)\n        readyfortest = np.reshape(readyfortest, (readyfortest.shape[0], 60, 1))\n        preprice = model.predict(readyfortest)\n        preprice = sc.inverse_transform(preprice)\n        data60_ori = np.vstack((data60_ori, preprice))\n        pre(i, data60_ori)\n    else:\n        print('------over------')\n        print(data60_ori.shape)\n        plt.plot(all_set, c='r', label='Real Price')\n        plt.plot(data60_ori, c='b', label='Predict Price')\n        plt.plot(test1, c='y', label='Predict Price')\n        plt.legend()\n        plt.show()\n")),(0,r.kt)("h4",{id:"2-pandas-\u5220\u9664\u5217"},"2. pandas \u5220\u9664\u5217"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u5728\u6570\u636e\u9884\u5904\u7406\u4e2d\uff0c\u9700\u8981\u5220\u9664 dataframe \u7684\u4e00\u5217\u7684\u8bdd\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u3002\ntrain = train.drop(['A'], axis=1)\n# \u5176\u4e2d axis=1 \u4ee3\u8868\u7684\u662f\u8981\u5220\u9664\u4e00\u5217\uff0c\u800c\u4e0d\u662f\u4e00\u884c\u3002\n")),(0,r.kt)("h4",{id:"3-pandas-\u89e3\u6790\u65f6\u95f4"},"3. pandas \u89e3\u6790\u65f6\u95f4"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"trips = pd.read_csv('./data/trips.csv',encoding='gbk')\n# 1. \u8f6c\u6362\u683c\u5f0f\ntrips['\u8fdb\u7ad9\u65f6\u95f4'] = pd.to_datetime(trips['\u8fdb\u7ad9\u65f6\u95f4'],format=\"%Y/%m/%d %H:%M\")\n# 2. \u89e3\u6790\nyear = trips['\u67d0\u4e00\u5217'].dt.year  # \u83b7\u53d6\u4e00\u5217\nyear = trips['\u67d0\u4e00\u5217'][int index].year # \u53ea\u83b7\u53d6\u4e00\u4e2a\n")),(0,r.kt)("h4",{id:"4-pandas-\u7b5b\u9009\u6570\u636e"},"4. pandas \u7b5b\u9009\u6570\u636e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 1. ==\nprint( trips.loc[ trips['\u8fdb\u7ad9\u65f6\u95f4'].dt.month.isin([4,5]) ])\n# 2. is in []\nprint( trips.loc[ trips['\u8fdb\u7ad9\u65f6\u95f4'].dt.month.isin([2,3,4]) ])\n# 3.  & | !\n\u6ce8\u610f\u53ea\u6709\u4e00\u4e2a & \u6216 |\n# 4. \u7b5b\u9009\u7ed3\u679c\u8ba1\u6570 (\u4e24\u79cd\u90fd\u884c)\nprint( trips.loc[ trips['\u8fdb\u7ad9\u65f6\u95f4'].dt.month.isin([2,3,5,6,7]) ].count())\nprint( trips.loc[ trips['\u8fdb\u7ad9\u65f6\u95f4'].dt.month.isin([2,3,5,6,7]) ]['\u8fdb\u7ad9\u65f6\u95f4'].count())\n")),(0,r.kt)("h3",{id:"1-\u6708-19-\u65e5"},"1 \u6708 19 \u65e5"),(0,r.kt)("h4",{id:"1-pandas-\u884c\u5217\u64cd\u4f5c"},"1. pandas \u884c\u5217\u64cd\u4f5c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 1. \u5224\u65ad\u662f\u661f\u671f\u51e0\ntrips['dayofweek'] = trips['\u8fdb\u7ad9\u65f6\u95f4'].dt.dayofweek\n# 2. \u65b0\u589e\u884c/\u5217\ntrips['new_col'] = '0'\ntrips.loc['new_row'] = '0'\n# 3. \u904d\u5386\u884c\nfor index, row in trips.iterrows():\n# 4. \u66ff\u6362\u67d0\u683c\u6570\u636e\ntrips.iloc[index,10] = row_[1]\n")),(0,r.kt)("h4",{id:"2-pandas-\u65e5\u671f-\u5b8c\u6574"},"2. pandas \u65e5\u671f (\u5b8c\u6574)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pandas \u65e5\u671f\u65f6\u95f4\u6570\u636e\u7684\u5206\u5272\u63d0\u53d6\u64cd\u4f5c\nimport pandas as pd\nimport numpy as np\nimport time\ns=time.time()\ndata_2019=pd.read_excel('d:\\\\data\\\\abc.xlsx')\ndata=data_2019[['\u5361\u53f7','\u4ea4\u6613\u65f6\u95f4']]\ndata['\u65e5\u671f'] =data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.date\ndata['\u65f6\u95f4'] =data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.time\ndata['\u5e74'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.year\ndata['\u5b63\u8282'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.quarter\ndata['\u6708'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.month\ndata['\u5468']=data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.week\ndata['\u65e5'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.day\ndata['\u5c0f\u65f6'] =data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.hour\ndata['\u5206\u949f'] =data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.minute\ndata['\u79d2'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.second\ndata['\u4e00\u5e74\u7b2c\u51e0\u5929'] =data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.dayofyear\ndata['\u4e00\u5e74\u7b2c\u51e0\u5468'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.weekofyear\ndata['\u4e00\u5468\u7b2c\u51e0\u5929'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.dayofweek\ndata['\u4e00\u4e2a\u6708\u542b\u6709\u591a\u5c11\u5929'] = data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.days_in_month\ndata['\u661f\u671f\u540d\u79f0'] =data_2019['\u4ea4\u6613\u65f6\u95f4'].dt.weekday_name\nprint(data)\ndata.to_excel('d:\\\\data\\\\abcsss.xlsx')\n")),(0,r.kt)("h4",{id:"3-series-\u5bf9\u8c61"},"3. Series \u5bf9\u8c61"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Series \u5e38\u7528\u5c5e\u6027\u548c\u65b9\u6cd5\n\u83b7\u53d6\u6570\u636e\u7684\u503c\uff0c\u4f7f\u7528 values \u65b9\u6cd5\n\u83b7\u53d6\u7d22\u5f15\u7684\u503c\uff0c\u4f7f\u7528 index \u65b9\u6cd5\n\u83b7\u53d6\u6bcf\u5bf9\u7d22\u5f15\u7684\u503c\uff0c\u4f7f\u7528 items \u65b9\u6cd5\n")),(0,r.kt)("h3",{id:"1-\u6708-20-\u65e5"},"1 \u6708 20 \u65e5"),(0,r.kt)("h4",{id:"1-\u83b7\u53d6\u67d0\u6708\u5929\u6570"},"1. \u83b7\u53d6\u67d0\u6708\u5929\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import calendar\nres = calendar.monthrange(2020,5)\nprint(res[1])\n")),(0,r.kt)("h4",{id:"2-\u7eb5\u5411\u663e\u793a-x-\u8f74\u5750\u6807"},"2. \u7eb5\u5411\u663e\u793a x \u8f74\u5750\u6807"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"df = pd.DataFrame(pd.read_csv('./sta_flow_by_day.csv'))\n\nplt.xticks(rotation=270)\nplt.bar([f'{month}.{day}' for month, day in zip(np.array(df['month']), np.array(df['day']))], np.array(df['flow']))\nplt.show()\n")),(0,r.kt)("h4",{id:"3-pandas-\u7b5b\u9009\u6ce8\u610f"},"3. pandas \u7b5b\u9009\u6ce8\u610f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# \u4e0d\u540c\u6761\u4ef6\u4e00\u5b9a\u8981\u52a0\u62ec\u53f7\ndf = df.loc[(df['sta'] == 'Sta1') & (df['month']==2)]\n")),(0,r.kt)("h3",{id:"1-\u6708-21-\u65e5"},"1 \u6708 21 \u65e5"),(0,r.kt)("h4",{id:"1-\u5206\u5272\u7ebf-\u6c34"},"1. \u5206\u5272\u7ebf (\u6c34)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"print('#-&-$-@-%-'*13)\n")),(0,r.kt)("h4",{id:"2-\u9632\u6b62\u65e0-key"},"2. \u9632\u6b62\u65e0 key"),(0,r.kt)("blockquote",null,(0,r.kt)("h6",{parentName:"blockquote",id:"try-except-\u771f\u597d\u7528"},"try except \u771f\u597d\u7528")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"for key in stas.keys():\n    month = stas[key]\n    for sta in month.keys():\n        try:\n            big_dict[sta][key] = month[sta]\n        except:\n            try:\n                big_dict_gun[sta][key] = month[sta]\n            except:\n                big_dict_gun[sta] = {}\n")),(0,r.kt)("h4",{id:"3-onehot-\u5e94\u7528"},"3. onehot \u5e94\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 2. \u628a route \u5217\u8f6c\u4e3a onehot \u7f16\u7801\nenc_route = sklearn.preprocessing.OneHotEncoder(sparse=False) # Key here is sparse=False!\nroute_onehot = enc_route.fit_transform(np.array(list(df['route'])).reshape(len(df['route']),1))\nprint(df['route'].shape)\nprint(route_onehot)\n\n# fit_transform = fit + transform\n# \u4e4b\u540e\u53ef\u4ee5\u7528 enc_route.transform() \u7f16\u7801\u6d4b\u8bd5\u96c6\n")),(0,r.kt)("h3",{id:"1-\u6708-22-\u65e5"},"1 \u6708 22 \u65e5"),(0,r.kt)("h4",{id:"1-\u53cd\u5f52\u4e00\u5316-117"},"1. \u53cd\u5f52\u4e00\u5316 (1.17)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"preprice = model.predict(readyfortest)\npreprice = sc.inverse_transform(preprice)\n")),(0,r.kt)("h4",{id:"2-pandas-\u6392\u5e8f"},"2. pandas \u6392\u5e8f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#\u9ed8\u8ba4\u4e3a\u5347\u5e8f\ndf_3 = df.sort_values(by=['day','flow'])\n")),(0,r.kt)("h3",{id:"123-\u65e5-127-\u65e5"},"1.23 \u65e5~ 1.27 \u65e5"),(0,r.kt)("h4",{id:"1\u795e\u7ecf\u7f51\u7edc\u7ecf\u9a8c\u603b\u7ed3"},"1.\u795e\u7ecf\u7f51\u7edc\u7ecf\u9a8c\u603b\u7ed3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 1. \u6a21\u578b\u9690\u85cf\u5c42\u5c42\u6570\u8bbe\u7f6e\n1. \u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u5f53\u4e14\u4ec5\u5f53\u6570\u636e\u975e\u7ebf\u6027\u5206\u79bb\u65f6\u624d\u9700\u8981\u9690\u85cf\u5c42\uff01\n2. \u5bf9\u4e8e\u4e00\u822c\u7b80\u5355\u7684\u6570\u636e\u96c6\uff0c\u4e00\u4e24\u5c42\u9690\u85cf\u5c42\u901a\u5e38\u5c31\u8db3\u591f\u4e86\u3002\u4f46\u5bf9\u4e8e\u6d89\u53ca\u65f6\u95f4\u5e8f\u5217\u6216\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u590d\u6742\u6570\u636e\u96c6\uff0c\u5219\u9700\u8981\u989d\u5916\u589e\u52a0\u5c42\u6570\u3002\u5355\u5c42\u795e\u7ecf\u7f51\u7edc\u53ea\u80fd\u7528\u4e8e\u8868\u793a\u7ebf\u6027\u5206\u79bb\u51fd\u6570\uff0c\u4e5f\u5c31\u662f\u975e\u5e38\u7b80\u5355\u7684\u95ee\u9898\uff0c\u6bd4\u5982\u5206\u7c7b\u95ee\u9898\u4e2d\u7684\u4e24\u4e2a\u7c7b\u53ef\u4ee5\u7528\u4e00\u6761\u76f4\u7ebf\u6574\u9f50\u5730\u5206\u5f00\u3002\n3. \u4e00\u822c\u89c4\u5f8b\n\u6ca1\u6709\u9690\u85cf\u5c42\uff1a\u4ec5\u80fd\u591f\u8868\u793a\u7ebf\u6027\u53ef\u5206\u51fd\u6570\u6216\u51b3\u7b56\n\u9690\u85cf\u5c42\u6570=1\uff1a\u53ef\u4ee5\u62df\u5408\u4efb\u4f55\u201c\u5305\u542b\u4ece\u4e00\u4e2a\u6709\u9650\u7a7a\u95f4\u5230\u53e6\u4e00\u4e2a\u6709\u9650\u7a7a\u95f4\u7684\u8fde\u7eed\u6620\u5c04\u201d\u7684\u51fd\u6570\n\u9690\u85cf\u5c42\u6570=2\uff1a\u642d\u914d\u9002\u5f53\u7684\u6fc0\u6d3b\u51fd\u6570\u53ef\u4ee5\u8868\u793a\u4efb\u610f\u7cbe\u5ea6\u7684\u4efb\u610f\u51b3\u7b56\u8fb9\u754c\uff0c\u5e76\u4e14\u53ef\u4ee5\u62df\u5408\u4efb\u4f55\u7cbe\u5ea6\u7684\u4efb\u4f55\u5e73\u6ed1\u6620\u5c04\n\u9690\u85cf\u5c42\u6570>2\uff1a\u591a\u51fa\u6765\u7684\u9690\u85cf\u5c42\u53ef\u4ee5\u5b66\u4e60\u590d\u6742\u7684\u63cf\u8ff0\uff08\u67d0\u79cd\u81ea\u52a8\u7279\u5f81\u5de5\u7a0b\uff09\n# 2. \u6a21\u578b\u9690\u85cf\u5c42\u795e\u7ecf\u5143\u4e2a\u6570\u8bbe\u7f6e\n1\u3001\u9690\u85cf\u5355\u5143\u7684\u6570\u91cf\u4e0d\u5e94\u8be5\u8d85\u8fc7\u8f93\u5165\u5c42\u4e2d\u5355\u5143\u7684\u4e24\u500d\n2\u3001\u9690\u85cf\u5355\u5143\u7684\u5927\u5c0f\u5e94\u8be5\u4ecb\u4e8e\u8f93\u5165\u5355\u5143\u548c\u8f93\u51fa\u5355\u5143\u4e4b\u95f4\n3\u3001\u795e\u7ecf\u5143\u7684\u6570\u91cf\u5e94\u6355\u83b7\u8f93\u5165\u6570\u636e\u96c6\u65b9\u5dee\u7684 70~90%\n# 3. \u6ce8\u610f\u8f93\u5165\u8bad\u7ec3\u96c6\u7684\u5f62\u72b6\n# 4. \u6ce8\u610f\u8f93\u5165\u5c42\u7279\u5f81\u7684\u8f93\u5165\u987a\u5e8f\n\u4e0e\u8f93\u51fa\u5c42\u5173\u8054\u6027\u5f3a\u7684\u653e\u524d\u9762\n\u6709\u4e9b\u5173\u8054\u6027\u5f31\u7684\u7279\u5f81\u52a0\u5165\u4f1a\u4e25\u91cd\u6270\u4e71\u51c6\u786e\u6027 \u6bd4\u5982 day\n")))}m.isMDXComponent=!0}}]);