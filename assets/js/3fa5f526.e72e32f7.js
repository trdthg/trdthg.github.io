"use strict";(self.webpackChunktrdthg_github_io=self.webpackChunktrdthg_github_io||[]).push([[1998],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>c});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),p=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(u.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=p(t),c=r,f=d["".concat(u,".").concat(c)]||d[c]||m[c]||l;return t?a.createElement(f,i(i({ref:n},s),{},{components:t})):a.createElement(f,i({ref:n},s))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8336:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const l={},i=void 0,o={permalink:"/blog/2023/01/02/[\u8bd1] \u672a\u521d\u59cb\u5316\u5185\u5b58: unsafe Rust\u592a\u96be\u4e86",source:"@site/blog/2023-01-02-[\u8bd1] \u672a\u521d\u59cb\u5316\u5185\u5b58: unsafe Rust\u592a\u96be\u4e86.md",title:"[\u8bd1] \u672a\u521d\u59cb\u5316\u5185\u5b58: unsafe Rust\u592a\u96be\u4e86",description:"\u539f\u6587\u94fe\u63a5\uff1ahttps://lucumr.pocoo.org/2022/1/30/unsafe-rust/",date:"2023-01-02T00:00:00.000Z",formattedDate:"2023\u5e741\u67082\u65e5",tags:[],readingTime:12.55,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"[\u8bd1] Rust\u5192\u9669: \u6ee5\u7528 Serde",permalink:"/blog/2023/01/03/[\u8bd1] Rust\u5192\u9669: \u6ee5\u7528 Serde"},nextItem:{title:"[\u8bd1] \u62d3\u5c55 Rust \u4e2d\u7684 Map",permalink:"/blog/2023/01/01/[\u8bd1] \u62d3\u5c55 Rust \u4e2d\u7684 Map"}},u={authorsImageUrls:[]},p=[{value:"\u4ece C \u5230 Rust",id:"\u4ece-c-\u5230-rust",level:2},{value:"\u4ec0\u4e48\u65f6\u5019\u7528 <code>addr_of_mut!</code>",id:"\u4ec0\u4e48\u65f6\u5019\u7528-addr_of_mut",level:2},{value:"MaybeUninit",id:"maybeuninit",level:2},{value:"\u6211\u7684 unsafe \u4ee3\u7801\u6b63\u786e\u5417\uff1f",id:"\u6211\u7684-unsafe-\u4ee3\u7801\u6b63\u786e\u5417",level:2}],s={toc:p};function m(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u539f\u6587\u94fe\u63a5\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://lucumr.pocoo.org/2022/1/30/unsafe-rust/"},"https://lucumr.pocoo.org/2022/1/30/unsafe-rust/")),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u7ffb\u8bd1\uff1a",(0,r.kt)("a",{parentName:"strong",href:"https://github.com/trdthg"},"trdthg"))),(0,r.kt)("p",{parentName:"blockquote"},"\u9009\u9898\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://github.com/trdthg"},"trdthg")),(0,r.kt)("p",{parentName:"blockquote"},"\u672c\u6587\u7531 ",(0,r.kt)("a",{parentName:"p",href:"https://Rustt.org"},"Rustt")," \u7ffb\u8bd1\uff0c",(0,r.kt)("a",{parentName:"p",href:"https://studyrust.org"},"StudyRust")," \u8363\u8a89\u63a8\u51fa")),(0,r.kt)("h1",{id:"\u672a\u521d\u59cb\u5316\u5185\u5b58unsafe-rust-\u592a\u96be\u4e86"},"\u672a\u521d\u59cb\u5316\u5185\u5b58\uff1aunsafe Rust \u592a\u96be\u4e86"),(0,r.kt)("p",null,"Rust\n\u5728\u5f88\u591a\u610f\u4e49\u4e0a\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u73b0\u4ee3\u7684\u7cfb\u7edf\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e5f\u662f\u4e00\u4e2a\u5b9e\u7528\u7684\u8bed\u8a00\u3002\u5b83\u627f\u8bfa\u4e86\u81ea\u5df1\u7684\u5b89\u5168\u6027\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u6846\u67b6\uff0c\u4f7f\u5f97\u521b\u5efa\u5b89\u5168\u7684\u62bd\u8c61\u6210\u4e3a\u53ef\u80fd\uff0c\u540c\u65f6\u8fd0\u884c\u65f6\u5f00\u9500\u5f88\u5c0f\u751a\u81f3\u4e3a\n0\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 unsafe \u6765\u660e\u786e\u7684\u8131\u79bb\u5b89\u5168\u7684 Rust\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u4e4b\u524d\u770b\u8fc7\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4f60\u4f1a\u60ca\u8bb6\u7684\u53d1\u73b0\uff0c\u5b83\u548c\u4e4b\u524d\u7684\u7248\u672c\u5927\u4e0d\u76f8\u540c\u3002\u8fd9\u7bc7\u6587\u7ae0\u7684\u4f5c\u8005\u662f\u88ab unsafe\n\u7684\u89c4\u5219\u6240\u56f0\u60d1\u7684\u53d7\u5bb3\u8005\u3002\u6211\u5728\u6587\u7ae0\u4e2d\u589e\u52a0\u4e86\u4e00\u4e2a\u4f8b\u5b50\uff0c\u7528\u6765\u66f4\u597d\u7684\u5c55\u793a\u5176\u4e2d\u7684\u9677\u9631\u3002\u6211\u4e4b\u524d\u5728 Twitter \u4e0a\u8bf4\u8fc7\uff0c\u7f16\u5199 unsafe Rust \u6bd4 C / C++\n\u66f4\u56f0\u96be\uff0c\u6240\u4ee5\u6211\u60f3\u4e3a\u6211\u7684\u89c2\u70b9\u4f5c\u51fa\u4e00\u4e9b\u89e3\u91ca\u3002"),(0,r.kt)("h2",{id:"\u4ece-c-\u5230-rust"},"\u4ece C \u5230 Rust"),(0,r.kt)("p",null,"\u6211\u4eec\u4ece\u4e0b\u9762\u7684\u4f8b\u5b50\u5f00\u59cb\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\u5f85\u521d\u59cb\u5316\u7684\u7ed3\u6784\u4f53\u3002\u6bd4\u8f83\u6709\u8da3\u7684\u5b57\u6bb5\u662f\n",(0,r.kt)("inlineCode",{parentName:"p"},"name"),"\u3002\u5b83\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a\u5df2\u7ecf\u5206\u914d\u597d\u7684\u5b57\u7b26\u4e32\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5206\u914d\u5230\u54ea\u91cc\u5bf9\u6211\u4eec\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u7ed3\u6784\u4f53\u81ea\u8eab\u5206\u914d\u5728\u6808\u4e0a\u3002\u6211\u4eec\u7684\u60f3\u6cd5\u662f\uff0c\u5f53\u8fd9\u4e2a\u7ed3\u6784\u4f53\u88ab\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u5b83\u5c31\u53ef\u4ee5\u88ab\u5b89\u5168\u7684\u4f20\u9012\u548c\u6253\u5370\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\nstruct role {\n    char *name;\n    bool disabled;\n    int flag;\n};\n\nint main() {\n    struct role r;\n    r.name = strdup("basic");\n    r.flag = 1;\n    r.disabled = false;\n    printf("%s (%d, %s)\\n", r.name, r.flag, r.disabled ? "true" : "false");\n    free(r.name);\n}\n')),(0,r.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u7528 Rust \u53bb\u5b9e\u73b0\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u73b0\u5728\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u8fc7\u591a\u7684\u5173\u6ce8 Rust\n\u6587\u6863\uff0c\u53ea\u9700\u8981\u4e13\u6ce8\u4e8e\u4e00\u5bf9\u4e00\u7ffb\u8bd1\u5373\u53ef\u3002\u5728\u4f60\u9605\u8bfb\u4e0b\u9762\u7684\u4ee3\u7801\u4e4b\u524d\u8fd8\u6709\u4e00\u70b9\u8981\u6ce8\u610f\uff1a\u6211\u4eec\u6b63\u5728\u6709\u610f\u7684\u521b\u5efa\u4e00\u4e2a\u5bf9 Rust \u7a0b\u5e8f\u5458\u66f4\u719f\u6089\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u53ef\u4ee5\u88ab\u770b\u4f5c\u516c\u5171\nAPI\u3002\u6240\u4ee5\u6211\u4eec\u5728\u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528 String\uff0c\u800c\u4e0d\u662f C \u8bed\u8a00\u7684\u5b57\u7b26\u4e32\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},'use std::mem;\n\nstruct Role {\n    name: String,\n    disabled: bool,\n    flag: u32,\n}\n\nfn main() {\n    let role = unsafe {\n        let mut role: Role = mem::zeroed();\n        role.name = "basic".to_string();\n        role.flag = 1;\n        role.disabled = false;\n        role\n    };\n\n    println!("{} ({}, {})", role.name, role.flag, role.disabled);\n}\n')),(0,r.kt)("p",null,"\u770b\u5230\u8fd9\u91cc\uff0c\u7acb\u5373\u5c31\u6709\u4eba\u60f3\u95ee\uff0c\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u9700\u8981\nunsafe\uff1f\u5f53\u7136\u4e86\uff0c\u4f60\u7684\u786e\u4e0d\u9700\u8981\u3002\u4f46\u662f\u8fd9\u6bb5\u4ee3\u7801\u4f7f\u7528\u4e86\u4e00\u4e2a\u51fd\u6570\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"std::mem::zeroed"),"\u3002\u5982\u679c\u4f60\u5c1d\u8bd5\u5728\u6700\u8fd1\u7684 Rust\n\u7f16\u8bd1\u5668\u8fd0\u884c\uff0c\u5e94\u8be5\u4f1a\u7684\u5f97\u5230\u8fd9\u4e2a\u9519\u8bef\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"thread 'main' panicked at 'attempted to zero-initialize type `Role`,\n  which is invalid', src/main.rs:11:30\n")),(0,r.kt)("p",null,"\u8001\u7248\u672c\u7684\u7f16\u8bd1\u5668\u80fd\u591f\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u662f\u90a3\u5176\u5b9e\u4e5f\u662f\u9519\u8bef\u7684\u3002\u600e\u4e48\u89e3\u51b3\u5462\uff1f\u7f16\u8bd1\u5668\u53c8\u4e00\u6b21\u544a\u8bc9\u6211\u4eec\u89e3\u51b3\u4e4b\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"warning: the type `Role` does not permit zero-initialization\n  --\x3e src/main.rs:11:30\n   |\n11 | let mut role: Role = mem::zeroed();\n   |                      ^^^^^^^^^^^^^\n   |                      |\n   |                      this code causes undefined behavior when executed\n   |                      help: use `MaybeUninit<T>` instead, and only call\n   |                         `assume_init` after initialization is done\n   |\n")),(0,r.kt)("p",null,"\u4e3a\u4ec0\u4e48 ",(0,r.kt)("inlineCode",{parentName:"p"},"Role")," \u7c7b\u578b\u4e0d\u652f\u6301\u4f7f\u7528 0 \u521d\u59cb\u5316\u5462\uff1f\u6211\u4eec\u9700\u8981\u6539\u52a8\u90a3\u4e9b\u4ee3\u7801\uff1f\u6211\u4eec\u80fd\u4e0d\u80fd\u4e0d\u521d\u59cb\u5316\uff1f"),(0,r.kt)("p",null,"\u6709\u4eba\u53ef\u80fd\u4f1a\u60f3\uff0c\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"#[repr(C)]")," \u5f3a\u5236\u7ed3\u6784\u4f53\u4f7f\u7528 C \u8bed\u8a00\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u4f46\u662f\u8fd9\u4e0d\u80fd\u89e3\u51b3\u95ee\u9898\u3002\u6b63\u5982\u7f16\u8bd1\u5668\u7ed9\u51fa\u7684\u5efa\u8bae\uff0c\u6211\u4eec\u9700\u8981\n",(0,r.kt)("inlineCode",{parentName:"p"},"MaybeUninit"),"\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},'use std::mem::MaybeUninit;\n\nstruct Role {\n    name: String,\n    disabled: bool,\n    flag: u32,\n}\n\nfn main() {\n    let role = unsafe {\n        let mut uninit = MaybeUninit::<Role>::zeroed();\n        let role = uninit.as_mut_ptr();\n        (*role).name = "basic".to_string();\n        (*role).flag = 1;\n        (*role).disabled = false;\n        uninit.assume_init()\n    };\n\n    println!("{} ({}, {})", role.name, role.flag, role.disabled);\n}\n')),(0,r.kt)("p",null,"\u5c06 ",(0,r.kt)("inlineCode",{parentName:"p"},"zeroed")," \u6362\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"MaybeUninit::zeroed")," \u4e4b\u540e\uff0c\u4e00\u5207\u90fd\u53d8\u4e86\u3002\u73b0\u5728\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u7ed3\u6784\u4f53\uff0c\u800c\u662f\u8981\u64cd\u4f5c\u4e00\u4e2a\u88f8\u6307\u9488\u3002\u7531\u4e8e\u88f8\u6307\u9488\u6ca1\u6709\u5b9e\u73b0\n",(0,r.kt)("inlineCode",{parentName:"p"},"deref"),"\uff0c\u5e76\u4e14 Rust \u4e2d\u6ca1\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"->")," \u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u89e3\u5f15\u7528\uff0c\u5e76\u7528\u8fd9\u79cd\u7b28\u62d9\u7684\u8bed\u6cd5\u5206\u914d\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u3002"),(0,r.kt)("p",null,"\u9996\u5148\uff1a\u8fd9\u6837\u505a\u53ef\u884c\u5417\uff1f\u7b54\u6848\u662f\u80af\u5b9a\u7684\u3002\u4f46\u662f\u5b83\u6b63\u786e\u5417\uff1f\u4e0d\u6b63\u786e\u3002"),(0,r.kt)("p",null,"\u7b54\u6848\u5728\u4e8e\uff0c\u4efb\u4f55\u50cf\u53ef\u53d8\u5f15\u7528\uff08&mut\uff09\u6216\u8005\u662f\u6808\u4e0a\u7684\u503c\u672c\u8eab\u8fd9\u6837\u7684\u6784\u9020\uff0c\u5728 unsafe \u4ee3\u7801\u4e4b\u5916\u4ecd\u7136\u9700\u8981\u4e00\u76f4\u5904\u4e8e\u6709\u6548\u7684\u72b6\u6001\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"zeroed")," \u8fd4\u56de\u4e00\u4e2a\u503c\u4e3a 0\n\u7684\u7ed3\u6784\uff0c\u6211\u4eec\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u53ef\u4ee5\u6709\u6548\u7684\u8868\u793a\u7ed3\u6784\u4f53\u6216\u8005\u4efb\u4f55\u5176\u4e2d\u7684\u5b57\u6bb5\u3002\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u7684\u5b57\u7b26\u4e32\u5728\u6240\u6709\u5185\u5bb9\u88ab\u6e05\u96f6\u7684\u60c5\u51b5\u4e0b\u662f\u6709\u6548\u7684\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u80fd\u4fdd\u8bc1\uff0c\u800c\u4e14\u662f\u672a\u5b9a\u4e49\u884c\u4e3a\u3002"),(0,r.kt)("p",null,"\u9700\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u662f\uff0c\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\u6c38\u8fdc\u4e0d\u80fd\u6307\u5411\u4e00\u4e2a\u65e0\u6548\u7684\u5bf9\u8c61\uff0c\u6240\u4ee5\u5728\u5bf9\u8c61\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u88ab\u521d\u59cb\u5316\u4e4b\u524d\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u662f\u9519\u8bef\u7684\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"let role = &mut *uninit.as_mut_ptr()\n")),(0,r.kt)("p",null,"\u6240\u4ee5\uff0c\u8ba9\u6211\u4eec\u628a ",(0,r.kt)("inlineCode",{parentName:"p"},"zeroed")," \u6539\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"uninit"),"\u3002\u5982\u679c\u6211\u4eec\u518d\u6b21\u8fd0\u884c\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5d29\u6e83\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"// let mut uninit = MaybeUninit::<Role>::uninit();\nfree(): invalid pointer\n")),(0,r.kt)("p",null,"\u4e3a\u4ec0\u4e48\u4f1a\u5d29\u6e83\u5462\uff1f\u7b54\u6848\u662f\uff0c\u901a\u8fc7\u7ed9 name \u8d4b\u503c\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u4e5f drop \u4e86\u4e4b\u524d\u7684\u65e7\u5b57\u7b26\u4e32\u3002\u6211\u4eec\u4e4b\u524d\u53ea\u662f\u78b0\u5de7\u6ca1\u6709\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u56e0\u4e3a Drop\n\u78b0\u5de7\u80fd\u591f\u5904\u7406\u4e00\u4e2a\u88ab\u6e05\u96f6\u7684\u5b57\u7b26\u4e32\u3002\u4f46\u73b0\u5728\uff0c\u6211\u4eec\u6df1\u5165\u4e86\u672a\u5b9a\u4e49\u884c\u4e3a\u3002\u6211\u4eec\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f\u6211\u4eec\u9700\u8981\u4ee5\u67d0\u79cd\u65b9\u5f0f\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u5199\u5230\u90a3\u91cc\u7684\u6307\u9488\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u9996\u5148\u8981\u63a5\u53d7 MaybeUninit \u662f\u5fc5\u8981\u7684\uff0c\u73b0\u5728\u6211\u4eec\u8981\u5904\u7406\u8fd9\u91cc\u7684\u88f8\u6307\u9488\u3002\u8fd9\u6709\u4e9b\u9ebb\u70e6\uff0c\u4f46\u662f\u770b\u8d77\u6765\u4e0d\u662f\u7279\u522b\u96be\u3002\u73b0\u5728\u6211\u4eec\u6709\u4e24\u4e2a\u65b0\u95ee\u9898\uff1a\u6211\u4eec\u77e5\u9053 ",(0,r.kt)("inlineCode",{parentName:"p"},"&mut X"),"\n\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u4f46\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"*mut X")," \u662f\u5141\u8bb8\u7684\u3002\u6211\u4eec\u5982\u4f55\u5728\u4e0d\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"&mut X")," \u7684\u60c5\u51b5\u4e0b\u5f97\u5230\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"*mut X"),"? \u8bbd\u523a\u7684\u662f\uff0c\u5728 Rust 1.51\n\u4e4b\u524d\uff0c\u518d\u4e0d\u6253\u7834\u4efb\u4f55\u89c4\u5219\u4e4b\u524d\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\uff0c\u4f46\u662f\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"addr_of_mut!")," \u5b8f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"let name_ptr = std::ptr::addr_of_mut!((*role).name);\n")),(0,r.kt)("p",null,"\u592a\u68d2\u4e86\uff0c\u73b0\u5728\u6211\u4eec\u62ff\u5230\u4e86 name \u7684\u6307\u9488\uff0c\u5982\u4f55\u5199\u5165\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"write")," \u65b9\u6cd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},'addr_of_mut!((*role).name).write("basic".to_string());\n')),(0,r.kt)("p",null,"\u73b0\u5728\u5b8c\u6210\u4e86\u5417\uff1f\u8fd8\u8bb0\u5f97\u6211\u4eec\u662f\u5982\u4f55\u4f7f\u7528\u666e\u901a\u7ed3\u6784\u4f53\u7684\u5417\uff1f\u5982\u679c\u9605\u8bfb\u4e00\u4e0b\u6587\u6863\uff0c\u4f60\u5c31\u4f1a\u53d1\u73b0\uff0c\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40\u6ca1\u6709\u4efb\u4f55\u4fdd\u8bc1\u3002\u4e8b\u5b9e\u8868\u660e\uff0c",(0,r.kt)("a",{parentName:"p",href:"https://github.com/rust-lang/reference/issues/1151"},"\u5c3d\u7ba1\u76ee\u524d\u7684\u6587\u6863\u662f\u8fd9\u6837\u8bf4\u7684"),"\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u4f9d\u9760\u5b57\u6bb5\u7684\u5bf9\u9f50\u6027\u3002\u5982\u679c\u6211\u4eec\u5904\u7406\u7684\u662f\n",(0,r.kt)("inlineCode",{parentName:"p"},"#[repr(packed)]"),"\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"write_unaligned")," \u65b9\u6cd5\u6765\u4ee3\u66ff\u3002\u5982\u679c Rust\n\u9009\u62e9\u7684\u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u6210\u5458\u662f\u4e0d\u5bf9\u9f50\u7684\uff0c\u8fd9\u662f\u5408\u6cd5\u7684\u3002"),(0,r.kt)("p",null,"\u6700\u7ec8\u7684\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},'use std::mem::MaybeUninit;\nuse std::ptr::addr_of_mut;\n\nstruct Role {\n    name: String,\n    disabled: bool,\n    flag: u32,\n}\n\nfn main() {\n    let role = unsafe {\n        let mut uninit = MaybeUninit::<Role>::uninit();\n        let role = uninit.as_mut_ptr();\n        addr_of_mut!((*role).name).write("basic".to_string());\n        (*role).flag = 1;\n        (*role).disabled = false;\n        uninit.assume_init()\n    };\n\n    println!("{} ({}, {})", role.name, role.flag, role.disabled);\n}\n')),(0,r.kt)("h2",{id:"\u4ec0\u4e48\u65f6\u5019\u7528-addr_of_mut"},"\u4ec0\u4e48\u65f6\u5019\u7528 ",(0,r.kt)("inlineCode",{parentName:"h2"},"addr_of_mut!")),(0,r.kt)("p",null,"\u4e00\u822c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58\uff0c\u672a\u5bf9\u9f50\u7684\u5f15\u7528\u3002Rust\n\u4e0d\u5141\u8bb8\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u672a\u5bf9\u9f50\u7684\u5f15\u7528\uff08\u5373\u65f6\u53ea\u662f\u6682\u65f6\u7684\uff09\uff0c\u540c\u65f6\u4e5f\u4e0d\u5141\u8bb8\u521b\u5efa\u4e00\u4e2a\u5bf9\u672a\u521d\u59cb\u5316\u5185\u5b58\u7684\u5f15\u7528\u3002\u90a3\u4e48\uff0c\u8fd9\u4e9b\u5f15\u7528\u662f\u4ec0\u4e48\u65f6\u5019\u88ab\u521b\u5efa\u7684\u5462\uff1f"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u4e0b\u9762\u7684\u4ee3\u7801\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"(*flag).flag = 1"),"\uff0c\u6839\u636e Rust \u7684\u89c4\u5219\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u6ca1\u6709\u5b9e\u73b0 Drop\uff0c\u8fd9\u662f\u53ef\u4ee5\u7684\u3002\u5982\u679c\u8be5\u7c7b\u578b\u5b9e\u73b0\u4e86\nDrop\uff0c\u8fd9\u884c\u4ee3\u7801\u4f1a\u4ea7\u751f\u5f88\u591a\u95ee\u9898\uff1a\u5f53 ",(0,r.kt)("inlineCode",{parentName:"p"},"Drop::drop")," \u88ab\u8c03\u7528\u65f6\uff0c\u5e76\u4e14\u8c03\u7528\u5728\u672a\u521d\u59cb\u5316\u7684\u5185\u5b58\u4e0a\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u9700\u8981\n",(0,r.kt)("inlineCode",{parentName:"p"},"addr_of_mut!"),"\u3002\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e3a flag \u5b57\u6bb5\u8d4b\u503c\uff0c\u4f46\u662f\u6211\u4eec\u5374\u9700\u8981\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"addr_of_mut!")," \u6765\u83b7\u53d6 name\n\u5b57\u6bb5\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002"),(0,r.kt)("h2",{id:"maybeuninit"},"MaybeUninit"),(0,r.kt)("p",null,"\u5bf9\u5b89\u5168\u7684\u7406\u89e3\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u800c\u4e0d\u65ad\u6539\u53d8\u3002\u66fe\u7ecf\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"mem::uninitialized")," \u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5065\u5168\u7684 API\uff0c\u4f46\u662f\u5728\u540e\u6765\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"MaybeUninit"),"\n\u88ab\u5f15\u5165\u53bb\u89e3\u51b3\u53d1\u73b0\u7684\u7f3a\u70b9\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u90e8\u5206\u521d\u59cb\u5316\u7684\u7c7b\u578b\u7684\u5b58\u5728\uff0cMaybeUninit \u5728\u5b9e\u8df5\u4e2d\u5e76\u4e0d\u7406\u60f3\u3002\u867d\u7136\u7531\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"#[repr(transparent)]"),"\uff0c\nMaybeUninit \u548c T \u662f\u5185\u5b58\u517c\u5bb9\u7684\uff0c\u4f46\u662f\u5728\u5d4c\u5957\u4f7f\u7528\u65f6\u7684\u6548\u679c\u5e76\u4e0d\u4f73\u3002"),(0,r.kt)("p",null,"\u6709\u65f6\u4f60\u9700\u8981\u7ed3\u6784\u4f53\u7684\u67d0\u4e2a\u5b57\u6bb5\u4e0a\u6709\u4e00\u4e2a MaybeUninit\uff0c\u4f46\u662f\u53ea\u540e\u4f60\u53c8\u5e0c\u671b\u8fd9\u4e2a\u62bd\u8c61\u4e0d\u5b58\u5728\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e76\u4e0d\u7f55\u89c1\u3002\u5b9e\u9645\u4e0a\uff0c\u5728\u5b9e\u8df5\u4e2d\u4f7f\u7528 MaybeUninit\n\u662f\u4e00\u4e2a\u5145\u6ee1\u6311\u6218\u7684\u4f53\u9a8c\uff0c\u4f46\u662f\u8fd9\u7bc7\u6587\u7ae0\u5e76\u6ca1\u6709\u4f53\u73b0\u51fa\u6765\u3002"),(0,r.kt)("h2",{id:"\u6211\u7684-unsafe-\u4ee3\u7801\u6b63\u786e\u5417"},"\u6211\u7684 unsafe \u4ee3\u7801\u6b63\u786e\u5417\uff1f"),(0,r.kt)("p",null,"\u5728 2022 \u5e74\uff0c\u6211\u627f\u8ba4\uff0c\u6211\u4e0d\u518d\u5bf9\u7f16\u5199 Rust \u4ee3\u7801\u611f\u5230\u81ea\u4fe1\u3002unsafe \u7684\u89c4\u5219\u53ef\u80fd\u53ef\u80fd\u90fd\u662f\u5982\u6b64\u590d\u6742\uff0c\u4f46\u662f\u4ece\u6211\u591a\u5e74\u6765\u9605\u8bfb\u8fc7\u7684 unsafe \u4ee3\u7801\u6765\u8bf4\uff0c\u5927\u591a\u6570\nunsafe \u4ee3\u7801\u90fd\u4e0d\u592a\u5173\u5fc3\u8fd9\u4e9b\u89c4\u5219\uff0c\u5e76\u4e14\u65e0\u89c6\u4e86\u5b83\u4eec\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"addr_of_mut!"),"\u76f4\u5230 1.53 \u624d\u88ab\u6dfb\u52a0\u5230\u8bed\u8a00\u4e2d\u662f\u6709\u539f\u56e0\u7684\u3002\u5373\u4f7f\u5230\u4e86\u4eca\u5929\uff0c\u6587\u6863\u4e2d\u90fd\u8bf4\u5b83\nRust \u7ed3\u6784\u4f53 repr \u7684\u5bf9\u9f50\u65b9\u5f0f\u6ca1\u6709\u4efb\u4f55\u4fdd\u8bc1\u3002"),(0,r.kt)("p",null,"\u5728\u8fc7\u53bb\u7684\u51e0\u5e74\u91cc\uff0c\u4f3c\u4e4e\u53d1\u751f\u4e86\u8fd9\u6837\u7684\u4e8b\u60c5\uff1aRust \u5f00\u53d1\u8005\u5728\u5b9e\u8df5\u4e2d\u7f16\u5199 unsafe\n\u8d8a\u6765\u8d8a\u56f0\u96be\uff0c\u73b0\u5728\u7684\u89c4\u5219\u662f\u5982\u6b64\u590d\u6742\uff0c\u4ee5\u81f3\u4e8e\u5bf9\u4e00\u4e2a\u968f\u610f\u7684\u7a0b\u5e8f\u5458\u6765\u8bf4\u975e\u5e38\u96be\u4ee5\u7406\u89e3\uff0c\u56f4\u7ed5\u4ed6\u7684\u6587\u6863\u4e5f\u5f88\u5bb9\u6613\u88ab\u66f2\u89e3\u3002\u6211\u5728\u8fd9\u7bc7\u6587\u7ae0\u7684",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mitsuhiko/lucumr/blob/48440d3cf151f0d774bc9ad62f903034ca2b30ff/2022/1/30/unsafe-rust.rst"},"\u4e0a\u4e00\u4e2a\u7248\u672c"),"\u4e2d\u8ba4\u4e3a\n",(0,r.kt)("inlineCode",{parentName:"p"},"addr_of_mut!")," \u7684\u4e00\u4e9b\u4f7f\u7528\u662f\u5fc5\u8981\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64\u3002\u5728\u6709\u4eba\u6307\u51fa\u8fd9\u4e2a\u9519\u8bef\u4e4b\u524d\uff0c\u6587\u7ae0\u5df2\u7ecf\u5f97\u5230\u4e86\u5927\u91cf\u5173\u6ce8\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e9b\u89c4\u5219\u4f7f\u5f97 Rust \u6700\u597d\u7684\u529f\u80fd\u4e4b\u4e00\u8d8a\u6765\u8d8a\u96be\u4ee5\u63a5\u8fd1\uff0c\u540c\u65f6\u4e5f\u8d8a\u6765\u8d8a\u96be\u4ee5\u7406\u89e3\u3002\u8981\u6c42\u5b58\u5728 MaybeUninit\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u8fc7\u53bb\u7684\nmem::uninitialized API \u662f\u663e\u800c\u6613\u89c1\u7684\uff0c\u4f46\u662f\u5374\u5c55\u793a\u4e86\u8bed\u8a00\u89c4\u5219\u662f\u591a\u4e48\u7684\u590d\u6742\u3002"),(0,r.kt)("p",null,"\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u597d\u7684\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u8ba4\u4e3a\u8fd9\u6839\u672c\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u8d8b\u52bf\uff0c\u597d\u50cf\u8d8a\u6765\u8d8a\u5c11\u7684\u4eba\u4e86\u89e3 unsafe Rust\u3002\u4e0e C \u7684\u4e92\u64cd\u4f5c\u6027\u662f\u8ba9 Rust\n\u4f1f\u5927\u7684\u4e00\u4e2a\u539f\u56e0\uff0c\u4f46\u662f\u6211\u4eec\u73b0\u5728\u6b63\u5728\u521b\u5efa\u5de8\u5927\u7684\u5c4f\u969c\uff0c\u8fd9\u662f\u4e0d\u53ef\u53d6\u7684\u3002\u66f4\u91cd\u8981\u7684\u662f\uff1a\u7f16\u8bd1\u5668\u5728\u6307\u51fa\u6211\u7684\u9519\u8bef\u65f6\u6ca1\u6709\u4ec0\u4e48\u5e2e\u52a9\u3002"),(0,r.kt)("p",null,"\u8ba9 unsafe \u53d8\u5f97\u66f4\u7b26\u5408\u4eba\u4f53\u5de5\u7a0b\u5b66\u662f\u4e00\u4e2a\u56f0\u96be\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5b83\u503c\u5f97\u88ab\u89e3\u51b3\u3002\u56e0\u4e3a\u6709\u4e00\u70b9\u5f88\u660e\u786e\uff1a\u4eba\u4eec\u4e0d\u4f1a\u5f88\u5feb\u505c\u6b62\u7f16\u5199 unsafe \u4ee3\u7801\u3002"))}m.isMDXComponent=!0}}]);