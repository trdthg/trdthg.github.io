"use strict";(self.webpackChunktrdthg_github_io=self.webpackChunktrdthg_github_io||[]).push([[8488],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>d});var o=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=o.createContext({}),s=function(t){var e=o.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},p=function(t){var e=s(t.components);return o.createElement(u.Provider,{value:e},t.children)},k={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},c=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,u=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),c=s(n),d=a,h=c["".concat(u,".").concat(d)]||c[d]||k[d]||r;return n?o.createElement(h,l(l({ref:e},p),{},{components:n})):o.createElement(h,l({ref:e},p))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,l=new Array(r);l[0]=c;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i.mdxType="string"==typeof t?t:a,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5667:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>k,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={},l=void 0,i={permalink:"/blog/2022/04/11/[\u8bd1] \u5f02\u6b65 Rust\uff1a\u534f\u4f5c\u4e0e\u62a2\u5360\u5f0f\u8c03\u5ea6",source:"@site/blog/2022-04-11-[\u8bd1] \u5f02\u6b65 Rust\uff1a\u534f\u4f5c\u4e0e\u62a2\u5360\u5f0f\u8c03\u5ea6.md",title:"[\u8bd1] \u5f02\u6b65 Rust\uff1a\u534f\u4f5c\u4e0e\u62a2\u5360\u5f0f\u8c03\u5ea6",description:"\u539f\u6587\u94fe\u63a5\uff1ahttps://thenewstack.io/using-rustlangs-async-tokio-runtime-for-cpu-bound-tasks/",date:"2022-04-11T00:00:00.000Z",formattedDate:"2022\u5e744\u670811\u65e5",tags:[],readingTime:13.765,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"\u5bf9\u91cd\u8bf7\u6c42 - \u5e94\u5bf9\u5c3e\u90e8\u5ef6\u8fdf",permalink:"/blog/2022/04/13/[\u8bd1] tail_latency"},nextItem:{title:"Rust \u516d\u8fb9\u5f62\u67b6\u6784",permalink:"/blog/2022/04/03/[\u8bd1] Rust \u516d\u8fb9\u5f62\u67b6\u6784/README"}},u={authorsImageUrls:[]},s=[{value:"Tokio \u662f\u4ec0\u4e48\uff1f",id:"tokio-\u662f\u4ec0\u4e48",level:2},{value:"\u4e3a\u4ec0\u4e48\u4f7f\u7528 Tokio \u5904\u7406 CPU \u5bc6\u96c6\u578b\u4efb\u52a1",id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528-tokio-\u5904\u7406-cpu-\u5bc6\u96c6\u578b\u4efb\u52a1",level:2},{value:"\u4f7f\u7528 Tokio \u7684\u53cd\u5bf9\u610f\u89c1",id:"\u4f7f\u7528-tokio-\u7684\u53cd\u5bf9\u610f\u89c1",level:2},{value:"Tokio \u6587\u6863\u7684\u8b66\u544a\uff1a",id:"tokio-\u6587\u6863\u7684\u8b66\u544a",level:3},{value:"\u5c3e\u90e8\u5ef6\u8fdf\u4f1a\u62d6\u7d2f\u4f60",id:"\u5c3e\u90e8\u5ef6\u8fdf\u4f1a\u62d6\u7d2f\u4f60",level:3},{value:"\u5355\u4efb\u52a1\u5f00\u9500\u5f88\u9ad8",id:"\u5355\u4efb\u52a1\u5f00\u9500\u5f88\u9ad8",level:3},{value:"\u5b9e\u8df5",id:"\u5b9e\u8df5",level:2},{value:"\u4e13\u7528\u7684\u6267\u884c\u5668",id:"\u4e13\u7528\u7684\u6267\u884c\u5668",level:3}],p={toc:s};function k(t){let{components:e,...n}=t;return(0,a.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u539f\u6587\u94fe\u63a5\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://thenewstack.io/using-rustlangs-async-tokio-runtime-for-cpu-bound-tasks/"},"https://thenewstack.io/using-rustlangs-async-tokio-runtime-for-cpu-bound-tasks/")),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"\u7ffb\u8bd1\uff1a",(0,a.kt)("a",{parentName:"strong",href:"https://github.com/trdthg"},"trdthg"))),(0,a.kt)("p",{parentName:"blockquote"},"\u9009\u9898\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Akagi201"},"Akagi201")),(0,a.kt)("p",{parentName:"blockquote"},"\u672c\u6587\u7531 ",(0,a.kt)("a",{parentName:"p",href:"https://Rustt.org"},"Rustt")," \u7ffb\u8bd1\uff0c",(0,a.kt)("a",{parentName:"p",href:"https://studyrust.org"},"StudyRust")," \u8363\u8a89\u63a8\u51fa")),(0,a.kt)("h1",{id:"\u4f7f\u7528-tokio-\u5904\u7406-cpu-\u5bc6\u96c6\u578b\u4efb\u52a1"},"\u4f7f\u7528 Tokio \u5904\u7406 CPU \u5bc6\u96c6\u578b\u4efb\u52a1"),(0,a.kt)("p",null,"\u5c3d\u7ba1 async \u901a\u5e38\u90fd\u88ab\u5e94\u7528\u4e8e\u5f02\u6b65\u7f51\u7edc I/O\uff0c\u4f46\u662f\u5728\u8fd9\u7bc7\u6587\u7ae0\u91cc\uff0c\u6211\u4f1a\u50cf\u4f60\u4ecb\u7ecd\u4e3a\u4ec0\u4e48\u4f7f\u7528 Tokio \u5904\u7406 CPU\n\u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u6bd4\u5982\u6570\u636e\u5206\u6790\u5f15\u64ce\u7b49\uff09\u4e5f\u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002"),(0,a.kt)("h2",{id:"tokio-\u662f\u4ec0\u4e48"},"Tokio \u662f\u4ec0\u4e48\uff1f"),(0,a.kt)("p",null,"Rust \u672c\u8eab\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u4e8e JavaScript \u7684\u5f02\u6b65\u7f16\u7a0b\u6a21\u578b\u3002"),(0,a.kt)("p",null,"\u4e3a\u4e86\u5145\u5206\u5229\u7528\u591a\u6838\u548c\u5f02\u6b65 I/O\u3002\u4e00\u4e2a\u8fd0\u884c\u65f6\u662f\u5fc5\u987b\u7684\uff0c\u5c3d\u7ba1\u793e\u533a\u6709\u5f88\u591a\u5f02\u6b65\u8fd0\u884c\u65f6\u7684\u9009\u62e9\uff0c\u4f46\u662f Tokio \u662f\u4e8b\u5b9e\u4e0a\u7684\u6807\u51c6\u3002\u5c3d\u7ba1 Tokio \u5728\u5b98\u7f51\u4e0a\u63cf\u8ff0\u5230\u5b83\u662f\nRust \u8bed\u8a00\u7684\u4e00\u4e2a\u5f02\u6b65\u8fd0\u884c\u65f6\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u7f16\u5199\u7f51\u7edc\u670d\u52a1\u6240\u9700\u8981\u7684\u6a21\u5757\uff0c\u5b83\u4e5f\u53ef\u4ee5\u88ab\u7528\u5728\u5176\u5b83\u573a\u666f\u3002"),(0,a.kt)("h2",{id:"\u4e3a\u4ec0\u4e48\u4f7f\u7528-tokio-\u5904\u7406-cpu-\u5bc6\u96c6\u578b\u4efb\u52a1"},"\u4e3a\u4ec0\u4e48\u4f7f\u7528 Tokio \u5904\u7406 CPU \u5bc6\u96c6\u578b\u4efb\u52a1"),(0,a.kt)("p",null,"\u73b0\u4ee3\u5316\u7684\u6570\u636e\u5206\u6790\u5f15\u64ce\u603b\u662f\u4e0d\u53ef\u907f\u514d\u7684\u8981\u5904\u7406\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u7f51\u7edc\u8bf7\u6c42\uff0c\u4ee5\u53ca\u901a\u8fc7\u7f51\u7edc\u548c\u5bf9\u8c61\u5b58\u50a8\u7cfb\u7edf\uff08\u6bd4\u5982 ASW S3\u3001GCP Cloud\u3001Azure\n\u7b49\uff09\u8fdb\u884c\u901a\u4fe1\u3002\u56e0\u6b64\uff0c\u4efb\u4f55\u4f7f\u7528 Rust \u5b9e\u73b0\u7684\u7cfb\u7edf\uff0c\u5927\u591a\u90fd\u4f1a\u7528 Tokio \u53bb\u5904\u7406\u8fd9\u90e8\u5206\u7f51\u7edc\u76f8\u5173\u7684\u670d\u52a1\uff0c\u6216\u8005\u662f\u4e00\u90e8\u5206\u6587\u4ef6 I/O \u670d\u52a1\u3002"),(0,a.kt)("p",null,'\u9664\u4e86\u5e94\u5bf9\u7f51\u7edc\u5916\uff0c\u6570\u636e\u5206\u6790\u5f15\u64ce\u8fd8\u9700\u8981\u505a\u5927\u91cf\u7e41\u91cd\u7684\u7684 CPU \u8ba1\u7b97\uff0c\u6d88\u8017\u5927\u91cf CPU\n\u8d44\u6e90\u53bb\u8fdb\u884c\u8bf8\u5982\uff1a\u91cd\u65b0\u7ec4\u7ec7\u6570\u636e\u5b58\u50a8\u3001\u63d0\u524d\u8ba1\u7b97\u5404\u79cd\u7d22\u5f15\u3001\u6216\u8005\u662f\u76f4\u63a5\u56de\u590d\u5ba2\u6237\u7aef\u8bf7\u6c42\u7b49\u5de5\u4f5c\u3002\u8fd9\u4e9b\u590d\u6742\u8ba1\u7b97\u901a\u5e38\u4f1a\u88ab\u5207\u6210\u8bb8\u591a\u5355\u72ec\u7684\u5757\uff08\u6211\u628a\u5b83\u4eec\u79f0\u4e3a\n"\u4efb\u52a1"\uff09\uff0c\u7136\u540e\u88ab\u5e76\u884c\u7684\u5904\u7406\uff0c\u4ee5\u5229\u7528\u5230\u73b0\u4ee3 CPU \u7684\u591a\u6838\u7279\u6027\u3002'),(0,a.kt)("p",null,"\u4efb\u52a1\u8c03\u5ea6\u5668\u4f1a\u51b3\u5b9a\u54ea\u4e2a\u4efb\u52a1\u5e94\u8be5\u5728\u4ec0\u4e48\u65f6\u5019\u8fd0\u884c\uff0c\u5b83\u4f1a\u5c06\u4efb\u52a1\u6620\u5c04\u5230\u5408\u9002\u7684 CPU \u5185\u6838\u6216\u8005\u662f\u7ebf\u7a0b\u4e0a\u3002"),(0,a.kt)("p",null,"\u5b66\u672f\u754c\u548c\u5de5\u4e1a\u754c\u5bf9\u4e8e\u5404\u79cd\u4efb\u52a1\u8c03\u5ea6\u5668\u3001\u5de5\u4f5c\u6c60\u3001\u7ebf\u7a0b\u6c60\u7b49\u5df2\u7ecf\u79ef\u7d2f\u4e86\u5f88\u591a\u5e74\u7684\u7814\u7a76\u3002"),(0,a.kt)("p",null,"\u6211\u81ea\u5df1\u5df2\u7ecf\u5b9e\u73b0\u5e76\u4e14\u4f7f\u7528\u8fc7\u51e0\u4e2a\u81ea\u5b9a\u4e49\u7684\u4efb\u52a1\u8c03\u5ea6\u5668\u3002\u4ed6\u4eec\u5728\u5927\u591a\u6570\u65f6\u95f4 (99.9%)\n\u90fd\u5de5\u4f5c\u7684\u5f88\u597d\uff0c\u4f46\u662f\u5728\u5904\u7406\u8fb9\u7f18\u60c5\u51b5\uff08\u6bd4\u5982\u5feb\u901f\u505c\u673a\u3001\u4efb\u52a1\u53d6\u6d88\u3001\u6e05\u7406\u7b49\uff09\u65f6\uff0c\u4ed6\u4eec\u7684\u6548\u679c\u975e\u5e38\u4e0d\u5c3d\u4eba\u610f\u3002\u7531\u4e8e\u8fd9\u4e9b\u4efb\u52a1\u8c03\u5ea6\u5668\u4f7f\u7528\u4e86\u8f83\u4f4e\u7ea7\u522b\u7684\u7ebf\u7a0b\u539f\u8bed\uff0c\u51fa\u73b0\u7ebf\u7a0b\u95f4\u7ade\u4e89\u7684\u60c5\u51b5\u6bd4\u6bd4\u7686\u662f\uff0c\u6240\u4ee5\u6211\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\u3002"),(0,a.kt)("p",null,"\u56e0\u6b64\uff0c\u5f53\u6211\u5728 Rust \u751f\u6001\u4e2d\u5bfb\u627e\u4e00\u4e2a\u4efb\u52a1\u8c03\u5ea6\u5668\u65f6\uff0c\u4f60\u4f1a\u5f88\u81ea\u7136\u7684\u9009\u62e9 Tokio\u3002Tokio \u6709\u5f88\u591a\u4f18\u52bf\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u4f60\u53ea\u9700\u8981 Tokio\uff0c\u5e76\u4e0d\u9700\u8981\u6dfb\u52a0\u5176\u4ed6\u4f9d\u8d56\u9879\u3002"),(0,a.kt)("li",{parentName:"ol"},"Tokio \u5b9e\u73b0\u4e86\u4e00\u4e2a\u590d\u6742\u7684 ",(0,a.kt)("a",{parentName:"li",href:"https://tokio.rs/blog/2019-10-scheduler"},"\u652f\u6301\u4efb\u52a1\u7a83\u53d6\u7684\u8c03\u5ea6\u5668"),"\u3002"),(0,a.kt)("li",{parentName:"ol"},"Tokio \u5185\u90e8\u5b9e\u73b0\u4e86\u5bf9 async/await \u7684\u652f\u6301\u3002\u5e76\u4e14\u6709\u8bb8\u591a\u76f8\u5bf9\u6210\u719f\u7684\u5e93\u53bb\u5904\u7406\u6d41\u3001\u5f02\u6b65\u9501\u3001\u7ba1\u9053\u3001\u5f02\u6b65\u53d6\u6d88\u7b49\u3002"),(0,a.kt)("li",{parentName:"ol"},"Tokio \u5728 Rust \u751f\u6001\u7cfb\u7edf\u4e2d\u7ecf\u8fc7\u4e86\u826f\u597d\u6d4b\u8bd5\uff0c\u5e76\u4e14\u6709\u7740\u5927\u91cf\u4f7f\u7528\u6848\u4f8b\u3002"),(0,a.kt)("li",{parentName:"ol"},"Tokio \u901a\u5e38\u4f1a\u5c06\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u548c ",(0,a.kt)("inlineCode",{parentName:"li"},"Future")," \u653e\u5728\u540c\u4e00\u4e2a\u6267\u884c\u5668\u5185\uff0c\u8fd9\u6709\u5229\u4e8e\u5b9e\u73b0\u5c40\u90e8\u7f13\u5b58\u3002"),(0,a.kt)("li",{parentName:"ol"},"Tokio \u7684 ",(0,a.kt)("a",{parentName:"li",href:"https://tokio.rs/tokio/tutorial"},"\u6587\u6863")," \u5f88\u5b8c\u5584\uff0c\u5e76\u4e14\u5728\u79ef\u6781\u66f4\u65b0\u7ef4\u62a4\u3002")),(0,a.kt)("p",null,"\u56e0\u6b64\uff0c\u9009\u62e9 Tokio \u4f5c\u4e3a CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u4efb\u52a1\u8c03\u5ea6\u7a0b\u5e8f\u662f\u7406\u6240\u5e94\u5f53\u7684\uff0c\u5bf9\u5427\uff1fWROOOOOOOONG\uff01"),(0,a.kt)("h2",{id:"\u4f7f\u7528-tokio-\u7684\u53cd\u5bf9\u610f\u89c1"},"\u4f7f\u7528 Tokio \u7684\u53cd\u5bf9\u610f\u89c1"),(0,a.kt)("p",null,"\u9009\u62e9 Tokio \u5728\u6211\u4eec\u56e2\u961f\u4e2d\u53d8\u6210\u4e86\u4e00\u4e2a\u70ed\u95e8\u8bdd\u9898\uff0c\u5230\u73b0\u5728\u4f9d\u7136\u4e0d\u662f\u6240\u6709\u4eba\u90fd\u8ba4\u53ef\u8fd9\u4e2a\u51b3\u5b9a\u3002\u5728\u6211\u4eec\u505a DataFusion \u548c InfluxDB IOx\n\u7684\u65e9\u671f\uff0c\u6211\u4eec\u5f88\u62c5\u5fc3\u8fd9\u4e2a\u95ee\u9898\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u53cd\u5bf9\u610f\u89c1\uff1a"),(0,a.kt)("h3",{id:"tokio-\u6587\u6863\u7684\u8b66\u544a"},"Tokio \u6587\u6863\u7684\u8b66\u544a\uff1a"),(0,a.kt)("p",null,"\u8001\u7248\u672c\u7684 Tokio \u6587\u6863\uff08\u6bd4\u5982 1.10 \u7248\uff09\u91cc\u9762\u6709\u4e00\u6761\u8457\u540d\u7684\u8b66\u544a\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"If your code is CPU-bound and you wish to limit the number of threads used to\nrun it, you should run it on another thread pool such as Rayon.")),(0,a.kt)("p",null,"\u5982\u679c\u4f60\u7684\u4ee3\u7801\u8981\u5904\u7406 CPU \u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5e76\u4e14\u60f3\u8981\u5c3d\u91cf\u51cf\u5c11\u4f7f\u7528\u5230\u7684\u7ebf\u7a0b\u6570\uff0c\u4f60\u5e94\u8be5\u5c06\u8fd9\u4e9b\u4efb\u52a1\u5206\u914d\u5230\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6c60\u6bd4\u5982 Rayon\u3002"),(0,a.kt)("p",null,"\u8fd9\u4e2a\u8b66\u544a\u5bf9\u6211\u4eec\u56e2\u961f\u548c\u793e\u533a\u90fd\u9020\u6210\u4e86\u5f88\u5927\u7684\u56f0\u60d1\u3002\u5f88\u591a\u4eba\u8bfb\u4e86\u4e4b\u540e\u90fd\u4ee5\u4e3a Tokio \u6c38\u8fdc\u4e0d\u5e94\u8be5\u7528\u6765\u5904\u7406 CPU\n\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u4f46\u662f\u6587\u6863\u7684\u5173\u952e\u5176\u5b9e\u662f\u8bf4\uff0c\u4e00\u4e2a\u8fd0\u884c\u65f6\u5b9e\u4f8b\uff08\u540c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff09\u4e0d\u5e94\u8be5\u540c\u65f6\u7528\u4e8e I/O \u548c CPU\n\u8ba1\u7b97\uff0c\u6211\u4eec\u4e4b\u540e\u6f84\u6e05\u4e86",(0,a.kt)("a",{parentName:"p",href:"https://docs.rs/tokio/1.14.0/tokio/#cpu-bound-tasks-and-blocking-code"},"\u6587\u6863"),"\n\u7684\u610f\u56fe\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u987a\u4fbf\u8bf4\u4e00\u53e5\uff0cTokio \u6587\u6863\u5efa\u8bae\u7528 Rayon \u5904\u7406 CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u3002Rayon\n\u5bf9\u4e8e\u5f88\u591a\u7a0b\u5e8f\u90fd\u662f\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u652f\u6301\u5f02\u6b65\u3002\u5982\u679c\u4f60\u7684\u4ee3\u7801\u4e2d\u54ea\u6015\u53ea\u6709\u4e00\u70b9\u9700\u8981\u4f7f\u7528\u5f02\u6b65\uff0c\u90a3\u4f60\u5c31\u4e0d\u5f97\u4e0d\u8de8\u8fc7\u540c\u6b65\u548c\u5f02\u6b65\u7684\u75db\u82e6\u8fb9\u754c\u3002\u6211\u8fd8\u53d1\u73b0\u5b9e\u73b0\u4e00\u4e2a\n",(0,a.kt)("a",{parentName:"p",href:"http://justinjaffray.com/query-engines-push-vs.-pull/"},"\u57fa\u4e8e\u62c9\u53d6\u7684\u6267\u884c\u5668\u6a21\u578b"),"\n\u4f1a\u66f4\u56f0\u96be\uff0c\u8fd9\u79cd\u6a21\u578b\u8981\u6c42\u67d0\u4e2a\u4efb\u52a1\u5fc5\u987b\u7b49\u5f85\u6240\u6709\u7684\u8f93\u5165\u90fd\u51c6\u5907\u597d\u5728\u80fd\u5728 Rayon \u4e2d\u8fd0\u884c")),(0,a.kt)("h3",{id:"\u5c3e\u90e8\u5ef6\u8fdf\u4f1a\u62d6\u7d2f\u4f60"},"\u5c3e\u90e8\u5ef6\u8fdf\u4f1a\u62d6\u7d2f\u4f60"),(0,a.kt)("p",null,"\u806a\u660e\u7684\u4eba\u4f1a\u8bf4\uff1a\u4f7f\u7528 Tokio \u5904\u7406 CPU\n\u5bc6\u96c6\u578b\u4efb\u52a1\u4f1a\u589e\u52a0\u8bf7\u6c42\u7684",(0,a.kt)("a",{parentName:"p",href:"https://medium.com/swlh/hedged-requests-tackling-tail-latency-9cea0a05f577"},"\u5c3e\u90e8\u5ef6\u8fdf"),"\uff0c\u8fd9\u662f\u96be\u4ee5\u4ee4\u4eba\u63a5\u53d7\u7684\u3002"),(0,a.kt)("p",null,"\u5c3e\u90e8\u5ef6\u8fdf\uff1f\ud83d\ude44"),(0,a.kt)("p",null,"\u4f60\u53ef\u80fd\u8ba4\u4e3a\uff1a\u6211\u6b63\u5728\u7f16\u5199\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u5c3e\u90e8\u5ef6\u8fdf\u542c\u8d77\u6765\u50cf\u662f\u5bf9\u4e8e\u9ad8\u8d1f\u8f7d\u7684 Web \u670d\u52a1\u5668\u7684\u4e00\u4e2a\u5b66\u672f\u95ee\u9898\u2026\u2026\u201d"),(0,a.kt)("p",null,"\u4f46\u5176\u5b9e\uff0c\u8fd9\u4e5f\u662f\u9700\u8981\u8003\u8651\u7684\uff1a\u601d\u8003\u4e00\u4e0b\u5065\u5eb7\u68c0\u67e5\uff0c\u5065\u5eb7\u68c0\u67e5\u5bf9\u4e8e\u4f7f\u7528\u5bb9\u5668\u7f16\u6392\u7cfb\u7edf\uff08\u6bd4\u5982 Kubernetes\uff09\u90e8\u7f72\u7684\u670d\u52a1\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u68c0\u67e5\u7684\u65b9\u5f0f\u901a\u5e38\u662f\u53d1\u9001\u4e00\u4e2a HTTP\n\u8bf7\u6c42\u5230\u67d0\u4e2a API \uff0c\u4f8b\u5982 ",(0,a.kt)("inlineCode",{parentName:"p"},"/health"),"\u3002\u5982\u679c\u8be5\u8bf7\u6c42\u5df2\u7ecf\u88ab\u5206\u6d3e\u5230\u67d0\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u4f46\u662f Tokio \u6b63\u5728\u5fd9\u4e8e\u4f7f\u7528 CPU \u8fdb\u884c\u5927\u91cf\u6570\u636e\u5904\u7406\u4efb\u52a1\uff0c\u90a3\u4e48\nKubernetes \u5c06\u4e0d\u80fd\u53ca\u65f6\u5f97\u5230 \u201c\u7cfb\u7edf\u6b63\u5e38\u201d \u7684\u54cd\u5e94\uff0c\u4f60\u7684\u8fdb\u7a0b\u5c31\u4f1a\u88ab K8s \u6740\u6b7b\u3002\u56e0\u6b64\u5f97\u5230\u7ed3\u8bba\uff1a\u7531\u4e8e\u5c3e\u90e8\u5ef6\u8fdf\uff0c\u4f60\u4e0d\u80fd\u5c06 Tokio \u7528\u4e8e CPU\n\u5bc6\u96c6\u578b\u4efb\u52a1\u3002"),(0,a.kt)("p",null,"\u4f46\u662f\uff0c\u5c31\u50cf Tokio \u5728\u6587\u6863\u4e2d\u9610\u8ff0\u7684\uff0c\u60f3\u8981\u9632\u6b62\u4f60\u7684\u7a0b\u5e8f\u5728 CPU \u5b8c\u5168\u9971\u548c\u7684\u60c5\u51b5\u4e0b\u88ab K8s\n\u8bef\u6740\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528\u4e24\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\u3002\u4e00\u4e2a\u7528\u6765\u6267\u884c\u5bf9\u5c3e\u90e8\u5ef6\u8fdf\u654f\u611f\u7684\u4efb\u52a1\uff0c\u5c31\u6bd4\u5982\u54cd\u5e94 ",(0,a.kt)("inlineCode",{parentName:"p"},"/health")," \u63a5\u53e3\u3002\u53e6\u4e00\u4e2a\u7528\u6765\u6267\u884c CPU\n\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u6c60\u7684\u7684\u6700\u4f73\u7ebf\u7a0b\u6570\u9700\u8981\u6839\u636e\u5177\u4f53\u9700\u6c42\u53bb\u8c03\u6574\u3002"),(0,a.kt)("p",null,"\u5982\u679c\u4f60\u5c06 Tokio \u8fd0\u884c\u65f6\u53ea\u662f\u89c6\u4e3a\u4e00\u4e2a\u590d\u6742\u70b9\u7684\u7ebf\u7a0b\u6c60\uff0c\u90a3\u4e48\u4f7f\u7528\u591a\u4e2a\u8fd0\u884c\u65f6\u5b9e\u4f8b\u7684\u60f3\u6cd5\u53ef\u80fd\u66f4\u5bb9\u6613\u63a5\u53d7\uff0c\u6211\u4eec\u5c06\u5728\u6700\u540e\u4f7f\u7528\u4e13\u7528\u7684\u6267\u884c\u5668\u6f14\u793a\u5982\u4f55\u5b9e\u73b0\u8fd9\u4e2a\u60f3\u6cd5\u3002"),(0,a.kt)("h3",{id:"\u5355\u4efb\u52a1\u5f00\u9500\u5f88\u9ad8"},"\u5355\u4efb\u52a1\u5f00\u9500\u5f88\u9ad8"),(0,a.kt)("p",null,"Tokio \u7684\u6bcf\u4e2a\u4efb\u52a1\u5f00\u9500\u5f88\u9ad8\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u8fd9\u70b9\uff0c\u6211\u4e00\u70b9\u4e5f\u4e0d\u60ca\u8bb6\u3002\u4eba\u4eec\u603b\u662f\u53ef\u4ee5\u5b9e\u73b0\u6bd4 Tokio \u8fd0\u884c\u901f\u5ea6\u66f4\u5feb\u7684\u7ebf\u7a0b\u6c60\u3002\u4f46\u662f\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u6c60\u5e76\u4e0d\u662f\u8db3\u591f\u7a33\u5b9a\uff0c\u96be\u4ee5\u5e94\u5bf9\u751f\u4ea7\u73af\u5883\u7684\u8d1f\u8f7d\uff0c\u5e76\u4e14\u4ed6\u4eec\u4e5f\u4e0d\u5177\u5907\u50cf\nTokio \u4e00\u6837\u7684\u5e9e\u5927\u751f\u6001\u7cfb\u7edf\u3002"),(0,a.kt)("p",null,"\u5728\u8bb8\u591a\u573a\u666f\u4e0b\uff0c\u5355\u4efb\u52a1\u7684\u5f00\u9500\u53ef\u4ee5\u4f7f\u7528 \u201c\u77e2\u91cf\u5316\u5904\u7406\u201d\n\u6765\u5206\u644a\u3002\u610f\u601d\u662f\u6bcf\u4e2a\u4efb\u52a1\u56de\u540c\u65f6\u5904\u7406\u51e0\u5343\u884c\u6570\u636e\u800c\u4e0d\u662f\u5355\u5355\u4e00\u884c\uff0c\u4f60\u9700\u8981\u5c06\u4efb\u52a1\u5206\u6210\u5408\u7406\u5927\u5c0f\u7684\u5757\u3002\u4f60\u4e5f\u4e0d\u80fd\u5206\u644a\u6240\u6709\u5de5\u4f5c\u573a\u666f\u4e0b\u7684\u5f00\u9500\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e\u6211\u4eec\u7684\u7a0b\u5e8f\u5173\u5fc3\u7684\u5b9e\u4f8b\u6765\u8bf4\uff0cTokio\n\u7684\u4efb\u52a1\u5f00\u9500\u5df2\u7ecf\u5fae\u4e4e\u5176\u5fae\u4e86"),(0,a.kt)("h2",{id:"\u5b9e\u8df5"},"\u5b9e\u8df5"),(0,a.kt)("p",null,"\u5047\u8bbe\u4f60\u5df2\u7ecf\u88ab\u8bf4\u670d\u4e86\u4f7f\u7528 Tokio \u53bb\u5904\u7406 CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u662f\u53ef\u884c\u7684\u3002\u73b0\u5728\u4f60\u5e94\u8be5\u600e\u4e48\u505a\uff1f"),(0,a.kt)("p",null,"\u9996\u5148\uff0c\u81f3\u5173\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff0c\u4f60\u7684\u4ee3\u7801\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u539f\u5219\uff1a\u5f02\u6b65\u4ee3\u7801\u6c38\u8fdc\u4e0d\u5e94\u8be5\u82b1\u8d39\u5f88\u957f\u65f6\u95f4\u624d\u80fd\u5b8c\u6210\uff0c\u8fd9\u4e00\u70b9\u8bf7\u53c2\u8003 Alice Ryhl \u7684\n",(0,a.kt)("a",{parentName:"p",href:"https://ryhl.io/blog/async-what-is-blocking/"},"Async: What is blocking?"),"\u3002\u8fd9\u662f\u4e3a\u4e86\u8ba9\u8c03\u5ea6\u5668\u6709\u673a\u4f1a\u5b89\u6392\u5176\u4ed6\u4e8b\u60c5\uff0c\u6bd4\u5982\u4efb\u52a1\u7a83\u53d6\u7b49\u3002"),(0,a.kt)("p",null,"\u5f53\u7136\u4e86\uff0c\u8fd9\u4e2a \u201c\u5f88\u957f\u65f6\u95f4\u201d \u53d6\u51b3\u4e8e\u4f60\u7684\u7a0b\u5e8f\uff1bRyhl \u5efa\u8bae\u5728\u4f18\u5316\u54cd\u5e94\u7684\u5c3e\u90e8\u5ef6\u8fdf\u65f6\uff0c\u5355\u4e2a\u5f02\u6b65\u4efb\u52a1\u5b8c\u6210\u65f6\u95f4\u5e94\u8be5\u5728 10 ~ 100 \u5fae\u79d2\u3002\u6211\u8ba4\u4e3a\u5728\u9488\u5bf9 CPU\n\u8fdb\u884c\u4f18\u5316\u65f6 10~100 \u6beb\u79d2\u4e5f\u80fd\u6709\u4e0d\u9519\u7684\u6548\u679c\u3002\u4f46\u662f\u5728\u6211\u7684\u6d4b\u8bd5\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/alamb/rust_tokio_overhead"},"estimated per-task Tokio overhead"),"\n\u4e2d\uff0cTokio \u5355\u4efb\u52a1\u7684\u5f00\u9500\u5728\u7ea6 10 \u7eb3\u79d2\u8303\u56f4\u5185\uff0c\u56e0\u6b64\u51e0\u4e4e\u4e0d\u53ef\u80fd\u7528 10 \u6beb\u79d2\u7684\u4efb\u52a1\u6765\u6d4b\u91cf Tokio \u8fd0\u884c\u65f6\u5f00\u9500\u3002"),(0,a.kt)("p",null,"\u5176\u6b21\uff0c\u5c06\u4efb\u52a1\u5206\u6d3e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u6267\u884c\u5668"),(0,a.kt)("h3",{id:"\u4e13\u7528\u7684\u6267\u884c\u5668"},"\u4e13\u7528\u7684\u6267\u884c\u5668"),(0,a.kt)("p",null,"\u8fd9\u91cc\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6f14\u793a\u4e86\u6211\u4eec\u5982\u4f55\u5728 InfluxDB IOx \u4e0a\u5c06\u4efb\u52a1\u5206\u914d\u5230\u4e00\u4e2a\u5355\u72ec\u7684 Tokio\n\u8fd0\u884c\u65f6\u4e0a\uff08\u5b8c\u6574\u4ee3\u7801\u53ef\u4ee5\u5728\u6211\u4eec\u7684",(0,a.kt)("a",{parentName:"p",href:"https://github.com/influxdata/influxdb_iox/blob/fe155e15fb2ad166aee66b0458e63c24a8128dd4/query/src/exec/task.rs#L101-L118"},"\u4ed3\u5e93"),"\u91cc\u67e5\u770b\uff0c\u91cc\u9762\u8fd8\u6709\u5173\u4e8e\u6e05\u7406\u3001\u505c\u673a\u3001\u5408\u5e76\u7684\u5185\u5bb9\uff09"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rs"},'pub struct DedicatedExecutor {\n    state: Arc<Mutex<State>>,\n}\n\n/// Runs futures (and any `tasks` that are `tokio::task::spawned` by\n/// them) on a separate Tokio Executor\nstruct State {\n    /// Channel for requests -- the dedicated executor takes requests\n    /// from here and runs them.\n    requests: Option<std::sync::mpsc::Sender<Task>>,\n\n    /// Thread which has a different Tokio runtime\n    /// installed and spawns tasks there\n    thread: Option<std::thread::JoinHandle<()>>,\n}\n\nimpl DedicatedExecutor {\n    /// Creates a new `DedicatedExecutor` with a dedicated Tokio\n    /// executor that is separate from the threadpool created via\n    /// `[tokio::main]`.\n    pub fn new(thread_name: &str, num_threads: usize) -> Self {\n        let thread_name = thread_name.to_string();\n\n        let (tx, rx) = std::sync::mpsc::channel::<Task>();\n\n        let thread = std::thread::spawn(move || {\n            // Create a new Runtime to run tasks\n            let runtime = Tokio::runtime::Builder::new_multi_thread()\n                .enable_all()\n                .thread_name(&thread_name)\n                .worker_threads(num_threads)\n                // Lower OS priority of worker threads to prioritize main runtime\n                .on_thread_start(move || set_current_thread_priority_low())\n                .build()\n                .expect("Creating Tokio runtime");\n\n         // Pull task requests off the channel and send them to the executor\n         runtime.block_on(async move {\n                while let Ok(task) = rx.recv() {\n                    Tokio::task::spawn(async move {\n                        task.run().await;\n                    });\n                }\n\n        let state = State {\n            requests: Some(tx),\n            thread: Some(thread),\n        };\n\n        Self {\n            state: Arc::new(Mutex::new(state)),\n        }\n    }\n')),(0,a.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5728\u4e00\u4e2a\u65b0\u7ebf\u7a0b ",(0,a.kt)("inlineCode",{parentName:"p"},"std::thread"),"\uff0c\u5e76\u5728\u8fd9\u4e2a\u7ebf\u7a0b\u91cc\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 Tokio \u8fd0\u884c\u65f6\u3002\u8fd0\u884c\u65f6\u4f1a\u4ece ",(0,a.kt)("inlineCode",{parentName:"p"},"channel")," \u83b7\u53d6\u4efb\u52a1\u5e76\u8fd0\u884c\u3002"),(0,a.kt)("p",null,"\u6ce8\u610f\uff1a\u8fd9\u4e2a\u65b0\u7684\u7ebf\u7a0b\u5f88\u5173\u952e\uff0c\u5982\u679c\u4f60\u5c1d\u8bd5\u5728\u4e3b\u7ebf\u7a0b\u91cc\u6216\u8005\u662f\u4efb\u4f55\u5df2\u7ecf\u521b\u5efa\u8fc7 Tokio \u8fd0\u884c\u65f6\u7684\u7ebf\u7a0b\u91cc\u518d\u6b21\u521b\u5efa\u65b0\u7684\u8fd0\u884c\u65f6\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6709\u4e00\u4e2a\u8fd0\u884c\u65f6\u4e86\u3002"),(0,a.kt)("p",null,"\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u4efb\u52a1\u5206\u6d3e\u5230\u7b2c\u4e8c\u4e2a\u8fd0\u884c\u65f6\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rs"},"impl DedicatedExecutor {\n\n    /// Runs the specified Future (and any tasks it spawns) on the\n    /// `DedicatedExecutor`.\n    pub fn spawn<T>(&self, task: T) -> Job<T::Output>\n    where\n        T: Future + Send + 'static,\n        T::Output: Send + 'static,\n    {\n        let (tx, rx) = tokio::sync::oneshot::channel();\n\n        let fut = Box::pin(async move {\n            let task_output = task.await;\n            tx.send(task_output).ok()\n        });\n        let mut state = self.state.lock();\n        let task = Task {\n            fut,\n        };\n\n        if let Some(requests) = &mut state.requests {\n            // would fail if someone has started shutdown\n            requests.send(task).ok();\n        } else {\n            warn!(\"tried to schedule task on an executor that was shutdown\");\n        }\n\n        Job { rx, cancel }\n    }\n}\n")),(0,a.kt)("p",null,"\u4e0a\u9762\u7684\u4ee3\u7801\u4f7f\u7528\u4e86\u4e00\u4e2a\u540d\u4e3a Job \u7684\u7ed3\u6784\u4f53\uff0c\u5b83\u662f\u4e00\u4e2a\u5bf9 Future \u7684\u7b80\u5355\u5305\u88c5\uff0cJob \u80fd\u591f\u5c06 Future\n\u7684\u6267\u884c\u7ed3\u679c\u4ece\u5355\u72ec\u7684\u6267\u884c\u5668\u5185\u4f20\u8f93\u56de\u4e3b\u7ebf\u7a0b\u3002\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rs"},"#[pin_project(PinnedDrop)]\npub struct Job<T> {\n    #[pin]\n    rx: Receiver<T>,\n}\n\nimpl<T> Future for Job<T> {\n    type Output = Result<T, Error>;\n\n    fn poll(\n        self: Pin<&mut Self>,\n        cx: &mut std::task::Context<'_>,\n    ) -> std::task::Poll<Self::Output> {\n        let this = self.project();\n        this.rx.poll(cx)\n    }\n}\n")),(0,a.kt)("p",null,"\u5c31\u662f\u8fd9\u6837\uff01 \u4f60\u53ef\u4ee5\u5728\n",(0,a.kt)("a",{parentName:"p",href:"https://gist.github.com/alamb/bd0e086448ef9b438aeebd6f550e23ed"},"Github gist"),"\n\u4e2d\u627e\u5230\u6240\u6709\u4ee3\u7801\u3002"))}k.isMDXComponent=!0}}]);