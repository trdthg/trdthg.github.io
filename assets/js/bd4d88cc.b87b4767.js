"use strict";(self.webpackChunktrdthg_github_io=self.webpackChunktrdthg_github_io||[]).push([[4685],{3905:(e,n,r)=>{r.d(n,{Zo:()=>i,kt:()=>c});var t=r(7294);function l(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){l(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,l=function(e,n){if(null==e)return{};var r,t,l={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(l[r]=e[r]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var m=t.createContext({}),s=function(e){var n=t.useContext(m),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},i=function(e){var n=s(e.components);return t.createElement(m.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},k=t.forwardRef((function(e,n){var r=e.components,l=e.mdxType,a=e.originalType,m=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),k=s(r),c=l,d=k["".concat(m,".").concat(c)]||k[c]||u[c]||a;return r?t.createElement(d,o(o({ref:n},i),{},{components:r})):t.createElement(d,o({ref:n},i))}));function c(e,n){var r=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=r.length,o=new Array(a);o[0]=k;var p={};for(var m in n)hasOwnProperty.call(n,m)&&(p[m]=n[m]);p.originalType=e,p.mdxType="string"==typeof e?e:l,o[1]=p;for(var s=2;s<a;s++)o[s]=r[s];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}k.displayName="MDXCreateElement"},5503:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var t=r(7462),l=(r(7294),r(3905));const a={},o=void 0,p={permalink:"/blog/2022/04/03/[\u8bd1] Rust \u516d\u8fb9\u5f62\u67b6\u6784/Rust \u516d\u8fb9\u5f62\u67b6\u6784 7 \u957f\u671f\u5b58\u50a8\u5e93",source:"@site/blog/2022-04-03-[\u8bd1] Rust \u516d\u8fb9\u5f62\u67b6\u6784/Rust \u516d\u8fb9\u5f62\u67b6\u6784 7 \u957f\u671f\u5b58\u50a8\u5e93.md",title:"[\u8bd1] Rust \u516d\u8fb9\u5f62\u67b6\u6784/Rust \u516d\u8fb9\u5f62\u67b6\u6784 7 \u957f\u671f\u5b58\u50a8\u5e93",description:"\u539f\u6587\u94fe\u63a5\uff1ahttps://alexis-lozano.com/hexagonal-architecture-in-rust-7/",date:"2022-04-03T00:00:00.000Z",formattedDate:"2022\u5e744\u67083\u65e5",tags:[],readingTime:26.32,hasTruncateMarker:!1,authors:[],frontMatter:{},prevItem:{title:"[\u8bd1] Rust \u516d\u8fb9\u5f62\u67b6\u6784/Rust \u516d\u8fb9\u5f62\u67b6\u6784 6 CLI",permalink:"/blog/2022/04/03/[\u8bd1] Rust \u516d\u8fb9\u5f62\u67b6\u6784/Rust \u516d\u8fb9\u5f62\u67b6\u6784 6 CLI"},nextItem:{title:"\u67e5\u8be2\u5f15\u64ce\uff1a\u63a8\u9001\u4e0e\u62c9\u53d6",permalink:"/blog/2022/04/01/[\u8bd1] search_engine"}},m={authorsImageUrls:[]},s=[{value:"\u4f7f\u7528 SQLite \u4f5c\u4e3a\u672c\u5730\u5b58\u50a8",id:"\u4f7f\u7528-sqlite-\u4f5c\u4e3a\u672c\u5730\u5b58\u50a8",level:2},{value:"\u521b\u5efa\u6570\u636e\u5e93",id:"\u521b\u5efa\u6570\u636e\u5e93",level:3},{value:"\u6dfb\u52a0\u9009\u62e9\u5b58\u50a8\u5e93\u7684\u5f00\u5173",id:"\u6dfb\u52a0\u9009\u62e9\u5b58\u50a8\u5e93\u7684\u5f00\u5173",level:2},{value:"\u5b9e\u73b0 SQlite \u5b58\u50a8\u5e93",id:"\u5b9e\u73b0-sqlite-\u5b58\u50a8\u5e93",level:2},{value:"\u8f85\u52a9\u51fd\u6570",id:"\u8f85\u52a9\u51fd\u6570",level:2},{value:"\u67e5\u8be2\u4e00\u53ea\u5b9d\u53ef\u68a6",id:"\u67e5\u8be2\u4e00\u53ea\u5b9d\u53ef\u68a6",level:2},{value:"\u67e5\u8be2\u6240\u6709\u5b9d\u53ef\u68a6",id:"\u67e5\u8be2\u6240\u6709\u5b9d\u53ef\u68a6",level:2},{value:"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6",id:"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6",level:2},{value:"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6",id:"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6",level:2},{value:"\u5c0f\u63d2\u66f2",id:"\u5c0f\u63d2\u66f2",level:2},{value:"\u4f7f\u7528 Airtable \u5b9e\u73b0\u5f39\u6027\u5b58\u50a8\u5e93",id:"\u4f7f\u7528-airtable-\u5b9e\u73b0\u5f39\u6027\u5b58\u50a8\u5e93",level:2},{value:"\u6dfb\u52a0\u542f\u52a8\u5f00\u5173",id:"\u6dfb\u52a0\u542f\u52a8\u5f00\u5173",level:3},{value:"\u5b9e\u73b0\u5b58\u50a8\u5e93",id:"\u5b9e\u73b0\u5b58\u50a8\u5e93",level:3},{value:"\u8f85\u52a9\u51fd\u6570",id:"\u8f85\u52a9\u51fd\u6570-1",level:4},{value:"\u67e5\u8be2\u4e00\u4e2a\u5b9d\u53ef\u68a6",id:"\u67e5\u8be2\u4e00\u4e2a\u5b9d\u53ef\u68a6",level:4},{value:"\u83b7\u53d6\u6240\u6709\u5b9d\u53ef\u68a6",id:"\u83b7\u53d6\u6240\u6709\u5b9d\u53ef\u68a6",level:4},{value:"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6",id:"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6-1",level:4},{value:"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6",id:"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6-1",level:4},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2}],i={toc:s};function u(e){let{components:n,...r}=e;return(0,l.kt)("wrapper",(0,t.Z)({},i,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u539f\u6587\u94fe\u63a5\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://alexis-lozano.com/hexagonal-architecture-in-rust-7/"},"https://alexis-lozano.com/hexagonal-architecture-in-rust-7/")),(0,l.kt)("p",{parentName:"blockquote"},"\u7ffb\u8bd1\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://github.com/trdthg"},"trdthg")),(0,l.kt)("p",{parentName:"blockquote"},"\u9009\u9898\uff1a",(0,l.kt)("a",{parentName:"p",href:"https://github.com/trdthg"},"trdthg")),(0,l.kt)("p",{parentName:"blockquote"},"\u672c\u6587\u7531 ",(0,l.kt)("a",{parentName:"p",href:"https://Rustt.org"},"Rustt")," \u7ffb\u8bd1\uff0c",(0,l.kt)("a",{parentName:"p",href:"https://studyrust.org"},"StudyRust")," \u8363\u8a89\u63a8\u51fa")),(0,l.kt)("h1",{id:"2021-10-17---rust-\u516d\u8fb9\u5f62\u67b6\u6784-7---\u957f\u671f\u5b58\u50a8\u5e93"},"2021-10-17 - Rust \u516d\u8fb9\u5f62\u67b6\u6784 #7 - \u957f\u671f\u5b58\u50a8\u5e93"),(0,l.kt)("p",null,"\u8fd9\u91cc\u662f\u672c\u7cfb\u5217\u7684\u6700\u540e\u4e00\u7bc7\u6587\u7ae0\u4e86\u3002\u975e\u5e38\u611f\u8c22\u4f60\uff0c\u5728\u4e03\u7bc7\u6587\u7ae0\u4e4b\u540e\u4ecd\u7136\u5728\u8fd9\u91cc\u7684\u533f\u540d\u8bfb\u8005\u3002\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u5f88\u591a\u4e1c\u897f\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\u57df\uff0c\u6211\u4eec\u80fd\u591f\u5b58\u50a8\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 CLI \u548c\nHTTP \u670d\u52a1\u5668\u6765\u64cd\u4f5c\u6211\u4eec\u7684\u7a0b\u5e8f\u3002\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u505a\u4ec0\u4e48\u5462\uff1f\u54e6\uff0c\u6211\u770b\u5230\u5ba2\u6237\u4e86\uff0c\u6211\u4eec\u95ee\u95ee\u4ed6\u5427\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u563f\uff0c\u6700\u8fd1\u597d\u5417\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u5f88\u597d\uff0c\u4f46\u4f60\u7684\u8f6f\u4ef6\u4e0d\u662f\u5f88\u597d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u54e6... \u6709\u4ec0\u4e48\u95ee\u9898\u5417\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u6211\u91cd\u542f\u7a0b\u5e8f\u65f6\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u4e22\u5931\u4e86\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u554a\uff0c\u5bf9\uff0c\u90a3\u5f88\u6b63\u5e38\u3002\u6211\u4eec\u73b0\u5728\u4f9d\u7136\u662f\u5728\u76f4\u63a5\u64cd\u4f5c\u5185\u5b58\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f60\u80fd\u8ba9\u8fd9\u4e9b\u6570\u636e\u5f97\u4ee5\u957f\u671f\u4fdd\u5b58\u5417\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u8fd9\u4e9b\u6570\u636e\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u60a8\u80fd\u7ed9\u6211\u4eec\u63d0\u4f9b\u4fdd\u5b58\u7684\u5730\u65b9\u5417\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u55ef\uff0c\u6211\u4e0d\u77e5\u9053\u3002\u6211\u8981\u53bb\u627e\u4eba\u95ee\u95ee\u3002\u4f60\u80fd\u4e0d\u80fd\u8ba9\u7a0b\u5e8f\u6682\u65f6\u628a\u6570\u636e\u5b58\u50a8\u518d\u786c\u76d8\u4e0a\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u9a6c\u4e0a\u5b8c\u6210\uff01")),(0,l.kt)("p",null,"\u597d\u7684\uff0c\u6211\u4eec\u60f3\u8981\u628a\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u5f53\u7a0b\u5e8f\u91cd\u542f\u540e\u4e5f\u4e0d\u4f1a\u88ab\u5220\u9664\u3002\u6211\u4eec\u9700\u8981\u4f7f\u7528\u6587\u4ef6\uff0c\u540c\u65f6\u56e0\u4e3a\u6211\u4eec\u60f3\u8981\u4f7f\u7528\u4e00\u79cd\u53ef\u9760\u7684\u65b9\u5f0f\u53bb\u67e5\u8be2\u6570\u636e\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 SQL\u3002\u6587\u4ef6\u548c\nSQL... \u6709\u4e1c\u897f\u5728\u6211\u8111\u6d77\u91cc\u5c16\u53eb\u8005 ",(0,l.kt)("strong",{parentName:"p"},"SQLite")),(0,l.kt)("p",null,"\u6709\u4e00\u70b9\u597d\u5904\u662f\uff0c\u6211\u4eec\u73b0\u5728\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u5b58\u50a8\u5e93\u7cfb\u7edf\uff0c\u6211\u4eec\u53ea\u9700\u8981\u586b\u52a0\u4e00\u4e2a\u65b0\u7684\u5b58\u50a8\u5e93\uff0c\u4ee5\u53ca\u4e00\u4e2a\u547d\u4ee4\u884c\u5f00\u5173\u53bb\u51b3\u5b9a\u4f7f\u7528\u90a3\u79cd\u5b58\u50a8\u5e93\u5373\u53ef\u3002\u56e0\u4e3a\u6709\u516d\u8fb9\u5f62\u67b6\u6784\uff0c\u6211\u4eec\u7684\u57df\u5b8c\u5168\u4e0d\u7528\u4fee\u6539\n: D"),(0,l.kt)("h2",{id:"\u4f7f\u7528-sqlite-\u4f5c\u4e3a\u672c\u5730\u5b58\u50a8"},"\u4f7f\u7528 SQLite \u4f5c\u4e3a\u672c\u5730\u5b58\u50a8"),(0,l.kt)("h3",{id:"\u521b\u5efa\u6570\u636e\u5e93"},"\u521b\u5efa\u6570\u636e\u5e93"),(0,l.kt)("p",null,"\u9996\u5148\u6211\u4eec\u8981\u4f7f\u7528 sqlite3 \u63d0\u4f9b\u7684\u547d\u4ee4\u884c\u5de5\u5177\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sqlite3 path/to/the/database.sqlite\n")),(0,l.kt)("p",null,"\u4f60\u5e94\u8be5\u5df2\u7ecf\u5f97\u5230\u4e86 SQLite \u7684\u63d0\u793a\u3002\u73b0\u5728\u6211\u4eec\u8981\u521b\u5efa\u4e24\u5f20\u8868\u3002\u4e3a\u4ec0\u4e48\u662f\u4e24\u5f20\uff1f\u56e0\u4e3a\u4e00\u4e2a\u5b9d\u53ef\u68a6\u6709\u5f88\u591a\u79cd\u7c7b\u578b\u3002\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u518d\u4e00\u5217\u4e2d\u5b58\u50a8\u6240\u6709\u7684\u7c7b\u578b\u3002"),(0,l.kt)("p",null,"\u5b9e\u9645\u4e0a\uff0c\u5b9d\u53ef\u68a6\u8868\u4e0e\u7c7b\u578b\u8868\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e00\u53ea\u5b9d\u53ef\u68a6\u6709\u591a\u79cd\u7c7b\u578b"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u5b9d\u53ef\u68a6")),(0,l.kt)("p",null,"\u6240\u4ee5\u5b8c\u6574\u7684\u6570\u636e\u5e93\u5e94\u8be5\u662f\u4e0b\u9762\u7684\u6837\u5b50\uff0c\u5b83\u4e00\u5171\u6709 3 \u5f20\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pokemons           | number          | name     |\n\ntypes              | id              | name     |\n\npokemons_to_types  | pokemons.number | types.id |\n")),(0,l.kt)("p",null,"\u4f46\u662f\u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u6709\u7c7b\u578b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"id"),"\uff0c\u6682\u65f6\u6211\u4eec\u53ea\u9700\u8981\u4e24\u5f20\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pokemons | number          | name |\n\ntypes    | pokemons.number | name |\n")),(0,l.kt)("p",null,"\u8ba9\u6211\u4eec\u56de\u5230 SQLite \u7684\u547d\u4ee4\u884c\u4e2d\u3002\u9996\u5148\u6211\u4eec\u8981\u6fc0\u6d3b\u5916\u952e (\u9ed8\u8ba4\u662f\u5173\u95ed\u7684)\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a\u8fd9\u4e2a\u64cd\u4f5c\u53ea\u4f1a\u5728\u672c\u6b21\u8fde\u63a5\u4e2d\u751f\u6548\uff0c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"pragma foreign_keys = 1;\n")),(0,l.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u521b\u5efa\u6570\u636e\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table pokemons (\n    number integer primary key,\n    name text\n);\n\ncreate table types (\n    pokemon_number integer,\n    name text,\n    foreign key (pokemon_number) references pokemons (number) on delete cascade,\n    primary key (pokemon_number, name)\n);\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"on delete cascade")," \u7684\u6548\u679c\u662f\u5f53\u4e00\u4e2a\u5b9d\u53ef\u68a6\u88ab\u5220\u9664\u65f6\uff0c\u7c7b\u578b\u8868\u4e2d\u6240\u6709 ",(0,l.kt)("inlineCode",{parentName:"p"},"pokemon_number")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"\n\u76f8\u540c\u7684\u884c\u4e5f\u4f1a\u88ab\u5220\u9664\u3002\u8fd9\u6837\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u5c31\u4e0d\u7528\u5728\u5173\u5fc3\u4e86\uff1a) \u73b0\u5728\u4f60\u53ef\u4ee5\u4f7f\u7528 Ctrl-D \u9000\u51fa SQLite \u4e86\u3002"),(0,l.kt)("h2",{id:"\u6dfb\u52a0\u9009\u62e9\u5b58\u50a8\u5e93\u7684\u5f00\u5173"},"\u6dfb\u52a0\u9009\u62e9\u5b58\u50a8\u5e93\u7684\u5f00\u5173"),(0,l.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u6709 SQLite \u4f5c\u4e3a\u6570\u636e\u5e93\uff0c\u6211\u4eec\u8981\u518d\u6dfb\u52a0\u4e00\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u544a\u8bc9\u7a0b\u5e8f\u6211\u4eec\u60f3\u4f7f\u7528 SQLite\u3002\u5927\u6982\u6548\u679c\u662f\u8fd9\u6837"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"pokedex --sqlite path/to/the/database.sqlite\n")),(0,l.kt)("p",null,"\u5f53\u4f60\u4f7f\u7528 cargo run \u65f6\u9700\u8981\u6539\u4e3a\u8fd9\u6837\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"cargo run -- --sqlite path/to/the/database.sqlite\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'fn main() { let repo = Arc::new(InMemoryRepository::new());\n\n    let matches = App::new(crate_name!())\n        .version(crate_version!())\n        .author(crate_authors!())\n        .arg(Arg::with_name("cli").long("cli").help("Runs in CLI mode"))\n        .arg(Arg::with_name("sqlite").long("sqlite").value_name("PATH"))\n        .get_matches();\n\n    match matches.occurrences_of("cli") {\n        0 => api::serve("localhost:8000", repo),\n        _ => cli::run(repo),\n    }\n}\n')),(0,l.kt)("p",null,"\u73b0\u5728\u6570\u636e\u5e93\u5f00\u5173\u5df2\u7ecf\u52a0\u4e0a\u4e86\uff0c\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"--help")," \u67e5\u770b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"OPTIONS: --sqlite <PATH>\n")),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u6211\u4eec\u53bb\u521d\u59cb\u5316\u4e00\u4e2a\u6682\u65f6\u8fd8\u6ca1\u6709\u5b9e\u73b0\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"SqliteRepository"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'use repositories::pokemon::{..., SqliteRepository};\n\nfn main() {\n    let matches = ...\n\n    let repo = build_repo(matches.value_of("sqlite"));\n\n    match matches.occurrences_of("cli") {\n        0 => api::serve("localhost:8000", repo),\n        _ => cli::run(repo),\n    }\n\n}\n\nfn build_repo(sqlite_value: Option<&str>) -> Arc<dyn Repository> {\n    if let Some(path) = sqlite_value {\n        match SqliteRepository::try_new(path) {\n            Ok(repo) => return Arc::new(repo),\n            _ => panic!("Error while creating sqlite repo"),\n        }\n    }\n\n    Arc::new(InMemoryRepository::new())\n}\n')),(0,l.kt)("p",null,"\u5f53 ",(0,l.kt)("inlineCode",{parentName:"p"},"--sqlite")," \u6253\u5f00\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u5c1d\u8bd5\u521d\u59cb\u5316 SQLite \u5b58\u50a8\u5e93\u3002\u5982\u679c\u521d\u59cb\u5316\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5d29\u6e83\u5e76\u6253\u5370\u9519\u8bef\u4fe1\u606f\u3002\u5982\u679c\u6ca1\u6709\u5f00\u542f ",(0,l.kt)("inlineCode",{parentName:"p"},"--sqlite"),"\n\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u5185\u5b58\u5b58\u50a8\u5e93\u3002"),(0,l.kt)("h2",{id:"\u5b9e\u73b0-sqlite-\u5b58\u50a8\u5e93"},"\u5b9e\u73b0 SQlite \u5b58\u50a8\u5e93"),(0,l.kt)("p",null,"\u6211\u4ece\u6587\u7ae0\u4e00\u5f00\u59cb\u5c31\u5728\u8c08\u8bba SQLite\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u4e00\u79cd\u4ece Rust \u8c03\u7528\u6570\u636e\u5e93\u7684\u65b9\u6cd5\u3002\u6211\u4eec\u5c06\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"rusqlite")," \u53bb\u5b9e\u73b0\u3002\u8ba9\u6211\u4eec\u5728\n",(0,l.kt)("inlineCode",{parentName:"p"},"Cargo.toml")," \u4e2d\u5bfc\u5165\u5b83\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nrusqlite = "0.26.0"\n')),(0,l.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u8981\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"SQLiteRepository"),"\uff0c\u6211\u8981\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"InMemoryRepository")," \u6240\u5728\u7684\u6587\u52a0\u4e2d\u521b\u5efa\n",(0,l.kt)("inlineCode",{parentName:"p"},"SQLiteRepository"),"\u3002\u5f53\u7136\uff0c\u8fd9\u4e0d\u662f\u5f3a\u5236\u7684\uff0c\u4f60\u4e5f\u53ef\u4ee5\u6839\u636e\u53bb\u8981\u628a\u5b83\u653e\u5728\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"use rusqlite::Connection;\n\npub struct SqliteRepository { connection: Mutex<Connection>, }\n")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"main.rs")," \u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"use")," \u73b0\u5728\u5e94\u8be5\u4e0d\u4f1a\u62a5\u9519\u4e86\uff0c\u63a5\u7740\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"try_new")," \u65b9\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'use rusqlite::{..., OpenFlags};\n\nimpl SqliteRepository {\n    pub fn try_new(path: &str) -> Result<Self, ()> {\n        let connection = match Connection::open_with_flags(path, OpenFlags::SQLITE_OPEN_READ_WRITE)\n        {\n            Ok(connection) => connection,\n            _ => return Err(()),\n        };\n\n        match connection.execute("pragma foreign_keys = 1", []) {\n            Ok(_) => Ok(Self {\n                connection: Mutex::new(connection),\n            }),\n            _ => Err(()),\n        }\n    }\n\n}\n')),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"rusqlite")," \u53bb\u65b0\u5efa\u4e00\u4e2a\u5bf9\u6570\u636e\u6587\u4ef6\u7684\u8fde\u63a5\u3002\u800c\u4e14\u6211\u4eec\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"OpenFlags")," \u53bb\u660e\u786e\u7981\u6b62\u5f53\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6 ",(0,l.kt)("inlineCode",{parentName:"p"},"rusqulite"),"\n\u53bb\u81ea\u52a8\u521b\u5efa\u6570\u636e\u6587\u4ef6\u3002\u5982\u679c\u8fde\u63a5\u6210\u529f\uff0c\u6211\u4eec\u5c31\u4f1a\u6267\u884c\u53ea\u524d\u63d0\u5230\u7684\u547d\u4ee4\uff0c\u786e\u4fdd\u5916\u952e\u5f00\u542f\u3002\u6700\u540e\u6211\u4eec\u53bb\u8fd4\u56de\u8fd9\u4e2a\u5b58\u50a8\u5e93\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u4f60\u73b0\u5728\u5c1d\u8bd5\u8fd0\u884c\u7a0b\u5e8f\uff0c\u8fd8\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6211\u4eec\u8fd8\u6ca1\u6709\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Repository")," Trait \u5b9a\u4e49\u7684\u7684\u6240\u6709\u65b9\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"impl Repository for SqliteRepository {\n    fn insert(\n        &self,\n        number: PokemonNumber,\n        name: PokemonName,\n        types: PokemonTypes,\n    ) -> Result<Pokemon, InsertError> {\n        Err(InsertError::Unknown)\n    }\n\n    fn fetch_all(&self) -> Result<Vec<Pokemon>, FetchAllError>{\n        Err(FetchAllError::Unknown)\n    }\n\n    fn fetch_one(&self, number: PokemonNumber) -> Result<Pokemon, FetchOneError> {\n        Err(FetchOneError::Unknown)\n    }\n\n    fn delete(&self, number: PokemonNumber) -> Result<(), DeleteError> {\n        Err(DeleteError::Unknown)\n    }\n}\n")),(0,l.kt)("p",null,"\u7f16\u8bd1\u901a\u8fc7\u4e86\uff0c\u4f46\u662f\u6211\u4eec\u7684\u5b58\u50a8\u5e93\u4f9d\u7136\u6ca1\u4ec0\u4e48\u7528\u73b0\u5728\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u8981\u5b9e\u73b0\u90a3\u4e9b\u65b9\u6cd5 :)"),(0,l.kt)("h2",{id:"\u8f85\u52a9\u51fd\u6570"},"\u8f85\u52a9\u51fd\u6570"),(0,l.kt)("p",null,"\u5728\u6211\u4eec\u5b9e\u73b0\u5b58\u50a8\u5e93\u9700\u8981\u7684\u51fd\u6570\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u5b9a\u4e49\u4e24\u4e2a\u8f85\u52a9\u51fd\u6570\u3002\u6211\u4eec\u60f3\u8981\u67e5\u8be2\u4e00\u4e2a\u6216\u8005\u662f\u6240\u6709\u5b9d\u53ef\u68a6\uff0c\u7528 SQL \u8bed\u53e5\u63cf\u8ff0\u5c31\u662f\u4e00\u4e2a\n",(0,l.kt)("inlineCode",{parentName:"p"},"select"),"\u3002\u6211\u4eec\u521b\u5efa\u7684\u8f85\u52a9\u51fd\u6570\u80fd\u591f\u628a\u8fd9\u4e24\u4e2a\u67e5\u8be2\u903b\u8f91\u6574\u5408\u5230\u4e00\u8d77\u3002"),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u80fd\u591f\u62ff\u5230\u6240\u6709\u5b9d\u53ef\u68a6\u7f16\u53f7\u548c\u540d\u5b57\u7684\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5df2\u7ecf\u62ff\u5230\u9501\u7684\u5b58\u50a8\u5e93\uff0c\u4e5f\u53ef\u80fd\u4f1a\u9700\u8981\u4e00\u4e2a\u5b9d\u53ef\u68a6\u7684\u7f16\u53f7\u3002\u5982\u679c\u51fd\u6570\u63a5\u6536\u5230\u4e86\u7f16\u53f7\uff0c\u90a3\u4e48\u5c31\u4f1a\u5728 SQL\n\u8bed\u53e5\u4e0a\u6dfb\u52a0 ",(0,l.kt)("inlineCode",{parentName:"p"},"where")," \u5b50\u53e5\u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u88ab\u6dfb\u52a0\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"impl SqliteRepository")," \u5757\u5185\uff0c\u56e0\u4e3a\u5b83\u4e0d\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"Repository Trait"),"\n\u7684\u4e00\u90e8\u5206\u3002\u53e6\u5916\uff0c\u6211\u4eec\u5c06\u76f4\u63a5\u8fd4\u56de\u539f\u59cb\u6570\u636e ( ",(0,l.kt)("inlineCode",{parentName:"p"},"u16")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," )\uff0c\u800c\u4e14\u8fd9\u4e2a\u51fd\u6570\u5e94\u8be5\u662f\u79c1\u6709\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"use std::sync::{..., MutexGuard};\n\nfn fetch_pokemon_rows(\n    lock: &MutexGuard<'_, Connection>,\n    number: Option<u16>,\n) -> Result<Vec<(u16, String)>, ()> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u8ba9\u6211\u4eec\u5f00\u59cb\u5427\u3002\u9996\u5148\uff0c\u6211\u4eec\u8981\u6839\u636e\u6570\u5b57\u662f\u5426\u5b58\u5728\u6765\u5b9a\u4e49\u67e5\u8be2\u8bed\u53e5\u548c\u67e5\u8be2\u53c2\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'let (query, params) = match number {\n    Some(number) => (\n        "select number, name from pokemons where number = ?",\n        vec![number],\n    ),\n    _ => ("select number, name from pokemons", vec![]),\n};\n')),(0,l.kt)("p",null,"\u76f8\u5f53\u7b80\u5355\u5427\uff1f\u73b0\u5728\u6211\u4eec\u5fc5\u987b\u51c6\u5907\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"statment")," \u5e76\u4f20\u9012\u6211\u4eec\u7684\u53c2\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"use rusqlite::{..., params_from_iter};\n\n...\nlet mut stmt = match lock.prepare(query) {\n    Ok(stmt) => stmt,\n    _ => return Err(()),\n};\n\nlet mut rows = match stmt.query(params_from_iter(params)) {\n    Ok(rows) => rows,\n    _ => return Err(()),\n};\n")),(0,l.kt)("p",null,"\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u67e5\u8be2\u7ed3\u679c\uff0c\u73b0\u5728\u9700\u8981\u628a\u7ed3\u679c\u8f6c\u6362\u4e3a\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"(u16, String)")," \u7c7b\u578b\u7684\u5143\u7ec4 \u518d\u628a\u4ed6\u4eec\u6c47\u96c6\u5230\u4e00\u4e2a\u5411\u91cf\u91cc\u8fd4\u56de"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nlet mut pokemon_rows = vec![];\n\nwhile let Ok(Some(row)) = rows.next() {\n    match (row.get::<usize, u16>(0), row.get::<usize, String>(1)) {\n        (Ok(number), Ok(name)) => pokemon_rows.push((number, name)),\n        _ => return Err(()),\n    };\n}\n\nOk(pokemon_rows)\n")),(0,l.kt)("p",null,"\u5bf9 ",(0,l.kt)("inlineCode",{parentName:"p"},"types")," \u8868\u4e5f\u4e00\u6837\uff0c\u8fd9\u4e2a\u8f85\u52a9\u51fd\u6570\u63a5\u6536\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u548c\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"\uff0c\u67e5\u8be2\u6210\u529f\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\u5411\u91cf\uff0c\u8868\u793a\u67d0\u4e00\u53ea\u5b9d\u53ef\u68a6\u7684\u7c7b\u578b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn fetch_type_rows(lock: &MutexGuard<'_, Connection>, number: u16) -> Result<Vec<String>, ()> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u51c6\u5907\u67e5\u8be2\u8bed\u53e5\uff0c\u5e26\u7740\u53c2\u6570\u8fdb\u884c\u67e5\u8be2\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'let mut stmt = match lock.prepare("select name from types where pokemon_number = ?") {\n    Ok(stmt) => stmt,\n    _ => return Err(()),\n};\n\nlet mut rows = match stmt.query([number]) {\n    Ok(rows) => rows,\n    _ => return Err(()),\n};\n')),(0,l.kt)("p",null,"\u4f9d\u6b21\u4ece\u7ed3\u679c\u4e2d\u63d0\u53d6\u51fa\u7c7b\u578b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let mut type_rows = vec![];\n\nwhile let Ok(Some(row)) = rows.next() {\n    match row.get::<usize, String>(0) {\n        Ok(name) => type_rows.push(name),\n        _ => return Err(()),\n    };\n}\nOk(type_rows)\n")),(0,l.kt)("p",null,"Aaaand\uff0c\u987a\u5229\u5b8c\u6210\uff01\u8fd9\u4e24\u4e2a\u529f\u80fd\u73b0\u5728\u90fd\u5b9e\u73b0\u4e86\u3002\u4f7f\u7528\u5b83\u4eec\u53bb\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"fetch_one")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"fetch_all")," \u4f1a\u66f4\u5bb9\u6613:)"),(0,l.kt)("h2",{id:"\u67e5\u8be2\u4e00\u53ea\u5b9d\u53ef\u68a6"},"\u67e5\u8be2\u4e00\u53ea\u5b9d\u53ef\u68a6"),(0,l.kt)("p",null,"\u6211\u4eec\u4f1a\u4e00\u6b65\u4e00\u6b65\u6765\uff0c\u9996\u5148\u5904\u7406\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn fetch_one(&self, number: PokemonNumber) -> Result<Pokemon, FetchOneError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u8981\u5148\u62ff\u5230\u9501\uff0c\u5e76\u901a\u8fc7\u8c03\u7528\u4e4b\u524d\u7684\u8f85\u52a9\u51fd\u6570\u53bb\u67e5\u8be2\u5b9d\u53ef\u68a6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let lock = match self.connection.lock() {\n    Ok(lock) => lock,\n    _ => return Err(FetchOneError::Unknown),\n};\n\nlet mut pokemon_rows = match Self::fetch_pokemon_rows(&lock, Some(u16::from(number.clone()))) {\n    Ok(pokemon_rows) => pokemon_rows,\n    _ => return Err(FetchOneError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u5f53\u67e5\u8be2\u7ed3\u679c\u4e3a\u7a7a\u65f6\uff0c\u6211\u4eec\u5c31\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"p"},"NotFound"),"\uff0c\u5426\u5219\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u7684\u7b2c\u4e00\u4e2a\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nif pokemon_rows.is_empty() {\n    return Err(FetchOneError::NotFound);\n}\n\nlet pokemon_row = pokemon_rows.remove(0);\n")),(0,l.kt)("p",null,"\u4e0d\u9519\u3002\u73b0\u5728\u6211\u4eec\u53bb\u67e5\u8be2\u5b9d\u53ef\u68a6\u7c7b\u578b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let type_rows = match Self::fetch_type_rows(&lock, pokemon_row.0) {\n    Ok(type_rows) => type_rows,\n    _ => return Err(FetchOneError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u6211\u4eec\u5df2\u7ecf\u6709\u5b9d\u53ef\u68a6\u7684\u7f16\u53f7\u3001\u540d\u79f0\u548c\u7c7b\u578b\u3002\u603b\u662f\u65f6\u5019\u628a\u4ed6\u4eec\u5c01\u88c5\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"Response")," \u4e86\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nmatch (\n    PokemonNumber::try_from(pokemon_row.0),\n    PokemonName::try_from(pokemon_row.1),\n    PokemonTypes::try_from(type_rows),\n) {\n    (Ok(number), Ok(name), Ok(types)) => Ok(Pokemon::new(number, name, types)),\n    _ => Err(FetchOneError::Unknown),\n}\n")),(0,l.kt)("h2",{id:"\u67e5\u8be2\u6240\u6709\u5b9d\u53ef\u68a6"},"\u67e5\u8be2\u6240\u6709\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn fetch_all(&self) -> Result<Vec<Pokemon>, FetchAllError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u9996\u5148\u83b7\u53d6\u9501\u5e76\u67e5\u8be2\u6240\u6709\u5b9d\u53ef\u68a6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let lock = match self.connection.lock() {\n    Ok(lock) => lock,\n    _ => return Err(FetchAllError::Unknown),\n};\n\nlet pokemon_rows = match Self::fetch_pokemon_rows(&lock, None) {\n    Ok(pokemon_rows) => pokemon_rows,\n    _ => return Err(FetchAllError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u4f60\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u628a ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \u53c2\u6570\u8bbe\u7f6e\u4e3a\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"None"),"\uff0c\u5bf9\u6bcf\u4e2a\u5b9d\u53ef\u68a6\uff0c\u6211\u4eec\u4f1a\u5355\u72ec\u67e5\u8be2\u5b83\u7684\u7c7b\u578b\uff0c\u6700\u7ec8\u5c01\u88c5\u4e3a\u4e00\u4e2a\u5217\u8868\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nlet mut pokemons = vec![];\n\nfor pokemon_row in pokemon_rows {\n    let type_rows = match Self::fetch_type_rows(&lock, pokemon_row.0) {\n        Ok(type_rows) => type_rows,\n        _ => return Err(FetchAllError::Unknown),\n    };\n\n    let pokemon = match (\n        PokemonNumber::try_from(pokemon_row.0),\n        PokemonName::try_from(pokemon_row.1),\n        PokemonTypes::try_from(type_rows),\n    ) {\n        (Ok(number), Ok(name), Ok(types)) => Pokemon::new(number, name, types),\n        _ => return Err(FetchAllError::Unknown),\n    };\n\n    pokemons.push(pokemon);\n}\n\nOk(pokemons)\n")),(0,l.kt)("h2",{id:"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6"},"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn insert(\n    &self,\n    number: PokemonNumber,\n    name: PokemonName,\n    types: PokemonTypes,\n) -> Result<Pokemon, InsertError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u4ece\u8fde\u63a5\u4e2d\u83b7\u53d6\u9501\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let mut lock = match self.connection.lock() {\n    Ok(lock) => lock,\n    _ => return Err(InsertError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u63a5\u7740\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u4e8b\u52a1\u3002\u4e3a\u4ec0\u4e48\u6211\u4eec\u6ca1\u6709\u76f4\u63a5\u6267\u884c\u4e00\u6761\u547d\u4ee4\uff1f\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u5411 ",(0,l.kt)("inlineCode",{parentName:"p"},"pokemons")," \u4e2d\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6\uff0c\u540c\u65f6\u8981\u60f3 ",(0,l.kt)("inlineCode",{parentName:"p"},"types"),"\n\u4e2d\u63d2\u5165\u5b83\u7684\u7c7b\u578b\u3002\u5982\u679c\u8fd9\u4e24\u6b21\u63d2\u5165\u6709\u4e00\u4e2a\u5931\u8d25\u4e86\uff0c\u8fd9\u6b21\u63d2\u5165\u6700\u597d\u80fd\u56de\u6eda\u3002\u4f7f\u7528\u4e8b\u52a1\u65f6\uff0c\u4f60\u9700\u8981\u5148\u521b\u5efa ",(0,l.kt)("inlineCode",{parentName:"p"},"SQL")," \u8bed\u53e5\uff0c\u4e4b\u540e\u63d0\u4ea4\u3002\u5982\u679c\u6709\u9519\u8bef\u53d1\u751f\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"rusqlite"),"\n\u4f1a\u81ea\u52a8\u5b8c\u6210\u56de\u6eda\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let transaction = match lock.transaction() {\n    Ok(transaction) => transaction,\n    _ => return Err(InsertError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u8981\u5411\u4e8b\u52a1\u4e2d\u6dfb\u52a0\u7b2c\u4e00\u6761\u547d\u4ee4\u3002\u6211\u4eec\u8981\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u6211\u4eec\u5e0c\u671b\u51fd\u6570\u6267\u884c\u5931\u8d25\u5e76\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'use rusqlite::{..., Error::SqliteFailure, params};\n\n...\nmatch transaction.execute(\n    "insert into pokemons (number, name) values (?, ?)",\n    params![u16::from(number.clone()), String::from(name.clone())],\n) {\n    Ok(_) => {}\n    Err(SqliteFailure(_, Some(message))) => {\n        if message == "UNIQUE constraint failed: pokemons.number" {\n            return Err(InsertError::Conflict);\n        } else {\n            return Err(InsertError::Unknown);\n        }\n    }\n    _ => return Err(InsertError::Unknown),\n};\n')),(0,l.kt)("p",null,"\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"rusqlite")," \u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\u6765\u68c0\u67e5\u9519\u8bef\u662f\u5426\u662f\u7531\u4e8e\u51b2\u7a81\u5f15\u8d77\u7684\u3002\u73b0\u5728\u5b9d\u53ef\u68a6\u7684\u63d2\u5165\u903b\u8f91\u5b8c\u6210\u4e86\u3002"),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u8981\u5904\u7406\u63d2\u5165\u7c7b\u578b\u3002\u6211\u4eec\u9700\u8981\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"PokemonTypes")," \u53c2\u6570\u4e2d\u7684\u6bcf\u79cd\u7c7b\u578b\u90fd\u5206\u522b\u6267\u884c\u4e00\u6b21\u63d2\u5165\u64cd\u4f5c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'...\nfor _type in Vec::<String>::from(types.clone()) {\n    if let Err(_) = transaction.execute(\n        "insert into types (pokemon_number, name) values (?, ?)",\n        params![u16::from(number.clone()), _type],\n    ) {\n        return Err(InsertError::Unknown);\n    }\n}\n')),(0,l.kt)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u63d0\u4ea4\u8fd9\u4e2a\u4e8b\u52a1\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nmatch transaction.commit() {\n    Ok(_) => Ok(Pokemon::new(number, name, types)),\n    _ => Err(InsertError::Unknown),\n}\n")),(0,l.kt)("h2",{id:"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6"},"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn delete(&self, number: PokemonNumber) -> Result<(), DeleteError> {\n    // code will go here\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let lock = match self.connection.lock() {\n    Ok(lock) => lock,\n    _ => return Err(DeleteError::Unknown),\n};\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'match lock.execute(\n    "delete from pokemons where number = ?",\n    params![u16::from(number)],\n) {\n    Ok(0) => Err(DeleteError::NotFound),\n    Ok(_) => Ok(()),\n    _ => Err(DeleteError::Unknown),\n}\n')),(0,l.kt)("p",null,"\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a\u7b2c\u4e00\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u518d\u5173\u6ce8\u5220\u9664\u5b9d\u53ef\u68a6\u65f6\u8bb0\u5f97\u5220\u9664\u7c7b\u578b\u4fe1\u606f\uff0c\u5728\u521b\u5efa\u6570\u636e\u8868\u65f6\u6211\u4eec\u5df2\u7ecf\u8bbe\u7f6e\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"on delete cascade")," \u8ba9 sqlite\n\u53bb\u81ea\u52a8\u5904\u7406\u3002\u7b2c\u4e8c\uff0c\u6211\u4eec\u4f7f\u7528\u5220\u9664\u64cd\u4f5c\u8fd4\u56de\u7684\u884c\u6570\u53bb\u5224\u65ad\u662f\u5426\u5220\u9664\u6210\u529f\uff0c\u5982\u679c\u6570\u91cf\u662f 0\uff0c\u5c31\u8868\u793a\u5220\u9664\u5931\u8d25\u3002"),(0,l.kt)("p",null,"\u4f60\u73b0\u5728\u5e94\u8be5\u80fd\u4f7f\u7528\u4f60\u7684 SQLite \u6570\u636e\u5e93\u4f5c\u4e3a\u5b58\u50a8\u5e93\u4e86\uff0c\u800c\u4e14\u80fd\u901a\u8fc7 CLI \u548c HTTP API \u4e24\u79cd\u65b9\u5f0f\u8bbf\u95ee\u3002\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4ece CLI \u521b\u5efa\u4e00\u4e9b\u65b0\u7684\u5b9d\u53ef\u68a6\uff0c\u5e76\u4ece\nHTTP API \u53bb\u83b7\u53d6\u4ed6\u4eec :)"),(0,l.kt)("h2",{id:"\u5c0f\u63d2\u66f2"},"\u5c0f\u63d2\u66f2"),(0,l.kt)("p",null,"\ud83d\ude40 \u6211\u770b\u5230\u5ba2\u6237\u4e86\uff0c\u4ed6\u6b63\u671d\u7740\u6211\u8fd9\u8fb9\u6765\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f60\u597d Alexis\uff01"),(0,l.kt)("li",{parentName:"ul"},"\u4f60\u597d \u5ba2\u6237\uff01\u6211\u5df2\u7ecf\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6301\u4e45\u5316\u7684\u5b58\u50a8\u5e93\uff0c\u5b83\u628a\u6570\u636e\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u7684\u786c\u76d8\u4e0a\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u54e6\uff0c\u592a\u597d\u4e86\uff01\u867d\u7136\u73b0\u5728\u6211\u77e5\u9053\u4e86\u6211\u4eec\u5c06\u4f7f\u7528\u4ec0\u4e48\u4f5c\u4e3a\u5b58\u50a8\u5e93\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u9519\uff0c\u901f\u5ea6\u5f88\u5feb\u3002\u662f PostgreSQL \u5417\uff1f\u8fd8\u662f Mysql\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u90fd\u4e0d\u662f\uff0c\u6211\u4eec\u7684\u516c\u53f8\u5e0c\u671b\u5b83\u662f\u6c34\u5e73\u53ef\u62d3\u5c55\u7684\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u55ef\uff0c\u8fd9\u8ba9\u6211\u60f3\u8d77\u4e86\u4e00\u4e2a",(0,l.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=b2F-DItXtZs"},"\u6050\u6016\u6545\u4e8b"),"\u3002\u90a3\u597d\u5427\uff0c\u4f60\u4eec\u516c\u53f8\u6253\u7b97\u4f7f\u7528\u4ec0\u4e48\u6280\u672f\uff1f"),(0,l.kt)("li",{parentName:"ul"},"\u4ed6\u4eec\u60f3\u4f7f\u7528 Airtable\uff0c\u4e00\u4e2a\u7c7b\u4f3c\u4e8e Excel \u7684\u5728\u7ebf\u8868\u683c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u54e6... \u8ba9\u6211\u770b\u770b\u6211\u80fd\u505a\u7684\u3002")),(0,l.kt)("h2",{id:"\u4f7f\u7528-airtable-\u5b9e\u73b0\u5f39\u6027\u5b58\u50a8\u5e93"},"\u4f7f\u7528 Airtable \u5b9e\u73b0\u5f39\u6027\u5b58\u50a8\u5e93"),(0,l.kt)("p",null,"\u597d\u5427\uff0c\u73b0\u5728\u6211\u4eec\u5fc5\u987b\u521b\u5efa\u53e6\u4e00\u4e2a\u5b58\u50a8\u5e93\u4e86\u3002\u751f\u6d3b\u5c31\u662f\u5982\u6b64\u3002\u6240\u4ee5\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u53bb Airtable\n\u7f51\u7ad9\u770b\u770b\u5b83\u662f\u600e\u4e48\u4f7f\u7528\u7684\u3002\u4f60\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8d26\u6237\uff0c\u5e76\u4e14\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u533a\u3002\u5728\u8fd9\u4e2a\u5de5\u4f5c\u533a\u91cc\uff0c\u4f60\u5e94\u8be5\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7684\u5de5\u4f5c\u8868\u3002\u628a\u4ed6\u91cd\u547d\u540d\u4e3a\n",(0,l.kt)("inlineCode",{parentName:"p"},"pokemons"),"\u3002\u4f60\u53ef\u4ee5\u628a\u8868\u683c\u7684\u5217\u6539\u4e3a\u4e0b\u9762\u7684\u6837\u5b50\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"number:\n    \u9009\u62e9 Number \u7c7b\u578b\n    \u9009\u62e9 Integer \u5b50\u7c7b\u578b\n    \u5173\u95ed\u5141\u8bb8\u8d1f\u6570\nname:\n    \u9009\u62e9 Single line text \u7c7b\u578b\ntypes:\n    \u9009\u62e9 Multiple select \u7c7b\u578b\n    \u518d\u9009\u9879\u91cc\u6dfb\u52a0 Electric \u548c Fire\n")),(0,l.kt)("p",null,"\u6211\u4eec\u80fd\u7528\u4e00\u5f20\u6570\u636e\u8868\u53bb\u4e3a\u6211\u4eec\u7684\u6570\u636e\u5efa\u6a21\u4e86 : )"),(0,l.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u9700\u8981\u77e5\u9053\u6211\u4eec\u7684\u7a0b\u5e8f\u600e\u6837\u548c Airtable \u8fdb\u884c\u4ea4\u4e92\u3002\u8ba9\u6211\u4eec\u53bb\u9605\u8bfb\u4e00\u4e0b API \u6587\u6863\u3002\u5728\u90a3\u91cc\u4f60\u5e94\u8be5\u80fd\u770b\u5230 Airtable\n\u73b0\u5728\u652f\u6301\u7684\u5ba2\u6237\u7aef\uff0c\u64b0\u5199\u672c\u6587\u65f6\u5e76\u6ca1\u6709\u63d0\u4f9b Rust \u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u5c1d\u8bd5\u4f7f\u7528\u5b83\u4eec\u7684 HTTP API\u3002\u6211\u4eec\u7684\u7a0b\u5e8f\u73b0\u5728\u9700\u8981\u4e00\u4e2a HTTP \u5ba2\u6237\u7aef\uff0c\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\n",(0,l.kt)("inlineCode",{parentName:"p"},"ureq"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nureq = { version = "2.2.0", features = ["json"] }\n')),(0,l.kt)("p",null,"\u5f00\u542f ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \u7279\u6027\u80fd\u591f\u5e2e\u6211\u4eec\u628a HTTP \u54cd\u5e94\u8f6c\u5316\u4e3a \u7ed3\u6784\u4f53 ( \u611f\u8c22 ",(0,l.kt)("inlineCode",{parentName:"p"},"serde")," )\u3002\u4f46\u662f\u518d\u6211\u4eec\u5b9e\u73b0\u5b58\u50a8\u5e93\u4e4b\u524d\uff0c\u6211\u4eec\u8981\u518d\u7a0b\u5e8f\u5f00\u59cb\u524d\u8ba9\u7528\u6237\u80fd\u591f\u9009\u62e9\u4f7f\u7528\nAirtable \u4f5c\u4e3a\u5b58\u50a8\u5e93\u3002"),(0,l.kt)("h3",{id:"\u6dfb\u52a0\u542f\u52a8\u5f00\u5173"},"\u6dfb\u52a0\u542f\u52a8\u5f00\u5173"),(0,l.kt)("p",null,"\u9996\u5148\u8ba9\u6211\u4eec\u770b\u4e00\u4e0b\u5982\u4f55\u4f7f\u7528 API\u3002\u8fd9\u91cc\u662f\u6587\u6863\u7ed9\u51fa\u7684\u4e00\u4e2a\u8bf7\u6c42\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'curl https://api.airtable.com/v0/<WORKSPACE_ID>/pokemons -H "Authorization: Bearer <API_KEY>"\n')),(0,l.kt)("p",null,"\u597d\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u7a0b\u5e8f\u9700\u8981\u4e24\u4e2a\u53c2\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"api_key")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"workspace_id"),"\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'fn main() {\n    let matches = App::new(crate_name!())\n        .version(crate_version!())\n        .author(crate_authors!())\n        .arg(Arg::with_name("cli").long("cli").help("Runs in CLI mode"))\n        .arg(Arg::with_name("sqlite").long("sqlite").value_name("PATH"))\n        .arg(\n            Arg::with_name("airtable")\n                .long("airtable")\n                .value_names(&["API_KEY", "WORKSPACE_ID"]),\n        )\n        .get_matches();\n}\n')),(0,l.kt)("p",null,"\u73b0\u5728\uff0c\u8fd0\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"pokedex --airtable <API_KEY> <WORKSPACE_ID>")," \u5c31\u80fd\u8bbe\u7f6e Airtable \u4f5c\u4e3a\u5b58\u50a8\u5e93\uff0c\u4f7f\u7528 cargo\nrun \u542f\u52a8\u7684\u8bdd\uff0c\u4f60\u53ef\u4ee5\u8f93\u5165 ",(0,l.kt)("inlineCode",{parentName:"p"},"cargo run -- --airtable <API_KEY> <WORKSPACE_ID>"),"\u3002\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"--help"),"\n\u68c0\u67e5\u662f\u5426\u751f\u6548\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"OPTIONS:\n        --airtable <API_KEY> <WORKSPACE_ID>\n")),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u66f4\u65b0 build_repo \u51fd\u6570\uff0c\u4f7f\u5b83\u80fd\u591f\u521b\u5efa\u4e00\u4e2a AirtableRepository\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'use clap::{..., Values};\nuse repositories::pokemon::{AirtableRepository, ...};\n\nfn main() {\n    ...\n    let repo = build_repo(matches.value_of("sqlite"), matches.values_of("airtable"));\n    ...\n}\n\nfn build_repo(sqlite_value: Option<&str>, airtable_values: Option<Values>) -> Arc<dyn Repository> {\n    if let Some(values) = airtable_values {\n        if let [api_key, workspace_id] = values.collect::<Vec<&str>>()[..] {\n            match AirtableRepository::try_new(api_key, workspace_id) {\n                Ok(repo) => return Arc::new(repo),\n                _ => panic!("Error while creating airtable repo"),\n            }\n        }\n    }\n    ...\n}\n')),(0,l.kt)("p",null,"\u6240\u4ee5\u73b0\u5728\u5982\u679c\u8bbe\u7f6e\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"--airtable")," \u6807\u5fd7\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 Airtable \u4f5c\u4e3a\u5b58\u50a8\u5e93\u3002\u5982\u679c\u8bbe\u7f6e\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"--sqlite")," \u6807\u5fd7\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\nSQLite\u3002\u5426\u5219\u6211\u4eec\u4f7f\u7528\u5185\u5b58\u5b58\u50a8\u5e93\u3002\u73b0\u5728\u8ba9\u6211\u4eec\u5b9e\u73b0\u5b58\u50a8\u5e93\uff1b\uff09"),(0,l.kt)("h3",{id:"\u5b9e\u73b0\u5b58\u50a8\u5e93"},"\u5b9e\u73b0\u5b58\u50a8\u5e93"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6ce8\u610f\uff1a\u7f51\u7ad9\u7684 API \u7ecf\u5e38\u53d1\u751f\u53d8\u52a8\uff0c\u5982\u679c\u4e0b\u9762\u7684\u6d4b\u8bd5\u5931\u8d25\u4e86\uff0c\u8bf7\u5230",(0,l.kt)("a",{parentName:"p",href:"https://airtable.com/api/meta"},"\u5b98\u7f51"),"\u67e5\u770b\u6700\u65b0\u7684 API\u3002")),(0,l.kt)("p",null,"\u6211\u5c06\u5728 ",(0,l.kt)("em",{parentName:"p"},"repositories/pokemon.rs")," \u4e2d\u6dfb\u52a0\n",(0,l.kt)("inlineCode",{parentName:"p"},"AirtableRepository"),"\u3002\u50cf\u4ee5\u524d\u4e00\u6837\uff0c\u60a8\u53ef\u4ee5\u5c06\u5176\u653e\u5728\u65b0\u7684\u6587\u4ef6\u4e2d\u3002\u8ba9\u6211\u4eec\u9996\u5148\u521b\u5efa\u7ed3\u6784\u4f53\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"pub struct AirtableRepository {\n    url: String,\n    auth_header: String,\n}\n")),(0,l.kt)("p",null,"\u6211\u4eec\u4f9d\u7136\u9700\u8981\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"try_new")," \u51fd\u6570\u3002\u6211\u4eec\u5c06\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"workspace_id")," \u521b\u5efa ",(0,l.kt)("inlineCode",{parentName:"p"},"url"),"\uff0c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"api_key")," \u521b\u5efa\n",(0,l.kt)("inlineCode",{parentName:"p"},"auth_header"),"\u3002\u63a5\u7740\u8fd8\u8981\u53d1\u51fa\u8bf7\u6c42\u4ee5\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u8fde\u63a5\u5230\u6211\u4eec\u7684\u6570\u636e\u5e93\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'impl AirtableRepository {\n    pub fn try_new(api_key: &str, workspace_id: &str) -> Result<Self, ()> {\n        let url = format!("https://api.airtable.com/v0/{}/pokemons", workspace_id);\n        let auth_header = format!("Bearer {}", api_key);\n\n        if let Err(_) = ureq::get(&url).set("Authorization", &auth_header).call() {\n            return Err(());\n        }\n\n        Ok(Self { url, auth_header })\n    }\n}\n')),(0,l.kt)("p",null,"\u63a5\u7740\u6211\u4eec\u8981\u4e3a\u5b83\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"p"},"Repository")," Trait\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"impl Repository for AirtableRepository {\n    fn insert(\n        &self,\n        number: PokemonNumber,\n        name: PokemonName,\n        types: PokemonTypes,\n    ) -> Result<Pokemon, InsertError> {\n        Err(InsertError::Unknown)\n    }\n\n    fn fetch_all(&self) -> Result<Vec<Pokemon>, FetchAllError> {\n        Err(FetchAllError::Unknown)\n    }\n\n    fn fetch_one(&self, number: PokemonNumber) -> Result<Pokemon, FetchOneError> {\n        Err(FetchOneError::Unknown)\n    }\n\n    fn delete(&self, number: PokemonNumber) -> Result<(), DeleteError> {\n        Err(DeleteError::Unknown)\n    }\n}\n")),(0,l.kt)("h4",{id:"\u8f85\u52a9\u51fd\u6570-1"},"\u8f85\u52a9\u51fd\u6570"),(0,l.kt)("p",null,"\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u4e60\u60ef\u4e86\uff0c\u8fd9\u6b21\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u80fd\u8ba9\u6211\u4eec\u4ece Airtable \u4e2d\u83b7\u53d6\u67d0\u4e00\u884c\u6216\u8005\u591a\u884c\u6570\u636e\u3002\u5b83\u7684\u53c2\u6570 ",(0,l.kt)("inlineCode",{parentName:"p"},"&self")," \u548c \u4e00\u4e2a\u53ef\u9009\u7684\n",(0,l.kt)("inlineCode",{parentName:"p"},"number"),"\u3002\u5b83\u7684\u8fd4\u56de\u503c\u53ef\u80fd\u662f\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \u6216\u8005\u662f\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"Error"),"\u3002\u5b83\u4f9d\u7136\u662f\u4e2a\u79c1\u6709\u7684\u65b9\u6cd5\uff0c\u518d ",(0,l.kt)("inlineCode",{parentName:"p"},"impl AirtableRepository"),"\n\u5757\u4e2d\u5b9e\u73b0\u3002\u6709\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"serde")," \u6211\u4eec\u80fd\u5c06 ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \u76f4\u63a5\u8f6c\u5316\u4e3a\u7ed3\u6784\u4f53\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"#[derive(Deserialize)]\nstruct AirtableJson {\n    records: Vec<AirtableRecord>,\n}\n\n#[derive(Deserialize)]\nstruct AirtableRecord {\n    id: String,\n    fields: AirtableFields,\n}\n\n#[derive(Deserialize)]\nstruct AirtableFields {\n    number: u16,\n    name: String,\n    types: Vec<String>,\n}\n")),(0,l.kt)("p",null,"\u63a5\u7740\u662f\u8f85\u52a9\u51fd\u6570\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn fetch_pokemon_rows(&self, number: Option<u16>) -> Result<AirtableJson, ()> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u7b2c\u4e00\u6b65\u8981\u6839\u636e\u7528\u6237\u4f20\u6765\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \u53bb\u521b\u5efa\u8bf7\u6c42\u94fe\u63a5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'let url = match number {\n    Some(number) => format!("{}?filterByFormula=number%3D{}", self.url, number),\n    None => format!("{}?sort%5B0%5D%5Bfield%5D=number", self.url),\n};\n')),(0,l.kt)("p",null,"\u8bf7\u6c42\u53c2\u6570\u770b\u8d77\u6765\u7a0d\u5fae\u6709\u4e00\u70b9\u5947\u602a\u3002\u7b2c\u4e00\u4e2a\u662f\u4f9d\u9760 ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \u8fdb\u884c\u8fc7\u6ee4\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6839\u636e ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \u5bf9\u6570\u636e\u6392\u5e8f\u3002\u73b0\u5728\u6211\u4eec\u80fd\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"ureq")," \u5c1d\u8bd5\u53d1\u51fa\u8bf7\u6c42\u4e86\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'let res = match ureq::get(&url)\n    .set("Authorization", &self.auth_header)\n    .call()\n{\n    Ok(res) => res,\n    _ => return Err(()),\n};\n')),(0,l.kt)("p",null,"\u6211\u4eec\u5728\u8fd4\u56de\u503c\u4e2d\u63a5\u6536\u5230\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \uff0c\u63a5\u7740\u6211\u4eec\u628a\u5b83\u8f6c\u6362\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"AirtableJson"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"match res.into_json::<AirtableJson>() {\n    Ok(json) => Ok(json),\n    _ => Err(()),\n}\n")),(0,l.kt)("p",null,"\u8f85\u52a9\u51fd\u6570\u5b8c\u6210\u4e86 : )"),(0,l.kt)("h4",{id:"\u67e5\u8be2\u4e00\u4e2a\u5b9d\u53ef\u68a6"},"\u67e5\u8be2\u4e00\u4e2a\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn fetch_one(&self, number: PokemonNumber) -> Result<Pokemon, FetchOneError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u8ba9\u4f7f\u7528\u6211\u4eec\u4e4b\u524d\u5b9e\u73b0\u7684\u51fd\u6570\u83b7\u53d6 ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let mut json = match self.fetch_pokemon_rows(Some(u16::from(number.clone()))) {\n    Ok(json) => json,\n    _ => return Err(FetchOneError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u73b0\u5728\uff0c\u5982\u679c ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \u8bb0\u5f55\u4e3a\u7a7a\uff0c\u5219\u610f\u5473\u7740\u6211\u4eec\u60f3\u8981\u7684\u5b9d\u53ef\u68a6\u4e0d\u5b58\u5728\u3002\u6240\u4ee5\u6211\u4eec\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u3002\u5426\u5219\uff0c\u6211\u4eec\u53d6\u7b2c\u4e00\u6761\u8bb0\u5f55\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nif json.records.is_empty() {\n    return Err(FetchOneError::NotFound);\n}\n\nlet record = json.records.remove(0);\n")),(0,l.kt)("p",null,"\u6700\u540e\uff0c\u6211\u4eec\u9700\u8981\u505a\u7684\u662f\u628a\u8fd9\u6761\u8bb0\u5f55\u8f6c\u6362\u4e3a\u5b9d\u53ef\u68a6\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nmatch (\n    PokemonNumber::try_from(record.fields.number),\n    PokemonName::try_from(record.fields.name),\n    PokemonTypes::try_from(record.fields.types),\n) {\n    (Ok(number), Ok(name), Ok(types)) => Ok(Pokemon::new(number, name, types)),\n    _ => Err(FetchOneError::Unknown),\n}\n")),(0,l.kt)("h4",{id:"\u83b7\u53d6\u6240\u6709\u5b9d\u53ef\u68a6"},"\u83b7\u53d6\u6240\u6709\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn fetch_all(&self) -> Result<Vec<Pokemon>, FetchAllError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u9996\u5148\uff0c\u4f9d\u7136\u662f\u4f7f\u7528\u8f85\u52a9\u51fd\u6570\u83b7\u53d6 ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let json = match self.fetch_pokemon_rows(None) {\n    Ok(json) => json,\n    _ => return Err(FetchAllError::Unknown),\n};\n")),(0,l.kt)("p",null,"\u8fd9\u4e00\u6b21\uff0c\u6211\u6ca1\u6709\u7ed9\u8f85\u52a9\u51fd\u6570\u63d0\u4f9b ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \u3002\u73b0\u5728\u8ba9\u6211\u4eec\u5c06\u8fd9\u4e9b\u8bb0\u5f55\u8f6c\u6362\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"Pokemons")," \u5e76\u8fd4\u56de\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"...\nlet mut pokemons = vec![];\n\nfor record in json.records.into_iter() {\n    match (\n        PokemonNumber::try_from(record.fields.number),\n        PokemonName::try_from(record.fields.name),\n        PokemonTypes::try_from(record.fields.types),\n    ) {\n        (Ok(number), Ok(name), Ok(types)) => {\n            pokemons.push(Pokemon::new(number, name, types))\n        }\n        _ => return Err(FetchAllError::Unknown),\n    }\n}\n\nOk(pokemons)\n")),(0,l.kt)("h4",{id:"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6-1"},"\u63d2\u5165\u4e00\u53ea\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn insert(\n    &self,\n    number: PokemonNumber,\n    name: PokemonName,\n    types: PokemonTypes,\n) -> Result<Pokemon, InsertError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"Airtable \u672c\u8eab\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"AirtableRecord")," \u7684\u4e3b\u952e\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6570\u636e\u7684\u552f\u4e00\u6027\u3002\u6216\u8bb8\u4f60\u5df2\u7ecf\u6ce8\u610f\u5230\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"AirtableRecord")," \u4e2d\u7684\n",(0,l.kt)("inlineCode",{parentName:"p"},"id")," \u5b57\u6bb5 :) \u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u80fd\u5c1d\u8bd5\u63d2\u5165\u8bb0\u5f55\u5e76\u7b49\u5f85\u8fd4\u56de\u9519\u8bef\uff0cAirtable\n\u53ea\u4f1a\u8d1f\u8d23\u5728\u8868\u4e2d\u6dfb\u52a0\u65b0\u884c\u3002\u7136\u540e\u6211\u4eec\u8981\u505a\u7684\u662f\u9996\u5148\u5c1d\u8bd5\u83b7\u53d6\u76f8\u540c\u7f16\u53f7\u7684\u5b9d\u53ef\u68a6\uff0c\u5982\u679c\u6b64\u8bf7\u6c42\u7684\u7ed3\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u9519\u8bef\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let json = match self.fetch_pokemon_rows(Some(u16::from(number.clone()))) {\n    Ok(json) => json,\n    _ => return Err(InsertError::Unknown),\n};\n\nif !json.records.is_empty() {\n    return Err(InsertError::Conflict);\n}\n")),(0,l.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u505a\u5230\u4e86\uff0c\u6211\u4eec\u80fd\u4fdd\u8bc1\u6ca1\u6709\u8bb0\u5f55\u5171\u4eab\u76f8\u540c\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u63d2\u5165\u6211\u4eec\u7684\u5b9d\u53ef\u68a6\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"json")," \u8bf7\u6c42\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'...\nlet body = ureq::json!({\n    "records": [{\n        "fields": {\n            "number": u16::from(number.clone()),\n            "name": String::from(name.clone()),\n            "types": Vec::<String>::from(types.clone()),\n        },\n    }],\n});\n')),(0,l.kt)("p",null,"\u6700\u540e\uff0c\u6211\u4eec\u8981\u5e26\u4e0a ",(0,l.kt)("inlineCode",{parentName:"p"},"body")," \u53d1\u51fa\u8bf7\u6c42\uff0c\u5e76\u5728\u6210\u529f\u65f6\u8fd4\u56de ",(0,l.kt)("inlineCode",{parentName:"p"},"Pokemon")," \uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'...\nif let Err(_) = ureq::post(&self.url)\n    .set("Authorization", &self.auth_header)\n    .send_json(body)\n{\n    return Err(InsertError::Unknown);\n}\n\nOk(Pokemon::new(number, name, types))\n')),(0,l.kt)("h4",{id:"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6-1"},"\u5220\u9664\u4e00\u53ea\u5b9d\u53ef\u68a6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"fn delete(&self, number: PokemonNumber) -> Result<(), DeleteError> {\n    // code will go here\n}\n")),(0,l.kt)("p",null,"\u548c\u63d2\u5165\u65f6\u4e00\u6837\uff0c\u6211\u4eec\u5fc5\u987b\u9996\u5148\u5c1d\u8bd5\u67e5\u8be2\u4e0e\u6211\u4eec\u4f20\u9012\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"number")," \u76f8\u540c\u7684\u8bb0\u5f55\u3002\u5f53\u8bb0\u5f55\u4e3a\u7a7a\u65f6\uff0c\u6211\u4eec\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u6211\u4eec\u4e0d\u80fd\u5220\u9664\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55 : )\n\u5426\u5219\uff0c\u6211\u4eec\u5c06\u62ff\u5230\u7b2c\u4e00\u6761\u8bb0\u5f55\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},"let mut json = match self.fetch_pokemon_rows(Some(u16::from(number.clone()))) {\n    Ok(json) => json,\n    _ => return Err(DeleteError::Unknown),\n};\n\nif json.records.is_empty() {\n    return Err(DeleteError::NotFound);\n}\n\nlet record = json.records.remove(0);\n")),(0,l.kt)("p",null,"\u73b0\u5728\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u8bb0\u5f55\u7684 id \u5b57\u6bb5\u6765\u5220\u9664\u8bb0\u5f55\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rs"},'...\nmatch ureq::delete(&format!("{}/{}", self.url, record.id))\n    .set("Authorization", &self.auth_header)\n    .call()\n{\n    Ok(_) => Ok(()),\n    _ => Err(DeleteError::Unknown),\n}\n')),(0,l.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,l.kt)("p",null,"\u4f60\u73b0\u5728\u5e94\u8be5\u80fd\u4f7f\u7528 \u5185\u5b58\uff0cAirtable\uff0c\u6216\u8005\u662f\u4e00\u4e2a SQLite \u6570\u636e\u5e93\u4f5c\u4e3a\u7a0b\u5e8f\u7684\u5b58\u50a8\u5e93\u3002\u800c\u4e14\u4f60\u80fd\u901a\u8fc7 CLI \u548c HTTP API \u4e24\u79cd\u65b9\u5f0f\u53bb\u64cd\u4f5c :D"),(0,l.kt)("p",null,"\u90a3\u662f\u672c\u7cfb\u5217\u7684\u6700\u540e\u4e00\u7bc7\u6587\u7ae0\u3002\u611f\u8c22\u60a8\u4e00\u76f4\u770b\u5230\u8fd9\u91cc :) \u6211\u5e0c\u671b\u8fd9\u4e9b\u6587\u7ae0\u5bf9\u60a8\u6709\u7528\u3002"),(0,l.kt)("p",null,"\u8be5\u4ee3\u7801\u4f9d\u7136\u5728 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/alexislozano/pokedex/tree/article-7"},"github")," \u4e0a\u67e5\u770b\u3002"))}u.isMDXComponent=!0}}]);