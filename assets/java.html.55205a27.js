import{d as n}from"./app.55d3d6ee.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u57FA\u7840\u77E5\u8BC6" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u77E5\u8BC6" aria-hidden="true">#</a> \u57FA\u7840\u77E5\u8BC6</h1><h2 id="\u8BED\u6CD5\u7EC6\u8282" tabindex="-1"><a class="header-anchor" href="#\u8BED\u6CD5\u7EC6\u8282" aria-hidden="true">#</a> \u8BED\u6CD5\u7EC6\u8282</h2><h3 id="for-\u548Cwhile-true-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#for-\u548Cwhile-true-\u7684\u533A\u522B" aria-hidden="true">#</a> for(;;)\u548Cwhile(true)\u7684\u533A\u522B</h3><p>\u867D\u7136\u4E24\u8005\u90FD\u80FD\u5B9E\u73B0\u6B7B\u5FAA\u73AF, \u4F46\u662F\u6E90\u7801\u4E2D\u90FD\u662F\u9009\u62E9for(;\u{1F609} \u539F\u56E0:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7F16\u8BD1\u524D              \u7F16\u8BD1\u540E
while (1)           mov eax,1
                    test eax,eax
                    je foo+23h
                    jmp foo+18h

\u7F16\u8BD1\u524D              \u7F16\u8BD1\u540E
for (;;)          jmp foo+23h \u3000\u3000
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u5BF9\u6BD4\u4E4B\u4E0B\uFF0Cfor (;;)\u6307\u4EE4\u5C11\uFF0C\u4E0D\u5360\u7528\u5BC4\u5B58\u5668\uFF0C\u800C\u4E14\u6CA1\u6709\u5224\u65AD\u8DF3\u8F6C\uFF0C\u6BD4while (1)\u597D\u3002 \u4E5F\u5C31\u662F\u8BF4\u4E24\u8005\u5728\u5728\u5B8F\u89C2\u4E0A\u5B8C\u5168\u4E00\u6837\u7684\u903B\u8F91\uFF0C\u4F46\u662F\u5E95\u5C42\u5B8C\u5168\u4E0D\u4E00\u6837\uFF0Cfor\u76F8\u5BF9\u4E8E\u6765\u8BF4\u66F4\u52A0\u7B80\u6D01\u660E\u4E86\u3002</p><h3 id="equal\u4E0E-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#equal\u4E0E-\u7684\u533A\u522B" aria-hidden="true">#</a> equal\u4E0E==\u7684\u533A\u522B</h3><ol><li>\u533A\u522B</li></ol><ul><li>==\u662F\u8FD0\u7B97\u7B26, equal\u662F\u65B9\u6CD5,</li><li>\u6BD4\u8F83\u57FA\u672C\u7C7B\u578B: \u53EA\u80FD\u7528==, \u4E0D\u80FD\u7528equal</li><li>\u6BD4\u8F83\u5305\u88C5\u7C7B\u578B: ==\u6BD4\u8F83\u7684\u662F\u5185\u5B58\u5730\u5740, \u800Cequal\u6BD4\u8F83\u7684\u662F\u503C</li><li>\u6BD4\u8F83\u5BF9\u8C61: ==\u548Cequal\u6BD4\u8F83\u7684\u90FD\u662F\u5185\u5B58\u5730\u5740\uFF0C\u56E0\u4E3Aequal\u6CA1\u6709\u88AB\u91CD\u5199\uFF0C\u6CA1\u6709\u88AB\u91CD\u5199\u7684equal\u90FD\u662Fobject\u7684equal\u65B9\u6CD5<div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>String\uFF08\u8FD8\u6709Date\uFF0CInteger\uFF09\u7C7B\u578B\u91CD\u5199\u4E86equals\u65B9\u6CD5\uFF0C\u4F7F\u5176\u6BD4\u8F83\u7684\u662F\u5B58\u50A8\u5BF9\u8C61\u7684\u5185\u5BB9\u662F\u5426\u76F8\u7B49\uFF0C\u800C\u4E0D\u662F\u5806\u5185\u5B58\u5730\u5740\u3002</p></div></li></ul><h3 id="class-this\u548Cthis\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#class-this\u548Cthis\u7684\u533A\u522B" aria-hidden="true">#</a> Class.this\u548Cthis\u7684\u533A\u522B</h3><p>\u5F53inner class\uFF08\u5185\u90E8\u7C7B\uFF09\u5FC5\u987A\u4F7F\u7528\u5230outer class\uFF08\u5916\u90E8\u7C7B\uFF09\u7684this instance\uFF08\u5B9E\u4F8B\uFF09\u65F6\uFF0C\u6216\u8005\u533F\u540D\u5185\u90E8\u7C7B\u8981\u4F7F\u7528\u5916\u90E8\u7C7B\u7684\u5B9E\u4F8B\u3002</p><h3 id="\u5F85\u7EED" tabindex="-1"><a class="header-anchor" href="#\u5F85\u7EED" aria-hidden="true">#</a> \u5F85\u7EED...</h3><h2 id="\u5305\u88C5\u7C7B" tabindex="-1"><a class="header-anchor" href="#\u5305\u88C5\u7C7B" aria-hidden="true">#</a> \u5305\u88C5\u7C7B</h2><h3 id="int-vs-integer" tabindex="-1"><a class="header-anchor" href="#int-vs-integer" aria-hidden="true">#</a> int VS Integer</h3><h5 id="\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u521D\u59CB\u5316" aria-hidden="true">#</a> \u521D\u59CB\u5316</h5><ul><li>1 int\u7C7B\u7684\u53D8\u91CF\u521D\u59CB\u4E3A0. Integer\u7684\u53D8\u91CF\u5219\u521D\u59CB\u5316\u4E3Anull.</li><li>2 Integer\u53D8\u91CF\u5FC5\u987B\u5B9E\u4F8B\u5316\u540E\u624D\u80FD\u4F7F\u7528\uFF0C int\u53D8\u91CF\u4E0D\u9700\u8981 .</li><li>3 \u5728Int\u662F\u5C06\u503C\u76F4\u63A5\u5B58\u50A8\uFF0C Integer\u5BF9\u8C61\u662F\u751F\u6210\u6307\u9488\u6307\u5411\u6B64\u5BF9\u8C61\u3002</li></ul><h5 id="\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83" aria-hidden="true">#</a> \u6BD4\u8F83</h5><ol><li>Integer ? int <code>&lt;br/&gt;</code> \u53EA\u8981\u4E24\u4E2A\u53D8\u91CF\u7684\u503C\u662F\u5411\u7B49\u7684\uFF0C\u5219\u7ED3\u679C\u4E3Atrue\u3002 \u56E0\u4E3A\u5305\u88C5\u7C7BInteger\u548C\u57FA\u672C\u6570\u636E\u7C7B\u578Bint\u6BD4\u8F83\u65F6\uFF0Cjava\u4F1A\u81EA\u52A8\u62C6\u5305\u88C5\u4E3Aint\uFF0C\u7136\u540E\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5B9E\u9645\u4E0A\u5C31\u53D8\u4E3A\u4E24\u4E2Aint\u53D8\u91CF\u7684\u6BD4\u8F83\u3002</li><li>new Integer() ? !new Integer()\uFF0C<code>&lt;br/&gt;</code> \u7ED3\u679C\u4E3Afalse ! new Integer()\u5F53\u53D8\u91CF\u503C\u5728-128~127\u4E4B\u95F4\u65F6\uFF0C\u975Enew\u751F\u6210\u7684Integer\u53D8\u91CF\u6307\u5411\u7684\u662Fjava\u5E38\u91CF\u6C60\u4E2Dcache\u6570\u7EC4\u4E2D\u5B58\u50A8\u7684\u6307\u5411\u4E86\u5806\u4E2D\u7684Integer\u5BF9\u8C61\uFF0C \u800Cnew Integer()\u751F\u6210\u7684\u53D8\u91CF\u6307\u5411\u5806\u4E2D\u65B0\u5EFA\u7684\u5BF9\u8C61\uFF0C\u4E24\u8005\u5728\u5185\u5B58\u4E2D\u7684\u5730\u5740\u4E0D\u540C\uFF1B</li><li>new Interger() ? new Integer() <code>&lt;br/&gt;</code> false</li><li>!new Integer() ? !new Integer() <code>&lt;br/&gt;</code> \u5982\u679C\u4E24\u4E2A\u503C\u76F8\u7B49,\u4E14\u5728\u533A\u95F4-128\u5230127\u4E4B\u95F4\u5219true \u53EA\u8981\u4E0D\u540C\u6216\u8005\u6709\u503C\u5728\u533A\u95F4\u5916\u5C31\u4E0D\u76F8\u540C</li></ol><h5 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h5><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Integer</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Integer</span> b <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">synchronized</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u6790\u6784\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u6790\u6784\u51FD\u6570" aria-hidden="true">#</a> &quot;\u6790\u6784\u51FD\u6570&quot;</h2><p>java\u63D0\u4F9Bfinalize()\u65B9\u6CD5\uFF0C\u5783\u573E\u56DE\u6536\u5668\u51C6\u5907\u91CA\u653E\u5185\u5B58\u7684\u65F6\u5019\uFF0C\u4F1A\u5148\u8C03\u7528finalize()\u3002</p><ul><li>\u7279\u5F81</li></ul><ol><li>\u5BF9\u8C61\u4E0D\u4E00\u5B9A\u4F1A\u88AB\u56DE\u6536\u3002</li><li>\u5783\u573E\u56DE\u6536\u4E0D\u662F\u6790\u6784\u51FD\u6570\u3002</li><li>\u5783\u573E\u56DE\u6536\u53EA\u4E0E\u5185\u5B58\u6709\u5173\u3002</li><li>\u5783\u573E\u56DE\u6536\u548Cfinalize()\u90FD\u662F\u9760\u4E0D\u4F4F\u7684\uFF0C\u53EA\u8981JVM\u8FD8\u6CA1\u6709\u5FEB\u5230\u8017\u5C3D\u5185\u5B58\u7684\u5730\u6B65\uFF0C\u5B83\u662F\u4E0D\u4F1A\u6D6A\u8D39\u65F6\u95F4\u8FDB\u884C\u5783\u573E\u56DE\u6536\u7684\u3002</li></ol><ul><li>\u5E94\u5BF9\u65B9\u6CD5</li></ul><ol><li>\u4E3B\u52A8\u8C03\u7528System.gc() \u65B9\u6CD5\u5F3A\u5236\u5783\u573E\u56DE\u6536\u5668\u6765\u91CA\u653E\u8FD9\u4E9B\u5BF9\u8C61\u7684\u5185\u5B58\u3002</li><li>Java 1.1 \u901A\u8FC7\u63D0\u4F9B\u4E00\u4E2ASystem.runFinalizersOnExit() \u65B9\u6CD5\uFF0C\u4E0D\u8C61System.gc() \u65B9\u6CD5\u90A3\u6837\uFF0CSystem.runFinalizersOnExit() \u65B9\u6CD5\u5E76\u4E0D\u7ACB\u5373\u8BD5\u56FE\u542F\u52A8\u5783\u573E\u56DE\u6536\u5668\u3002\u800C\u662F\u5F53\u5E94\u7528\u7A0B\u5E8F\u6216 Applet \u9000\u51FA\u65F6\uFF0C\u5B83\u8C03\u7528\u6BCF\u4E2A\u5BF9\u8C61\u7684finalize() \u65B9\u6CD5\u3002</li><li>\u7EE7\u627Ffinalize()</li></ol><h2 id="\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a> \u6CDB\u578B</h2><h3 id="t\u7684\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#t\u7684\u4F4D\u7F6E" aria-hidden="true">#</a> T\u7684\u4F4D\u7F6E</h3><ol><li>\u793A\u4F8B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">C</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u6CDB\u578B -------&gt;&quot;</span> <span class="token operator">+</span> <span class="token class-name">C</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>\u89E3\u91CA</li></ol><ul><li>\u7B2C\u4E00\u5904: \u9759\u6001\u65B9\u6CD5\u4E0D\u80FD\u76F4\u63A5\u5F15\u7528\u7C7B\u5B9A\u4E49\u5904\u7684\u6CDB\u578B, \u9700\u8981\u63D0\u524D\u5B9A\u4E49\u597D\u6CDB\u578B\u624D\u80FD\u4F7F\u7528</li><li>\u7B2C\u4E8C\u5904: \u6307\u5B9ACollection\u7684\u5143\u7D20\u7C7B\u578B\u4E3AT</li></ul><h3 id="\u8FB9\u754C\u901A\u914D\u7B26" tabindex="-1"><a class="header-anchor" href="#\u8FB9\u754C\u901A\u914D\u7B26" aria-hidden="true">#</a> \u8FB9\u754C\u901A\u914D\u7B26</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span>\u548C<span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">T</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol><li>\u5F15\u4F8B</li></ol><ul><li>\u8FD9\u79CD\u60C5\u51B5\u4E0B\u662F\u53EF\u884C\u7684</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">&gt;</span></span> plate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>\u8FD9\u79CD\u60C5\u51B5\u4E0B, \u867D\u7136\u82F9\u679C\u548C\u6C34\u679C\u6709\u7EE7\u627F\u5173\u7CFB, \u4F46\u76D8\u5B50\u95F4\u6CA1\u6709\u7EE7\u627F\u5173\u7CFB\u4F1A\u62A5\u9519</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">&gt;</span></span> plate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Apple</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>\u4E0A\u4E0B\u754C\u901A\u914D\u7B26</li></ol><ul><li>Apple -&gt; Fruit -&gt; Food</li><li><code>&lt;? extends T&gt;</code> \u53EF\u4EE5\u662F\u4EFB\u4F55T\u7684\u5B50\u7C7B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Food</span><span class="token punctuation">&gt;</span></span> plate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li><code>&lt;? super T&gt;</code> \u53EF\u4EE5\u662F\u4EFB\u4F55T\u7684\u7236\u7C7B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Apple</span><span class="token punctuation">&gt;</span></span> plate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Food</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>fruit<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li>\u4E0A\u4E0B\u754C\u901A\u914D\u7B26\u7684\u526F\u4F5C\u7528</li></ol><ul><li>\u4E0A\u754C<code>&lt;? extends T&gt;</code>\u4E0D\u80FD\u5F80\u91CC\u5B58\uFF0C\u53EA\u80FD\u5F80\u5916\u53D6</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Food</span><span class="token punctuation">&gt;</span></span> plate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Fruit</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Food</span> a <span class="token operator">=</span> plate<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// plate.setItem(food);  \u5931\u6548</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>\u4E0B\u754C&lt;? super T&gt;\u4E0D\u5F71\u54CD\u5F80\u91CC\u5B58\uFF0C\u4F46\u5F80\u5916\u53D6\u53EA\u80FD\u653E\u5728Object\u5BF9\u8C61\u91CC</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> <span class="token class-name">Apple</span><span class="token punctuation">&gt;</span></span> plate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Plate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Food</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>fruit<span class="token punctuation">)</span><span class="token punctuation">;</span>
plate2<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>apple<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Apple b = plate2.getItem(); \u5931\u6548</span>
<span class="token comment">// \u5143\u7D20\u7684\u7C7B\u578B\u4FE1\u606F\u5168\u90E8\u4E22\u5931\u3002</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u8865\u5145</p><ul><li>?\u4E0ET\u7684\u533A\u522B</li><li>\u5BF9\u7F16\u8BD1\u5668\u6765\u8BF4\u6240\u6709\u7684T\u90FD\u4EE3\u8868\u540C\u4E00\u79CD\u7C7B\u578B\u3002\u6BD4\u5982\u4E0B\u9762\u8FD9\u4E2A\u6CDB\u578B\u65B9\u6CD5\u91CC\uFF0C\u4E09\u4E2AT\u90FD\u6307\u4EE3\u540C\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8981\u4E48\u90FD\u662FString\uFF0C\u8981\u4E48\u90FD\u662FInteger\u3002</li><li>\u4F46\u901A\u914D\u7B26<code>&lt;?&gt;\u6CA1\u6709\u8FD9\u79CD\u7EA6\u675F\uFF0CPlate&lt;?&gt;</code>\u5355\u7EAF\u7684\u5C31\u8868\u793A\uFF1A\u76D8\u5B50\u91CC\u653E\u4E86\u4E00\u4E2A\u4E1C\u897F\uFF0C\u662F\u4EC0\u4E48\u6211\u4E0D\u77E5\u9053\u3002 \u6240\u4EE5\u9898\u4E3B\u95EE\u9898\u91CC\u7684\u9519\u8BEF\u5C31\u5728\u8FD9\u91CC\uFF0CPlate&lt;\uFF1F extends Fruit&gt;\u91CC\u4EC0\u4E48\u90FD\u653E\u4E0D\u8FDB\u53BB\u3002</li></ul></div><h2 id="\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u89E3" aria-hidden="true">#</a> \u6CE8\u89E3</h2><ol><li>\u6CE8\u89E3\u4F1A\u5F71\u54CD\u7A0B\u5E8F\u7684\u7F16\u8BD1\u548C\u8FD0\u884C</li><li>\u6CE8\u89E3\u672C\u8EAB\u53EA\u662F\u4E00\u4E2A\u6807\u6CE8\uFF0C\u672C\u8EAB\u4E0D\u7528\u5305\u542B\u903B\u8F91\u5904\u7406\u5185\u5BB9</li></ol><h3 id="\u4F5C\u7528\u8303\u56F4" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u8303\u56F4" aria-hidden="true">#</a> \u4F5C\u7528\u8303\u56F4</h3><ul><li>RUNTIME\uFF1A\u7A0B\u5E8F\u8FD0\u884C\u65F6\u8D77\u4F5C\u7528\uFF0C\u4F8B\u5982\uFF1A<code>@WebServlet</code></li><li>SOURCE\uFF1A\u7F16\u8BD1\u65F6\u671F\u4F5C\u7528\uFF0C\u4F8B\u5982 <code>@Override</code></li></ul><h3 id="target" tabindex="-1"><a class="header-anchor" href="#target" aria-hidden="true">#</a> @Target</h3><p>\u6307\u5B9A\u6CE8\u89E3\u9488\u5BF9\u7684\u76EE\u6807</p><ul><li>ElementType.Type \u7C7B\u3001\u65B9\u6CD5</li><li>ElementType.Field \u6210\u5458\u53D8\u91CF</li><li>ElementType.METHOD \u6210\u5458\u65B9\u6CD5</li><li>ElementType.PARAMETER \u65B9\u6CD5\u53C2\u6570</li><li>ElementType.CONSTRUCTOR \u6784\u9020\u5668</li><li>ElementType.PACKAGE \u5305</li><li>ElementType.ANNOTATION_TYPE \u6CE8\u89E3</li></ul><h3 id="retention" tabindex="-1"><a class="header-anchor" href="#retention" aria-hidden="true">#</a> @Retention</h3><p>\u6307\u5B9A\u6CE8\u89E3\u7684\u4FDD\u7559\u57DF</p><ul><li>RetentionPolicy.SOURCE \u6E90\u4EE3\u7801\u7EA7\u522B\uFF0C\u7531\u7F16\u8BD1\u5668\u5904\u7406\uFF0C\u5904\u7406\u540E\u4E0D\u518D\u4FDD\u7559</li><li>RetentionPolicy.CLASS \u6CE8\u89E3\u4FE1\u606F\u4FDD\u7559\u5230class\u6587\u4EF6\u4E2D</li><li>RetentionPolicy.RUNTION \u7531jvm\u8BFB\u53D6\uFF0C\u8FD0\u884C\u65F6\u4F7F\u7528</li></ul><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><ol><li>\u6CE8\u89E3\u7C7B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">InitAnno</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li>\u88AB\u6CE8\u89E3\u7C7B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@InitAnno</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u5165\u4E86bar\u65B9\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="3"><li>Main</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> clazz <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;Foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Annotation</span> annotation <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getAnnotation</span><span class="token punctuation">(</span><span class="token class-name">InitAnno</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7C7B\u524D\u6CA1\u6709InitAnno\u6CE8\u89E3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> method <span class="token operator">:</span> methods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> isInitAnno <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span><span class="token class-name">InitAnno</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isInitAnno<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="\u591A\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EBF\u7A0B" aria-hidden="true">#</a> \u591A\u7EBF\u7A0B</h2><h3 id="\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0" aria-hidden="true">#</a> \u5B9E\u73B0</h3><ol><li>\u7EE7\u627FThread\u7C7B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MyThread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>\u5B9E\u73B0Runnable\u63A5\u53E3</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">MyRunnable</span> runnable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>runnable<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;MyRunnable1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>Runnable\u76F8\u6BD4Thread\u8026\u5408\u4F4E\uFF0Clambda\u8868\u8FBE\u5F0F\u66F4\u4F4E</p></div><ol start="3"><li>\u5B9E\u73B0Callable\u63A5\u53E3</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> callable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDB\u53BB\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> featureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>callable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>featureTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>featureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>\u6CE8\u610F\uFF01 Callable\u4E0EThread\u6CA1\u6709\u76F4\u63A5\u5173\u7CFB\uFF0C\u9700\u8981\u95F4\u63A5\u5B9E\u73B0</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">Runnable</span><span class="token punctuation">,</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Sets this Future to the result of its computation
     * unless it has been cancelled.
     */</span>
    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FutureTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">RunnableFuture</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Callable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> callable<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-mermaid ext-mermaid line-numbers-mode"><pre class="language-mermaid"><code><span class="token keyword">graph</span> LR
A<span class="token text string">[Callable]</span> <span class="token arrow operator">--&gt;</span>B<span class="token text string">(FutureTask)</span> <span class="token arrow operator">--&gt;</span> C<span class="token text string">(RunnableFuture)</span> <span class="token arrow operator">--&gt;</span> D<span class="token text string">(Runnable)</span> <span class="token arrow operator">--&gt;</span> E<span class="token text string">(Thread)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> \u5E38\u7528\u65B9\u6CD5</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token number">1.</span> \u4F11\u7720
thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">2.</span> \u5408\u5E76
thread<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token number">3.</span> \u793C\u8BA9
<span class="token keyword">yield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u7EBF\u7A0B\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u540C\u6B65" aria-hidden="true">#</a> \u7EBF\u7A0B\u540C\u6B65</h3><p>\u6BCF\u4E2Ajava\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A\u5185\u7F6E\u9501, \u5185\u7F6E\u9501\u4F1A\u4FDD\u62A4\u4F7F\u7528synchronized\u5173\u952E\u5B57\u4FEE\u9970\u7684\u65B9\u6CD5 \u8981\u8C03\u7528\u8BE5\u65B9\u6CD5\u5FC5\u987B\u5148\u83B7\u53D6\u9501, \u5426\u5219\u5C31\u5904\u4E8E\u5835\u585E\u72B6\u6001</p><ul><li>\u9759\u6001\u53D8\u91CF</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SameRunnable</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token operator">++</span>num<span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7B2C&quot;</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u4F4D\u8BBF\u5BA2\u662F\u7B2C&quot;</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">&quot;\u4E2A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>\u9759\u6001\u4EE3\u7801\u5757, \u9501\u5B9A\u7C7B synchronized\u5173\u952E\u5B57\u4E5F\u80FD\u4FEE\u9970\u4EE3\u7801\u5757, \u4EE5\u4E0B\u4F8B\u5B50\u4E5F\u80FD\u6709\u76F8\u540C\u7684\u6548\u679C</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Test</span> test <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    test<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token class-name">Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">// \u9501\u5B9A\u7C7B(\u975E\u9759\u6001\u53EFthis), \u4E0D\u80FD\u662F\u7C7B\u7684\u5B9E\u4F8B</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ul><li>\u9501\u5B9A\u5B9E\u4F8B\u65B9\u6CD5<div class="custom-container danger"><p class="custom-container-title">\u6CE8\u610F</p><p>synchronized\u5173\u952E\u5B57\u53EA\u662F\u4FEE\u9970\u5171\u4EAB\u7684\u8D44\u6E90, \u4E0B\u9762\u7684\u4F8B\u5B50\u4E0D\u80FD\u5F97\u5230\u60F3\u8981\u7684\u6548\u679C</p></div></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u7ED3\u675F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u7EBF\u7A0B\u5B89\u5168\u7684\u5355\u4F8B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u5B89\u5168\u7684\u5355\u4F8B\u6A21\u5F0F" aria-hidden="true">#</a> \u7EBF\u7A0B\u5B89\u5168\u7684\u5355\u4F8B\u6A21\u5F0F</h3><ul><li>\u9501\u5B9A\u7C7B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">volatile</span> <span class="token keyword">class</span> <span class="token class-name">Runner</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Runner</span> runner<span class="token punctuation">;</span>
    <span class="token comment">// \u8BB0\u5F97\u52A0\u5173\u952E\u5B57, \u9632\u6B62\u591A\u4E2A\u7EBF\u7A0B\u8BBF\u95EE\u65F6\u8FD8\u6CA1\u521B\u5EFA\u8FC7\u5BF9\u8C61</span>
    <span class="token comment">// 1. \u{1F512}\u6574\u4E2A\u65B9\u6CD5</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">static</span> <span class="token class-name">Runner</span> <span class="token function">getRunner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>runner <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            runner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> runner<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53EA\u9501\u4EE3\u7801\u5757, \u4E0D\u5F71\u54CD\u8BE5\u65B9\u6CD5\u5185\u7684\u5176\u4ED6\u4E1A\u52A1</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Runner</span> <span class="token function">getRunner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token class-name">Runner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>runner <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                runner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> runner<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u5176\u4ED6\u9501\u5B9A\u5BF9\u8C61</p><ol><li>synchronized(runner): n\u4E2A\u7A7A\u6307\u9488\u5F02\u5E38, \u4E0D\u80FD\u9501\u7A7A\u5BF9\u8C61</li><li>Integer i = Integer.parseInt(&quot;1&quot;); synchronized(i): \u4E5F\u53EF\u4EE5</li><li>Integer a = Integer.parseInt(&quot;1&quot;); Integer b = Integer.parseInt(&quot;1&quot;); synchronized(i) \u5F00\u542F\u4E24\u4E2A\u7EBF\u7A0B, \u82E5a,b\u503C(\u8BE6\u60C5\u89C1Integer\u5305\u88C5\u7C7B)\u76F8\u540C, \u5219\u7EBF\u7A0B\u5B89\u5168, \u5426\u5219\u4E0D\u5B89\u5168</li></ol></div><h3 id="voletile\u5173\u952E\u5B57" tabindex="-1"><a class="header-anchor" href="#voletile\u5173\u952E\u5B57" aria-hidden="true">#</a> voletile\u5173\u952E\u5B57</h3><ol><li>\u5F15\u4F8B</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> exam <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> finalNum <span class="token operator">=</span> num<span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>finalNum <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li>\u5728\u8BE5\u4F8B\u5B50\u4E2D, \u5FAA\u73AF\u4E0D\u4F1A\u505C\u6B62 new Thread \u4E0E main\u540C\u65F6\u64CD\u4F5Cnum, \u4ED6\u4EEC\u5206\u522B\u4ECE\u4E3B\u5185\u5B58\u590D\u5236\u5230\u5DE5\u4F5C\u5185\u5B58, \u5BF9\u5404\u81EA\u7684\u5DE5\u4F5C\u5185\u5B58\u4E2D\u7684\u6570\u636E\u8FDB\u884C\u64CD\u4F5C, main\u7EBF\u7A0B\u5BF9num+1, \u540C\u6B65\u5230\u4E3B\u7EBF\u7A0B, \u4F46new Thread\u7684\u4EFB\u52A1\u672A\u505C\u6B62, \u6CA1\u6709\u4E0E\u4E3B\u5185\u5B58\u540C\u6B65, \u5FAA\u73AF\u4E0D\u4F1A\u7EC8\u6B62</li><li>\u82E5\u5FAA\u73AF\u4E2D\u52A0\u4E00\u4E2A\u6267\u884C\u8BED\u53E5, \u5FAA\u73AF\u4F1A\u7EC8\u6B62, \u5DE5\u4F5C\u5185\u5B58\u4F1A\u5373\u4F7F\u4E0E\u4E3B\u5185\u5B58\u8FDB\u884C\u540C\u6B65</li></ul><p>\u5F53\u5404\u4E2A\u7EBF\u7A0B\u64CD\u4F5C\u65F6, \u6570\u636E\u6CA1\u6709\u8FDB\u884C\u540C\u6B65\u5230\u4E3B\u5185\u5B58, \u4EA7\u751F\u9519\u8BEF voletile\u5173\u952E\u5B57\u4F7F\u591A\u4E2A\u7EBF\u7A0B\u76F4\u63A5\u64CD\u4F5C\u4E3B\u5185\u5B58, \u4E0D\u5728\u7ECF\u8FC7\u5DE5\u4F5C\u5185\u5B58</p><h3 id="\u5F85\u7EED-1" tabindex="-1"><a class="header-anchor" href="#\u5F85\u7EED-1" aria-hidden="true">#</a> \u5F85\u7EED...</h3><h2 id="juc" tabindex="-1"><a class="header-anchor" href="#juc" aria-hidden="true">#</a> JUC</h2><h3 id="\u7279\u5F81" tabindex="-1"><a class="header-anchor" href="#\u7279\u5F81" aria-hidden="true">#</a> \u7279\u5F81</h3><p>synchronized \u4E0E Lock \u5BF9\u6BD4</p><ol><li>synchronized\u81EA\u52A8\u4E0A\u9501\u89E3\u9501\uFF0C Lock\u624B\u52A8\u4E0A\u9501\u89E3\u9501</li><li>synchronized\u65E0\u6CD5\u5224\u65AD\u662F\u5426\u83B7\u53D6\u5230\u9501\uFF0C Lock\u53EF\u4EE5</li><li>synchronized\u62FF\u4E0D\u5230\u9501\u4F1A\u4E00\u76F4\u7B49\u5F85\uFF0C Lock\u4E0D\u4F1A</li><li>synchronized\u662F\u5173\u952E\u5B57\uFF0Cjvm\u5B9E\u73B0\uFF0C Lock\u662F\u63A5\u53E3\uFF0Cjdk\u5B9E\u73B0</li><li>synchronized\u662F\u975E\u516C\u5E73\u9501\uFF0CLock\u81EA\u7531\u8BBE\u7F6E</li></ol><blockquote><p>\u516C\u5E73\u9501: \u591A\u4E2A\u7EBF\u7A0B\u6392\u961F\u52A0\u9501<code>&lt;br/&gt;</code> \u975E\u516C\u5E73\u9501: \u4E0D\u5224\u65AD\u662F\u5426\u6709\u5176\u4ED6\u7B49\u5F85\u7EBF\u7A0B\uFF0C\u76F4\u63A5\u5360\u7528</p></blockquote><h3 id="\u57FA\u672C\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u64CD\u4F5C" aria-hidden="true">#</a> \u57FA\u672C\u64CD\u4F5C</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Lock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u6B7B\u9501" tabindex="-1"><a class="header-anchor" href="#\u6B7B\u9501" aria-hidden="true">#</a> \u6B7B\u9501</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">/*
* num = 1\u7684\u4EBA\u62FF\u5230chopsticks1, \u7B49\u5F85chopsticks2
* num = 2\u7684\u4EBA\u62FF\u5230chopsticks2, \u7B49\u5F85chopsticks1
* */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chopsticks1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chopsticks2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1\u5403\u5B8C\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chopsticks2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>chopsticks1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;2\u5403\u5B8C\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="\u751F\u4EA7\u8005\u6D88\u8D39\u8005" tabindex="-1"><a class="header-anchor" href="#\u751F\u4EA7\u8005\u6D88\u8D39\u8005" aria-hidden="true">#</a> \u751F\u4EA7\u8005\u6D88\u8D39\u8005</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 1. synchronize</span>
<span class="token keyword">class</span> <span class="token class-name">Container</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        num <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u751F\u4EA7\u4E861\u4E2A,\u8FD8\u6709&quot;</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">&quot;\u4E2A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        num <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;\u8D2D\u4E70\u4E861\u4E2A,\u8FD8\u6709&quot;</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">&quot;\u4E2A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 2. Lock \u8981\u4EE5condition.await \u548C condition.singal\u4EE3\u66FF wait \u548C notify</span>
<span class="token keyword">class</span> <span class="token class-name">Container2</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Condition</span> condition <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            condition<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        num <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u751F\u4EA7\u4E861\u4E2A,\u8FD8\u6709&quot;</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">&quot;\u4E2A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        condition<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="trylock" tabindex="-1"><a class="header-anchor" href="#trylock" aria-hidden="true">#</a> tryLock</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">TimeLock</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;3\u79D2\u5185\u62FF\u5230\u4E86\u9501&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;3\u79D2\u5185\u6CA1\u62FF\u5230\u9501&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>lock<span class="token punctuation">.</span><span class="token function">isHeldByCurrentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u53EA\u80FD\u7531\u4E0A\u9501\u8005\u53BB\u89E3\u9501</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="\u540C\u65F6\u8BFB\u5199" tabindex="-1"><a class="header-anchor" href="#\u540C\u65F6\u8BFB\u5199" aria-hidden="true">#</a> \u540C\u65F6\u8BFB\u5199</h3><ol><li>\u5BF9ArrayList\u8BFB\u5199\u64CD\u4F5C\u540C\u65F6\u5B58\u5728\u4F1A\u629B\u51FA\u5F02\u5E38</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ReadAndWrite</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//List&lt;String&gt; list = new Vector&lt;&gt;();</span>
        <span class="token comment">// List&lt;String&gt; list = Collections.synchronizedList(new ArrayList&lt;&gt;());</span>
        <span class="token comment">// List&lt;String&gt; list = new CopyOnWriteArrayList();</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><ol start="2"><li>\u539F\u56E0 ArrayList\u4E0D\u662F\u7EBF\u7A0B\u5B89\u5168\u7684</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">ensureCapacityInternal</span><span class="token punctuation">(</span>size <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Increments modCount!!</span>
    elementData<span class="token punctuation">[</span>size<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>\u89E3\u51B3\u65B9\u6CD5</li></ol><ul><li>\u66F4\u6362\u4E3AVector</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">ensureCapacityHelper</span><span class="token punctuation">(</span>elementCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    elementData<span class="token punctuation">[</span>elementCount<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><p>\u66F4\u6362\u4E3ACollections.synchronizedList()</p></li><li><p>JUC: CopyOnWriteList</p></li></ul><blockquote><p>CopyOnWrite\u5B9E\u73B0\u4E86\u8BFB\u5199\u5206\u79BB\uFF0C\u5F53\u6211\u4EEC\u5F80\u4E00\u4E2A\u5BB9\u5668\u6DFB\u52A0\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u4E0D\u662F\u76F4\u63A5\u7ED9\u5BB9\u5668\u6DFB\u52A0\uFF0C\u800C\u662F\u5148\u5C06\u5F53\u524D\u5BB9\u5668\u590D\u5236\u4E00 \u4EFD\uFF0C\u5411\u65B0\u7684\u5BB9\u5668\u4E2D\u6DFB\u52A0\u6570\u636E\uFF0C\u6DFB\u52A0\u5B8C\u6210\u4E4B\u540E\uFF0C\u518D\u5C06\u539F\u5BB9\u5668\u7684\u5F15\u7528\u6307\u5411\u65B0\u7684\u5BB9\u5668\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">ReentrantLock</span> lock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lock<span class="token punctuation">;</span>
    lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> elements <span class="token operator">=</span> <span class="token function">getArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newElements <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>elements<span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        newElements<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        <span class="token function">setArray</span><span class="token punctuation">(</span>newElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="\u8BA1\u6570\u5668" tabindex="-1"><a class="header-anchor" href="#\u8BA1\u6570\u5668" aria-hidden="true">#</a> \u8BA1\u6570\u5668</h3><ul><li>\u51CF\u6CD5\u8BA1\u6570\u5668countDownLatch \u53EF\u4EE5\u786E\u4FDD\u67D0\u4E2A\u7EBF\u7A0B\u4F18\u5148\u6267\u884C, \u5F53\u8BA1\u6570\u5668\u6E05\u96F6\u5728\u5524\u9192\u5176\u4ED6\u7EBF\u7A0B</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CountDown</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CountDownLatch</span> countDownLatch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                countDownLatch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        countDownLatch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u5FC5\u987B\u5524\u9192, \u4E14\u8BA1\u6570\u5668\u8981\u6E05\u96F6</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>new CountDownLatch(80), countDownLatch.countDown(), countDownLatch.await() \u5FC5\u987B\u914D\u5408\u4F7F\u7528, \u53EA\u8981\u8BA1\u6570\u5668\u6CA1\u6709\u6E05\u96F6, \u8BA1\u6570\u5668\u4E0D\u4F1A\u505C\u6B62, \u5176\u4ED6\u7EBF\u7A0B\u4E5F\u4E0D\u80FD\u5524\u9192</p></div><ul><li>\u52A0\u6CD5\u8BA1\u6570\u5668 \u8BD5\u56FE\u5524\u9192\u5F53\u524D\u7EBF\u7A0B, \u5F53\u52A0\u5230\u4E00\u5B9A\u6570\u91CF\u6210\u529F\u5524\u9192, \u4E4B\u540E\u6E05\u96F6, \u518D\u6B21\u7D2F\u52A0\u5FAA\u73AF</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6784\u9020\u5668</span>
<span class="token keyword">public</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token keyword">int</span> parties<span class="token punctuation">,</span> <span class="token class-name">Runnable</span> barrierAction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parties <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>parties <span class="token operator">=</span> parties<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> parties<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>barrierCommand <span class="token operator">=</span> barrierAction<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Test</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CyclicBarrier_</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">CyclicBarrier</span> cyclicBarrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u653E\u884C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                cyclicBarrier<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><ul><li>\u8BA1\u6570\u7EBF\u7A0B\u9650\u6D41 \u9650\u5236\u540C\u65F6\u8FDB\u5165\u7684\u7EBF\u7A0B\u6570</li></ul><ol><li>\u521D\u59CB\u5316</li><li>\u83B7\u5F97\u8BB8\u53EF</li><li>\u91CA\u653E</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Semaphore</span> semaphore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// \u9650\u5236\u6700\u591A5\u4EBA</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">15</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                semaphore<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u8FDB\u53BB\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\u51FA\u53BB\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                semaphore<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="\u8BFB\u5199\u9501" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u5199\u9501" aria-hidden="true">#</a> \u8BFB\u5199\u9501</h3><p>\u8BFB\u5199\u9501\u4E5F\u662F\u4E3A\u4E86\u5B9E\u73B0\u7EBF\u7A0B\u540C\u6B65, \u53EA\u4E0D\u8FC7\u7C92\u5EA6\u66F4\u7EC6, \u53EF\u4EE5\u4E3A\u8BFB\u548C\u5199\u8BBE\u7F6E\u4E0D\u540C\u7684\u9501</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Cache</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">ReadWriteLock</span> readWriteLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantReadWriteLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        readWriteLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB\u5199\u5165 ID: &quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5199\u5165\u5B8C\u6210 ID: &quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        readWriteLock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        readWriteLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F00\u59CB\u8BFB\u53D6 ID: &quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> a <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8BFB\u53D6\u5B8C\u6210 ID: &quot;</span> <span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        readWriteLock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> a<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u8865\u5145</p><p>\u5199\u5165\u9501\u4E5F\u53EB\u72EC\u5360\u9501\uFF0C\u53EA\u80FD\u88AB1\u4E2A\u7EBF\u7A0B\u5360\u7528\uFF0C\u8BFB\u53D6\u9501\u4E5F\u53EB\u5171\u4EAB\u9501\uFF0C\u591A\u4E2A\u7EBF\u7A0B\u53EF\u4EE5\u540C\u65F6\u5360\u7528\u3002</p></div><h3 id="\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> \u7EBF\u7A0B\u6C60</h3><ol><li>\u57FA\u672C\u4F7F\u7528</li></ol><p>\u9884\u5148\u521B\u5EFA\u597D\u4E00\u5B9A\u6570\u91CF\u7684\u7EBF\u7A0B\u5BF9\u8C61\uFF0C\u5B58\u5165\u7F13\u51B2\u6C60\u4E2D\uFF0C\u9700\u8981\u7528\u7684\u65F6\u5019\u76F4\u63A5\u4ECE\u7F13\u51B2\u6C60\u4E2D\u53D6\u51FA\uFF0C\u7528\u5B8C\u4E4B\u540E\u4E0D\u8981\u9500\u6BC1\uFF0C\u8FD8\u56DE\u5230\u7F13\u51B2\u6C60\u4E2D\uFF0C\u4E3A\u4E86\u63D0\u9AD8\u8D44\u6E90\u7684\u5229\u7528\u7387\u3002 \u4F18\u52BF:</p><ul><li>\u63D0\u9AD8\u7EBF\u7A0B\u7684\u5229\u7528\u7387</li><li>\u63D0\u9AD8\u54CD\u5E94\u901F\u5EA6</li><li>\u4FBF\u4E8E\u7EDF\u4E00\u7BA1\u7406\u7EBF\u7A0B\u5BF9\u8C61</li><li>\u53EF\u4EE5\u63A7\u5236\u6700\u5927\u7684\u5E76\u53D1\u6570</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPool_</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5355\u4F8B</span>
        <span class="token comment">//ExecutorService executorService = Executors.newSingleThreadExecutor();</span>
        <span class="token comment">// \u6307\u5B9A\u7EBF\u7A0B\u6570\u91CF</span>
        <span class="token comment">//ExecutorService executorService = Executors.newFixedThreadPool(5);</span>
        <span class="token comment">// \u7F13\u51B2\u7EBF\u7A0B\u6C60</span>
        <span class="token class-name">ExecutorService</span> executorService <span class="token operator">=</span> <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token keyword">int</span> temp <span class="token operator">=</span> i<span class="token punctuation">;</span>
            executorService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        executorService<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><ol start="2"><li>\u6784\u9020\u51FD\u6570</li></ol><p>\u4E09\u4E2A\u5E38\u7528\u7EBF\u7A0B\u6C60\u90FD return new ThreadPoolExecutor(); ThreadPoolExecutor\u7684\u6784\u9020\u51FD\u6570\u5982\u4E0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>  <span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                            <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                            <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                            <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">,</span>
                            <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> workQueue<span class="token punctuation">,</span>
                            <span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span>
                            <span class="token class-name">RejectedExecutionHandler</span> handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>corePoolSize: \u6838\u5FC3\u6C60\u6570\u91CF</li><li>maximumPoolSize: \u7EBF\u7A0B\u6C60\u5BB9\u91CF\u4E0A\u9650, \u4EFB\u52A1\u91CF\u589E\u5927\u65F6, \u7EBF\u7A0B\u6C60\u4E3B\u52A8\u6269\u5BB9</li><li>keepAliveTime: \u7EBF\u7A0B\u5BF9\u8C61\u5B58\u6D3B\u65F6\u95F4</li><li>unit: \u7EBF\u7A0B\u5BF9\u8C61\u5B58\u6D3B\u65F6\u95F4\u5355\u4F4D</li><li>workQueue: \u7EBF\u7A0B\u961F\u5217(\u65B0\u7684\u4EFB\u52A1\u5728\u961F\u5217\u4E2D\u7B49\u5019\u83B7\u53D6\u7EBF\u7A0B\u5BF9\u8C61)</li><li>threadFactory: \u7EBF\u7A0B\u5DE5\u5382\u521B\u5EFA\u7EBF\u7A0B\u5BF9\u8C61</li><li>handler: \u62D2\u7EDD\u7B56\u7565</li></ul><ol start="3"><li>\u62D2\u7EDD\u7B56\u7565</li></ol><p>RejectedExecutionHandler\u662F\u4E00\u4E2A\u63A5\u53E3, \u5747\u5728ThreadPoolExecutor\u4E2D\u5B9E\u73B0</p><ul><li>AbortPolicyz:\u76F4\u63A5\u629B\u51FA\u5F02\u5E38</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * A handler for rejected tasks that throws a
    * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">RejectedExecutionException</span></span></span><span class="token punctuation">}</span>.
    */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">AbortPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>DiscardPolicy: \u76F4\u63A5\u62D2\u7EDD</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * A handler for rejected tasks that silently discards the
    * rejected task.
    */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DiscardPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>DiscardOldestPolicy: \u5C1D\u8BD5\u4E0E\u7B49\u5F85\u961F\u5217\u4E2D\u6700\u5F00\u59CB\u7684\u4EFB\u52A1\u4E89\u593A,\u4E0D\u629B\u51FA\u5F02\u5E38</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * A handler for rejected tasks that discards the oldest unhandled
     * request and then retries <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">execute</span></span><span class="token punctuation">}</span>, unless the executor
     * is shut down, in which case the task is discarded.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DiscardOldestPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>CallerRunsPolicy \u7531\u53D1\u8D77\u8BF7\u6C42\u7EBF\u7A0B\u5904\u7406</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * A handler for rejected tasks that runs the rejected task
    * directly in the calling thread of the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">execute</span></span><span class="token punctuation">}</span> method,
    * unless the executor has been shut down, in which case the task
    * is discarded.
    */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">CallerRunsPolicy</span> <span class="token keyword">implements</span> <span class="token class-name">RejectedExecutionHandler</span> <span class="token punctuation">{</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ol start="4"><li>\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>executorService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
        <span class="token number">4</span><span class="token punctuation">,</span>
        <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token number">2L</span><span class="token punctuation">,</span>
        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>4\u79CDworkQueue \u5835\u585E\u961F\u5217,\u7528\u6765\u5B58\u50A8\u7B49\u5F85\u6267\u884C\u7684\u4EFB\u52A1</p><ul><li>ArrayBlockingQueue: \u57FA\u4E8E\u6570\u7EC4\u7684\u5148\u8FDB\u5148\u51FA\u961F\u5217\uFF0C\u521B\u5EFA\u65F6\u5FC5\u987B\u6307\u5B9A\u5927\u5C0F\u3002</li><li>LinkedBlockingQueue: \u57FA\u4E8E\u94FE\u8868\u7684\u5148\u8FDB\u5148\u51FA\u961F\u5217\uFF0C\u521B\u5EFA\u65F6\u53EF\u4EE5\u4E0D\u6307\u5B9A\u5927\u5C0F\uFF0C\u9ED8\u8BA4\u503C\u662FInteger.MAX VALUE\u3002 \u6700\u5927\u503C\u3002</li><li>SynchronousQueue: \u5B83\u4E0D\u4F1A\u4FDD\u6301\u63D0\u4EA4\u7684\u4EFB\u52A1\uFF0C\u800C\u662F\u76F4\u63A5\u65B0\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u6765\u6267\u884C\u65B0\u6765\u7684\u4EFB\u52A1\u3002</li><li>PriorityBlockingQueue: \u5177\u6709\u4F18\u5148\u7EA7\u7684\u963B\u585E\u961F\u5217\u3002</li></ul><h3 id="forkjoin" tabindex="-1"><a class="header-anchor" href="#forkjoin" aria-hidden="true">#</a> Forkjoin</h3><ol><li>\u6982\u5FF5</li></ol><ul><li>Forkjoin\u662FJDK 1.7\u540E\u53D1\u5E03\u7684\u591A\u7EBF\u7A0B\u5E76\u53D1\u5904\u7406\u6846\u67B6\uFF0C\u529F\u80FD\u4E0A\u548CJUC\u7C7B\u4F3C, JUC\u66F4\u591A\u65F6\u5019\u662F\u4F7F\u7528\u5355\u4E2A\u7C7B\u5B8C\u6210\u64CD\u4F5C,Forkjoin\u4F7F\u7528\u591A\u4E2A\u7C7B\u540C\u65F6\u5B8C\u6210\u67D0\u9879\u5DE5\u4F5C,\u5904\u7406\u4E0A\u6BD4JUC\u66F4\u52A0\u4E30\u5BCC\uFF0C</li><li>\u672C\u8D28\u4E0A\u662F\u5BF9\u7EBF\u7A0B\u6C60\u7684\u4E00\u79CD\u7684\u8865\u5145\uFF0C\u5BF9\u7EBF\u7A0B\u6C60\u529F\u80FD\u7684\u4E00\u79CD\u6269\u5C55\uFF0C\u57FA\u4E8E\u7EBF\u7A0B\u6C60\uFF0C</li><li>\u5B83\u7684\u6838\u5FC3\u601D\u60F3\u5C31\u662F\u5C06\u4E00\u4E2A\u5927\u578B\u7684\u4EFB\u52A1\u62C6\u5206\u6210\u5F88\u591A\u4E2A\u5C0F\u4EFB\u52A1\uFF0C\u7136\u540E\u7531\u591A\u4E2A\u7EBF\u7A0B\u5E76\u53D1\u6267\u884C\uFF0C\u6700\u7EC8\u5C06\u5C0F\u4EFB\u52A1\u7684\u7ED3\u679C\u8FDB\u884C\u6C47\u603B\uFF0C\u751F\u6210\u6700\u7EC8\u7684\u7ED3\u679C\u3002</li></ul><ol start="2"><li>\u57FA\u672C\u4F7F\u7528 \u8BBE\u7F6E\u4E34\u754C\u503C, \u9012\u5F52\u5206\u914D\u4EFB\u52A1, \u77E5\u9053\u4EFB\u52A1\u4E0D\u80FD\u88AB\u518D\u5206</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FolkJoin_</span> <span class="token keyword">extends</span> <span class="token class-name">RecursiveTask</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> start<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> end<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> temp <span class="token operator">=</span> <span class="token number">200_0000L</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">FolkJoin_</span><span class="token punctuation">(</span><span class="token class-name">Long</span> start<span class="token punctuation">,</span> <span class="token class-name">Long</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>start <span class="token operator">=</span> start<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>end <span class="token operator">=</span> end<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">Long</span> <span class="token function">compute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">&lt;</span> temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Long</span> sum <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Long</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">Long</span> avg <span class="token operator">=</span> <span class="token punctuation">(</span>start <span class="token operator">+</span> end<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token class-name">FolkJoin_</span> tast1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FolkJoin_</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> avg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">FolkJoin_</span> tast2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FolkJoin_</span><span class="token punctuation">(</span>avg<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
            tast1<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            tast2<span class="token punctuation">.</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> tast1<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>tast2<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>Main.java</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ForkJoinPool</span> folkJoinPool <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ForkJoinPool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">FolkJoin_</span> task <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FolkJoin_</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">,</span> <span class="token number">10_0000_0000L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
folkJoinPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5F85\u7EED-2" tabindex="-1"><a class="header-anchor" href="#\u5F85\u7EED-2" aria-hidden="true">#</a> \u5F85\u7EED...</h3>`,167);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
